<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='8960' time_ms='1512112214690'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.131-b11
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.131-b11) for windows-amd64 JRE (1.8.0_131-b11), built on Mar 15 2017 01:23:53 by &quot;java_re&quot; with MS VC++ 10.0 (VS2010)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly -XX:CompileThreshold=100 -XX:+LogCompilation -Dfile.encoding=UTF-8 
</args>
<command>
org.java.hotspot.App
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.131-b11
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=D:\Program Files\Java\jdk1.8.0_131\jre\lib\ext;C:\Windows\Sun\Java\lib\ext
java.endorsed.dirs=D:\Program Files\Java\jdk1.8.0_131\jre\lib\endorsed
sun.boot.library.path=D:\Program Files\Java\jdk1.8.0_131\jre\bin
java.library.path=D:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Program Files/Java/jdk1.8.0_131/bin/../jre/bin/server;D:/Program Files/Java/jdk1.8.0_131/bin/../jre/bin;D:/Program Files/Java/jdk1.8.0_131/bin/../jre/lib/amd64;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\Program Files\Java\jdk1.8.0_131\bin;D:\Program Files (x86)\scala\bin;D:\apache-maven-3.5.0\bin;C:\Program Files (x86)\Heimdal\bin\;D:\Program Files\Heimdal\bin\;D:\eclipse;;.
java.home=D:\Program Files\Java\jdk1.8.0_131\jre
java.class.path=D:\git\java-day\java-day\java-hotspot\target\classes
sun.boot.class.path=D:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\sunrsasign.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_131\jre\classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=org.java.hotspot.App
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='6740'/>
<thread_logfile thread='6740' filename='C:\Users\ADMINI~1\AppData\Local\Temp\\hs_c6740_pid8960.log'/>
<writer thread='7864'/>
<thread_logfile thread='7864' filename='C:\Users\ADMINI~1\AppData\Local\Temp\\hs_c7864_pid8960.log'/>
<writer thread='10424'/>
<thread_logfile thread='10424' filename='C:\Users\ADMINI~1\AppData\Local\Temp\\hs_c10424_pid8960.log'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31636'/>
</blob>
<writer thread='7024'/>
<task_queued compile_id='1' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='256' backedge_count='1184' iicount='256' level='3' stamp='0.071' comment='tiered' hot_count='256'/>
<writer thread='7864'/>
Loaded disassembler from D:\Program Files\Java\jdk1.8.0_131\jre\bin\server\hsdis-amd64.dll
Decoding compiled method 0x000000000284a950:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Constants]
  # {method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000000284aae0: mov    0x8(%rdx),%r10d
  0x000000000284aae4: cmp    %rax,%r10
  0x000000000284aae7: jne    0x0000000002785f60  ;   {runtime_call}
  0x000000000284aaed: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000000284aaf8: data16 data16 xchg %ax,%ax
  0x000000000284aafc: nopl   0x0(%rax)
[Verified Entry Point]
  0x000000000284ab00: mov    %eax,-0x6000(%rsp)
  0x000000000284ab07: push   %rbp
  0x000000000284ab08: sub    $0x30,%rsp
  0x000000000284ab0c: movabs $0x56d623c8,%rax   ;   {metadata(method data for {method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000000284ab16: mov    0xdc(%rax),%esi
  0x000000000284ab1c: add    $0x8,%esi
  0x000000000284ab1f: mov    %esi,0xdc(%rax)
  0x000000000284ab25: movabs $0x56b645d0,%rax   ;   {metadata({method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000000284ab2f: and    $0x1ff8,%esi
  0x000000000284ab35: cmp    $0x0,%esi
  0x000000000284ab38: je     0x000000000284aef6  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x000000000284ab3e: cmp    %r8,%rdx
  0x000000000284ab41: movabs $0x56d623c8,%rax   ;   {metadata(method data for {method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000000284ab4b: movabs $0x108,%rsi
  0x000000000284ab55: jne    0x000000000284ab65
  0x000000000284ab5b: movabs $0x118,%rsi
  0x000000000284ab65: mov    (%rax,%rsi,1),%rdi
  0x000000000284ab69: lea    0x1(%rdi),%rdi
  0x000000000284ab6d: mov    %rdi,(%rax,%rsi,1)
  0x000000000284ab71: je     0x000000000284aee5  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x000000000284ab77: cmp    $0x0,%r8
  0x000000000284ab7b: jne    0x000000000284ab96
  0x000000000284ab7d: movabs $0x56d623c8,%rdi   ;   {metadata(method data for {method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000000284ab87: orl    $0x100,0x120(%rdi)
  0x000000000284ab91: jmpq   0x000000000284ac50
  0x000000000284ab96: movabs $0x16b616d0,%rbx   ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000000284aba0: mov    0x8(%r8),%esi
  0x000000000284aba4: cmp    %rsi,%rbx
  0x000000000284aba7: jne    0x000000000284ac34
  0x000000000284abad: movabs $0x56d623c8,%rdi   ;   {metadata(method data for {method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000000284abb7: mov    0x8(%r8),%ebx
  0x000000000284abbb: cmp    0x130(%rdi),%rbx
  0x000000000284abc2: jne    0x000000000284abd1
  0x000000000284abc4: addq   $0x1,0x138(%rdi)
  0x000000000284abcc: jmpq   0x000000000284ac55
  0x000000000284abd1: cmp    0x140(%rdi),%rbx
  0x000000000284abd8: jne    0x000000000284abe7
  0x000000000284abda: addq   $0x1,0x148(%rdi)
  0x000000000284abe2: jmpq   0x000000000284ac55
  0x000000000284abe7: cmpq   $0x0,0x130(%rdi)
  0x000000000284abf2: jne    0x000000000284ac0b
  0x000000000284abf4: mov    %rbx,0x130(%rdi)
  0x000000000284abfb: movq   $0x1,0x138(%rdi)
  0x000000000284ac06: jmpq   0x000000000284ac55
  0x000000000284ac0b: cmpq   $0x0,0x140(%rdi)
  0x000000000284ac16: jne    0x000000000284ac2f
  0x000000000284ac18: mov    %rbx,0x140(%rdi)
  0x000000000284ac1f: movq   $0x1,0x148(%rdi)
  0x000000000284ac2a: jmpq   0x000000000284ac55
  0x000000000284ac2f: jmpq   0x000000000284ac55
  0x000000000284ac34: movabs $0x56d623c8,%rdi   ;   {metadata(method data for {method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000000284ac3e: subq   $0x1,0x128(%rdi)
  0x000000000284ac46: jmpq   0x000000000284ac50
  0x000000000284ac4b: jmpq   0x000000000284ac55
  0x000000000284ac50: xor    %rax,%rax
  0x000000000284ac53: jmp    0x000000000284ac5f
  0x000000000284ac55: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x000000000284ac5f: cmp    $0x0,%eax
  0x000000000284ac62: movabs $0x56d623c8,%rax   ;   {metadata(method data for {method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000000284ac6c: movabs $0x158,%rsi
  0x000000000284ac76: je     0x000000000284ac86
  0x000000000284ac7c: movabs $0x168,%rsi
  0x000000000284ac86: mov    (%rax,%rsi,1),%rdi
  0x000000000284ac8a: lea    0x1(%rdi),%rdi
  0x000000000284ac8e: mov    %rdi,(%rax,%rsi,1)
  0x000000000284ac92: je     0x000000000284aed4  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x000000000284ac98: cmp    $0x0,%r8
  0x000000000284ac9c: jne    0x000000000284acb7
  0x000000000284ac9e: movabs $0x56d623c8,%rdi   ;   {metadata(method data for {method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000000284aca8: orl    $0x100,0x170(%rdi)
  0x000000000284acb2: jmpq   0x000000000284ad71
  0x000000000284acb7: movabs $0x16b616d0,%rbx   ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000000284acc1: mov    0x8(%r8),%esi
  0x000000000284acc5: cmp    %rsi,%rbx
  0x000000000284acc8: jne    0x000000000284ad55
  0x000000000284acce: movabs $0x56d623c8,%rdi   ;   {metadata(method data for {method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000000284acd8: mov    0x8(%r8),%ebx
  0x000000000284acdc: cmp    0x180(%rdi),%rbx
  0x000000000284ace3: jne    0x000000000284acf2
  0x000000000284ace5: addq   $0x1,0x188(%rdi)
  0x000000000284aced: jmpq   0x000000000284ad71
  0x000000000284acf2: cmp    0x190(%rdi),%rbx
  0x000000000284acf9: jne    0x000000000284ad08
  0x000000000284acfb: addq   $0x1,0x198(%rdi)
  0x000000000284ad03: jmpq   0x000000000284ad71
  0x000000000284ad08: cmpq   $0x0,0x180(%rdi)
  0x000000000284ad13: jne    0x000000000284ad2c
  0x000000000284ad15: mov    %rbx,0x180(%rdi)
  0x000000000284ad1c: movq   $0x1,0x188(%rdi)
  0x000000000284ad27: jmpq   0x000000000284ad71
  0x000000000284ad2c: cmpq   $0x0,0x190(%rdi)
  0x000000000284ad37: jne    0x000000000284ad50
  0x000000000284ad39: mov    %rbx,0x190(%rdi)
  0x000000000284ad40: movq   $0x1,0x198(%rdi)
  0x000000000284ad4b: jmpq   0x000000000284ad71
  0x000000000284ad50: jmpq   0x000000000284ad71
  0x000000000284ad55: movabs $0x56d623c8,%rdi   ;   {metadata(method data for {method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000000284ad5f: subq   $0x1,0x178(%rdi)
  0x000000000284ad67: jmpq   0x000000000284af0d
  0x000000000284ad6c: jmpq   0x000000000284ad71
  0x000000000284ad71: mov    %r8,%rax           ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x000000000284ad74: mov    0xc(%rdx),%esi     ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x000000000284ad77: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x000000000284af16
  0x000000000284ad7a: mov    0xc(%rax),%eax     ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ; implicit exception: dispatches to 0x000000000284af1b
  0x000000000284ad7d: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x000000000284af20
  0x000000000284ad80: cmp    %ebx,%edi
  0x000000000284ad82: movabs $0x56d623c8,%rbx   ;   {metadata(method data for {method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000000284ad8c: movabs $0x1a8,%rdx
  0x000000000284ad96: jne    0x000000000284ada6
  0x000000000284ad9c: movabs $0x1b8,%rdx
  0x000000000284ada6: mov    (%rbx,%rdx,1),%rcx
  0x000000000284adaa: lea    0x1(%rcx),%rcx
  0x000000000284adae: mov    %rcx,(%rbx,%rdx,1)
  0x000000000284adb2: jne    0x000000000284aed4  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x000000000284adb8: mov    $0x0,%ebx
  0x000000000284adbd: jmpq   0x000000000284ae6f  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x000000000284adc2: nopw   0x0(%rax,%rax,1)
  0x000000000284adc8: movslq %ebx,%rdi
  0x000000000284adcb: cmp    0xc(%rsi),%ebx
  0x000000000284adce: jae    0x000000000284af25
  0x000000000284add4: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000000284add9: movslq %ebx,%rcx
  0x000000000284addc: cmp    0xc(%rax),%ebx
  0x000000000284addf: jae    0x000000000284af2e
  0x000000000284ade5: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000000284adea: cmp    %ecx,%edi
  0x000000000284adec: movabs $0x56d623c8,%rdi   ;   {metadata(method data for {method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000000284adf6: movabs $0x1e8,%rcx
  0x000000000284ae00: je     0x000000000284ae10
  0x000000000284ae06: movabs $0x1f8,%rcx
  0x000000000284ae10: mov    (%rdi,%rcx,1),%r8
  0x000000000284ae14: lea    0x1(%r8),%r8
  0x000000000284ae18: mov    %r8,(%rdi,%rcx,1)
  0x000000000284ae1c: jne    0x000000000284aeb2  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000000284ae22: inc    %ebx
  0x000000000284ae24: movabs $0x56d623c8,%rdi   ;   {metadata(method data for {method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000000284ae2e: mov    0xe0(%rdi),%ecx
  0x000000000284ae34: add    $0x8,%ecx
  0x000000000284ae37: mov    %ecx,0xe0(%rdi)
  0x000000000284ae3d: movabs $0x56b645d0,%rdi   ;   {metadata({method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000000284ae47: and    $0xfff8,%ecx
  0x000000000284ae4d: cmp    $0x0,%ecx
  0x000000000284ae50: je     0x000000000284af37  ; OopMap{rax=Oop rsi=Oop off=886}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x000000000284ae56: test   %eax,-0x262ad5c(%rip)        # 0x0000000000220100
                                                ;   {poll}
  0x000000000284ae5c: movabs $0x56d623c8,%rdi   ;   {metadata(method data for {method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000000284ae66: incl   0x208(%rdi)
  0x000000000284ae6c: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x000000000284ae6f: mov    %rdi,%rdx
  0x000000000284ae72: dec    %edx
  0x000000000284ae74: cmp    $0x0,%edi
  0x000000000284ae77: movabs $0x56d623c8,%rdi   ;   {metadata(method data for {method} {0x0000000056b645d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000000284ae81: movabs $0x1c8,%rcx
  0x000000000284ae8b: je     0x000000000284ae9b
  0x000000000284ae91: movabs $0x1d8,%rcx
  0x000000000284ae9b: mov    (%rdi,%rcx,1),%r8
  0x000000000284ae9f: lea    0x1(%r8),%r8
  0x000000000284aea3: mov    %r8,(%rdi,%rcx,1)
  0x000000000284aea7: je     0x000000000284aec3
  0x000000000284aead: jmpq   0x000000000284adc8  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000000284aeb2: mov    $0x0,%eax
  0x000000000284aeb7: add    $0x30,%rsp
  0x000000000284aebb: pop    %rbp
  0x000000000284aebc: test   %eax,-0x262adc2(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284aec2: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x000000000284aec3: mov    $0x1,%eax
  0x000000000284aec8: add    $0x30,%rsp
  0x000000000284aecc: pop    %rbp
  0x000000000284aecd: test   %eax,-0x262add3(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284aed3: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x000000000284aed4: mov    $0x0,%eax
  0x000000000284aed9: add    $0x30,%rsp
  0x000000000284aedd: pop    %rbp
  0x000000000284aede: test   %eax,-0x262ade4(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284aee4: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x000000000284aee5: mov    $0x1,%eax
  0x000000000284aeea: add    $0x30,%rsp
  0x000000000284aeee: pop    %rbp
  0x000000000284aeef: test   %eax,-0x262adf5(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284aef5: retq   
  0x000000000284aef6: mov    %rax,0x8(%rsp)
  0x000000000284aefb: movq   $0xffffffffffffffff,(%rsp)
  0x000000000284af03: callq  0x00000000028400a0  ; OopMap{rdx=Oop r8=Oop off=1064}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x000000000284af08: jmpq   0x000000000284ab3e
  0x000000000284af0d: mov    %r8,(%rsp)
  0x000000000284af11: callq  0x000000000283dbc0  ; OopMap{rdx=Oop off=1078}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x000000000284af16: callq  0x000000000283b9c0  ; OopMap{rax=Oop rsi=Oop off=1083}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000000284af1b: callq  0x000000000283b9c0  ; OopMap{rsi=Oop off=1088}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x000000000284af20: callq  0x000000000283b9c0  ; OopMap{rsi=Oop rax=Oop off=1093}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000000284af25: mov    %rbx,(%rsp)
  0x000000000284af29: callq  0x000000000283b300  ; OopMap{rax=Oop rsi=Oop off=1102}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000000284af2e: mov    %rbx,(%rsp)
  0x000000000284af32: callq  0x000000000283b300  ; OopMap{rax=Oop rsi=Oop off=1111}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000000284af37: mov    %rdi,0x8(%rsp)
  0x000000000284af3c: movq   $0x4a,(%rsp)
  0x000000000284af44: callq  0x00000000028400a0  ; OopMap{rax=Oop rsi=Oop off=1129}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x000000000284af49: jmpq   0x000000000284ae56
  0x000000000284af4e: nop
  0x000000000284af4f: nop
  0x000000000284af50: mov    0x2a8(%r15),%rax
  0x000000000284af57: movabs $0x0,%r10
  0x000000000284af61: mov    %r10,0x2a8(%r15)
  0x000000000284af68: movabs $0x0,%r10
  0x000000000284af72: mov    %r10,0x2b0(%r15)
  0x000000000284af79: add    $0x30,%rsp
  0x000000000284af7d: pop    %rbp
  0x000000000284af7e: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x000000000284af83: hlt    
  0x000000000284af84: hlt    
  0x000000000284af85: hlt    
  0x000000000284af86: hlt    
  0x000000000284af87: hlt    
  0x000000000284af88: hlt    
  0x000000000284af89: hlt    
  0x000000000284af8a: hlt    
  0x000000000284af8b: hlt    
  0x000000000284af8c: hlt    
  0x000000000284af8d: hlt    
  0x000000000284af8e: hlt    
  0x000000000284af8f: hlt    
  0x000000000284af90: hlt    
  0x000000000284af91: hlt    
  0x000000000284af92: hlt    
  0x000000000284af93: hlt    
  0x000000000284af94: hlt    
  0x000000000284af95: hlt    
  0x000000000284af96: hlt    
  0x000000000284af97: hlt    
  0x000000000284af98: hlt    
  0x000000000284af99: hlt    
  0x000000000284af9a: hlt    
  0x000000000284af9b: hlt    
  0x000000000284af9c: hlt    
  0x000000000284af9d: hlt    
  0x000000000284af9e: hlt    
  0x000000000284af9f: hlt    
[Exception Handler]
[Stub Code]
  0x000000000284afa0: callq  0x000000000283d860  ;   {no_reloc}
  0x000000000284afa5: mov    %rsp,-0x28(%rsp)
  0x000000000284afaa: sub    $0x80,%rsp
  0x000000000284afb1: mov    %rax,0x78(%rsp)
  0x000000000284afb6: mov    %rcx,0x70(%rsp)
  0x000000000284afbb: mov    %rdx,0x68(%rsp)
  0x000000000284afc0: mov    %rbx,0x60(%rsp)
  0x000000000284afc5: mov    %rbp,0x50(%rsp)
  0x000000000284afca: mov    %rsi,0x48(%rsp)
  0x000000000284afcf: mov    %rdi,0x40(%rsp)
  0x000000000284afd4: mov    %r8,0x38(%rsp)
  0x000000000284afd9: mov    %r9,0x30(%rsp)
  0x000000000284afde: mov    %r10,0x28(%rsp)
  0x000000000284afe3: mov    %r11,0x20(%rsp)
  0x000000000284afe8: mov    %r12,0x18(%rsp)
  0x000000000284afed: mov    %r13,0x10(%rsp)
  0x000000000284aff2: mov    %r14,0x8(%rsp)
  0x000000000284aff7: mov    %r15,(%rsp)
  0x000000000284affb: movabs $0x61388e30,%rcx   ;   {external_word}
  0x000000000284b005: movabs $0x284afa5,%rdx    ;   {internal_word}
  0x000000000284b00f: mov    %rsp,%r8
  0x000000000284b012: and    $0xfffffffffffffff0,%rsp
  0x000000000284b016: callq  0x0000000061043d40  ;   {runtime_call}
  0x000000000284b01b: hlt    
[Deopt Handler Code]
  0x000000000284b01c: movabs $0x284b01c,%r10    ;   {section_word}
  0x000000000284b026: push   %r10
  0x000000000284b028: jmpq   0x0000000002787600  ;   {runtime_call}
  0x000000000284b02d: hlt    
  0x000000000284b02e: hlt    
  0x000000000284b02f: hlt    
<nmethod compile_id='1' compiler='C1' level='3' entry='0x000000000284aae0' size='2504' address='0x000000000284a950' relocation_offset='288' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='274' backedge_count='1333' iicount='274' stamp='0.075'/>
<writer thread='7024'/>
<task_queued compile_id='2' method='java/lang/String indexOf (II)I' bytes='70' count='125' backedge_count='3072' iicount='125' level='3' stamp='0.076' comment='tiered' hot_count='125'/>
<task_queued compile_id='3' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' level='3' stamp='0.076' comment='tiered' hot_count='256'/>
<task_queued compile_id='4' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='256' iicount='256' level='3' stamp='0.076' comment='tiered' hot_count='256'/>
<task_queued compile_id='5' method='java/lang/String hashCode ()I' bytes='55' count='429' backedge_count='6144' iicount='429' level='3' stamp='0.076' comment='tiered' hot_count='429'/>
Decoding compiled method 0x0000000002848c90:
Code:
[Entry Point]
  # {method} {0x0000000056b796c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x0000000002848e00: mov    0x8(%rdx),%r10d
  0x0000000002848e04: cmp    %r10,%rax
  0x0000000002848e07: je     0x0000000002848e18
  0x0000000002848e0d: jmpq   0x0000000002785f60  ;   {runtime_call}
  0x0000000002848e12: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000000002848e18: mov    %eax,-0x6000(%rsp)
  0x0000000002848e1f: push   %rbp
  0x0000000002848e20: mov    %rsp,%rbp
  0x0000000002848e23: sub    $0x80,%rsp
  0x0000000002848e2a: mov    %rsi,0x30(%rsp)
  0x0000000002848e2f: mov    %rdi,0x28(%rsp)
  0x0000000002848e34: mov    %r9,0x48(%rsp)
  0x0000000002848e39: cmp    $0x0,%r9
  0x0000000002848e3d: lea    0x48(%rsp),%rax
  0x0000000002848e42: cmove  0x48(%rsp),%rax
  0x0000000002848e48: mov    %rax,0x20(%rsp)
  0x0000000002848e4d: mov    %r8,%r9
  0x0000000002848e50: mov    %rdx,0x38(%rsp)
  0x0000000002848e55: cmp    $0x0,%rdx
  0x0000000002848e59: lea    0x38(%rsp),%r8
  0x0000000002848e5e: cmove  0x38(%rsp),%r8
  0x0000000002848e64: movabs $0xd5c00c78,%r14   ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000002848e6e: mov    %r14,0x68(%rsp)
  0x0000000002848e73: lea    0x68(%rsp),%r14
  0x0000000002848e78: mov    %r14,%rdx          ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x0000000002848e7b: movabs $0x2848e7b,%r10    ;   {section_word}
  0x0000000002848e85: mov    %r10,0x1e0(%r15)
  0x0000000002848e8c: mov    %rsp,0x1d8(%r15)
  0x0000000002848e93: cmpb   $0x0,0x5ed14928(%rip)        # 0x000000006155d7c2
                                                ;   {external_word}
  0x0000000002848e9a: je     0x0000000002848ee2
  0x0000000002848ea0: push   %rdx
  0x0000000002848ea1: push   %r8
  0x0000000002848ea3: push   %r9
  0x0000000002848ea5: movabs $0x56b796b8,%rdx   ;   {metadata({method} {0x0000000056b796c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002848eaf: mov    %r15,%rcx
  0x0000000002848eb2: sub    $0x20,%rsp
  0x0000000002848eb6: test   $0xf,%esp
  0x0000000002848ebc: je     0x0000000002848ed4
  0x0000000002848ec2: sub    $0x8,%rsp
  0x0000000002848ec6: callq  0x0000000060f7cdd0  ;   {runtime_call}
  0x0000000002848ecb: add    $0x8,%rsp
  0x0000000002848ecf: jmpq   0x0000000002848ed9
  0x0000000002848ed4: callq  0x0000000060f7cdd0  ;   {runtime_call}
  0x0000000002848ed9: add    $0x20,%rsp
  0x0000000002848edd: pop    %r9
  0x0000000002848edf: pop    %r8
  0x0000000002848ee1: pop    %rdx
  0x0000000002848ee2: lea    0x1f8(%r15),%rcx
  0x0000000002848ee9: movl   $0x4,0x270(%r15)
  0x0000000002848ef4: callq  0x0000000066c1098a  ;   {runtime_call}
  0x0000000002848ef9: vzeroupper 
  0x0000000002848efc: movl   $0x5,0x270(%r15)
  0x0000000002848f07: mov    %r15d,%ecx
  0x0000000002848f0a: shr    $0x4,%ecx
  0x0000000002848f0d: and    $0xffc,%ecx
  0x0000000002848f13: movabs $0x230000,%r10     ;   {external_word}
  0x0000000002848f1d: mov    %ecx,(%r10,%rcx,1)
  0x0000000002848f21: cmpl   $0x0,0x5ed15475(%rip)        # 0x000000006155e3a0
                                                ;   {external_word}
  0x0000000002848f2b: jne    0x0000000002848f3f
  0x0000000002848f31: cmpl   $0x0,0x30(%r15)
  0x0000000002848f39: je     0x0000000002848f58
  0x0000000002848f3f: mov    %r15,%rcx
  0x0000000002848f42: mov    %rsp,%r12
  0x0000000002848f45: sub    $0x20,%rsp
  0x0000000002848f49: and    $0xfffffffffffffff0,%rsp
  0x0000000002848f4d: callq  0x0000000060f93f40  ;   {runtime_call}
  0x0000000002848f52: mov    %r12,%rsp
  0x0000000002848f55: xor    %r12,%r12
  0x0000000002848f58: movl   $0x8,0x270(%r15)
  0x0000000002848f63: cmpl   $0x1,0x29c(%r15)
  0x0000000002848f6e: je     0x0000000002848ffe
  0x0000000002848f74: cmpb   $0x0,0x5ed14847(%rip)        # 0x000000006155d7c2
                                                ;   {external_word}
  0x0000000002848f7b: je     0x0000000002848fb9
  0x0000000002848f81: movabs $0x56b796b8,%rdx   ;   {metadata({method} {0x0000000056b796c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002848f8b: mov    %r15,%rcx
  0x0000000002848f8e: sub    $0x20,%rsp
  0x0000000002848f92: test   $0xf,%esp
  0x0000000002848f98: je     0x0000000002848fb0
  0x0000000002848f9e: sub    $0x8,%rsp
  0x0000000002848fa2: callq  0x0000000060f7cdd0  ;   {runtime_call}
  0x0000000002848fa7: add    $0x8,%rsp
  0x0000000002848fab: jmpq   0x0000000002848fb5
  0x0000000002848fb0: callq  0x0000000060f7cdd0  ;   {runtime_call}
  0x0000000002848fb5: add    $0x20,%rsp
  0x0000000002848fb9: movabs $0x0,%r10
  0x0000000002848fc3: mov    %r10,0x1d8(%r15)
  0x0000000002848fca: movabs $0x0,%r10
  0x0000000002848fd4: mov    %r10,0x1e0(%r15)
  0x0000000002848fdb: mov    0x38(%r15),%rcx
  0x0000000002848fdf: movl   $0x0,0x100(%rcx)
  0x0000000002848fe9: leaveq 
  0x0000000002848fea: cmpq   $0x0,0x8(%r15)
  0x0000000002848ff2: jne    0x0000000002848ff9
  0x0000000002848ff8: retq   
  0x0000000002848ff9: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002848ffe: mov    %rsp,%r12
  0x0000000002849001: sub    $0x20,%rsp
  0x0000000002849005: and    $0xfffffffffffffff0,%rsp
  0x0000000002849009: callq  0x0000000060f7cdf0  ;   {runtime_call}
  0x000000000284900e: mov    %r12,%rsp
  0x0000000002849011: xor    %r12,%r12
  0x0000000002849014: jmpq   0x0000000002848f74
  0x0000000002849019: hlt    
  0x000000000284901a: hlt    
  0x000000000284901b: hlt    
  0x000000000284901c: hlt    
  0x000000000284901d: hlt    
  0x000000000284901e: hlt    
  0x000000000284901f: hlt    
<nmethod compile_id='6' compile_kind='c2n' level='0' entry='0x0000000002848e00' size='912' address='0x0000000002848c90' relocation_offset='288' consts_offset='912' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='896' iicount='896' stamp='0.078'/>
<writer thread='7864'/>
Decoding compiled method 0x000000000284a1d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000056b65140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x000000000284a360: mov    0x8(%rdx),%r10d
  0x000000000284a364: cmp    %rax,%r10
  0x000000000284a367: jne    0x0000000002785f60  ;   {runtime_call}
  0x000000000284a36d: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000000284a378: data16 data16 xchg %ax,%ax
  0x000000000284a37c: nopl   0x0(%rax)
[Verified Entry Point]
  0x000000000284a380: mov    %eax,-0x6000(%rsp)
  0x000000000284a387: push   %rbp
  0x000000000284a388: sub    $0x30,%rsp
  0x000000000284a38c: movabs $0x56d6dae0,%rax   ;   {metadata(method data for {method} {0x0000000056b65140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000000284a396: mov    0xdc(%rax),%esi
  0x000000000284a39c: add    $0x8,%esi
  0x000000000284a39f: mov    %esi,0xdc(%rax)
  0x000000000284a3a5: movabs $0x56b65138,%rax   ;   {metadata({method} {0x0000000056b65140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000000284a3af: and    $0x1ff8,%esi
  0x000000000284a3b5: cmp    $0x0,%esi
  0x000000000284a3b8: je     0x000000000284a5c9  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x000000000284a3be: mov    0xc(%rdx),%eax     ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x000000000284a3c1: mov    0xc(%rax),%esi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x000000000284a5e0
  0x000000000284a3c4: cmp    $0x0,%r9d
  0x000000000284a3c8: movabs $0x56d6dae0,%rdi   ;   {metadata(method data for {method} {0x0000000056b65140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000000284a3d2: movabs $0x108,%rbx
  0x000000000284a3dc: jge    0x000000000284a3ec
  0x000000000284a3e2: movabs $0x118,%rbx
  0x000000000284a3ec: mov    (%rdi,%rbx,1),%rcx
  0x000000000284a3f0: lea    0x1(%rcx),%rcx
  0x000000000284a3f4: mov    %rcx,(%rdi,%rbx,1)
  0x000000000284a3f8: jge    0x000000000284a41a  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000000000284a3fe: movabs $0x56d6dae0,%r9    ;   {metadata(method data for {method} {0x0000000056b65140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000000284a408: incl   0x128(%r9)
  0x000000000284a40f: mov    $0x0,%r9d
  0x000000000284a415: jmpq   0x000000000284a453  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x000000000284a41a: cmp    %esi,%r9d
  0x000000000284a41d: movabs $0x56d6dae0,%rdi   ;   {metadata(method data for {method} {0x0000000056b65140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000000284a427: movabs $0x140,%rbx
  0x000000000284a431: jl     0x000000000284a441
  0x000000000284a437: movabs $0x150,%rbx
  0x000000000284a441: mov    (%rdi,%rbx,1),%rcx
  0x000000000284a445: lea    0x1(%rcx),%rcx
  0x000000000284a449: mov    %rcx,(%rdi,%rbx,1)
  0x000000000284a44d: jge    0x000000000284a5b8  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x000000000284a453: cmp    $0x10000,%r8d
  0x000000000284a45a: movabs $0x56d6dae0,%rdi   ;   {metadata(method data for {method} {0x0000000056b65140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000000284a464: movabs $0x160,%rbx
  0x000000000284a46e: jge    0x000000000284a47e
  0x000000000284a474: movabs $0x170,%rbx
  0x000000000284a47e: mov    (%rdi,%rbx,1),%rcx
  0x000000000284a482: lea    0x1(%rcx),%rcx
  0x000000000284a486: mov    %rcx,(%rdi,%rbx,1)
  0x000000000284a48a: jge    0x000000000284a58c
  0x000000000284a490: jmpq   0x000000000284a52e  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x000000000284a495: data16 xchg %ax,%ax
  0x000000000284a498: movslq %r9d,%rdx
  0x000000000284a49b: cmp    0xc(%rax),%r9d
  0x000000000284a49f: jae    0x000000000284a5e5
  0x000000000284a4a5: movzwl 0x10(%rax,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000000284a4aa: cmp    %r8d,%edx
  0x000000000284a4ad: movabs $0x56d6dae0,%rdx   ;   {metadata(method data for {method} {0x0000000056b65140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000000284a4b7: movabs $0x1a0,%rdi
  0x000000000284a4c1: jne    0x000000000284a4d1
  0x000000000284a4c7: movabs $0x1b0,%rdi
  0x000000000284a4d1: mov    (%rdx,%rdi,1),%rbx
  0x000000000284a4d5: lea    0x1(%rbx),%rbx
  0x000000000284a4d9: mov    %rbx,(%rdx,%rdi,1)
  0x000000000284a4dd: je     0x000000000284a56c  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000000284a4e3: inc    %r9d
  0x000000000284a4e6: movabs $0x56d6dae0,%rdx   ;   {metadata(method data for {method} {0x0000000056b65140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000000284a4f0: mov    0xe0(%rdx),%edi
  0x000000000284a4f6: add    $0x8,%edi
  0x000000000284a4f9: mov    %edi,0xe0(%rdx)
  0x000000000284a4ff: movabs $0x56b65138,%rdx   ;   {metadata({method} {0x0000000056b65140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000000284a509: and    $0xfff8,%edi
  0x000000000284a50f: cmp    $0x0,%edi
  0x000000000284a512: je     0x000000000284a5ee  ; OopMap{rax=Oop off=440}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x000000000284a518: test   %eax,-0x262a41e(%rip)        # 0x0000000000220100
                                                ;   {poll}
  0x000000000284a51e: movabs $0x56d6dae0,%rdx   ;   {metadata(method data for {method} {0x0000000056b65140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000000284a528: incl   0x1c0(%rdx)        ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x000000000284a52e: cmp    %esi,%r9d
  0x000000000284a531: movabs $0x56d6dae0,%rdx   ;   {metadata(method data for {method} {0x0000000056b65140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000000284a53b: movabs $0x180,%rdi
  0x000000000284a545: jge    0x000000000284a555
  0x000000000284a54b: movabs $0x190,%rdi
  0x000000000284a555: mov    (%rdx,%rdi,1),%rbx
  0x000000000284a559: lea    0x1(%rbx),%rbx
  0x000000000284a55d: mov    %rbx,(%rdx,%rdi,1)
  0x000000000284a561: jge    0x000000000284a57b
  0x000000000284a567: jmpq   0x000000000284a498  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000000284a56c: mov    %r9,%rax
  0x000000000284a56f: add    $0x30,%rsp
  0x000000000284a573: pop    %rbp
  0x000000000284a574: test   %eax,-0x262a47a(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284a57a: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x000000000284a57b: mov    $0xffffffff,%eax
  0x000000000284a580: add    $0x30,%rsp
  0x000000000284a584: pop    %rbp
  0x000000000284a585: test   %eax,-0x262a48b(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284a58b: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x000000000284a58c: mov    %rdx,%rsi
  0x000000000284a58f: movabs $0x56d6dae0,%rdi   ;   {metadata(method data for {method} {0x0000000056b65140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000000284a599: addq   $0x1,0x1d8(%rdi)
  0x000000000284a5a1: nop
  0x000000000284a5a2: nop
  0x000000000284a5a3: nop
  0x000000000284a5a4: nop
  0x000000000284a5a5: nop
  0x000000000284a5a6: nop
  0x000000000284a5a7: callq  0x00000000027861a0  ; OopMap{off=588}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x000000000284a5ac: add    $0x30,%rsp
  0x000000000284a5b0: pop    %rbp
  0x000000000284a5b1: test   %eax,-0x262a4b7(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284a5b7: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x000000000284a5b8: mov    $0xffffffff,%eax
  0x000000000284a5bd: add    $0x30,%rsp
  0x000000000284a5c1: pop    %rbp
  0x000000000284a5c2: test   %eax,-0x262a4c8(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284a5c8: retq   
  0x000000000284a5c9: mov    %rax,0x8(%rsp)
  0x000000000284a5ce: movq   $0xffffffffffffffff,(%rsp)
  0x000000000284a5d6: callq  0x00000000028400a0  ; OopMap{rdx=Oop off=635}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x000000000284a5db: jmpq   0x000000000284a3be
  0x000000000284a5e0: callq  0x000000000283b9c0  ; OopMap{rdx=Oop rax=Oop off=645}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000000000284a5e5: mov    %r9,(%rsp)
  0x000000000284a5e9: callq  0x000000000283b300  ; OopMap{rax=Oop off=654}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x000000000284a5ee: mov    %rdx,0x8(%rsp)
  0x000000000284a5f3: movq   $0x3a,(%rsp)
  0x000000000284a5fb: callq  0x00000000028400a0  ; OopMap{rax=Oop off=672}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x000000000284a600: jmpq   0x000000000284a518
  0x000000000284a605: nop
  0x000000000284a606: nop
  0x000000000284a607: mov    0x2a8(%r15),%rax
  0x000000000284a60e: movabs $0x0,%r10
  0x000000000284a618: mov    %r10,0x2a8(%r15)
  0x000000000284a61f: movabs $0x0,%r10
  0x000000000284a629: mov    %r10,0x2b0(%r15)
  0x000000000284a630: add    $0x30,%rsp
  0x000000000284a634: pop    %rbp
  0x000000000284a635: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x000000000284a63a: hlt    
  0x000000000284a63b: hlt    
  0x000000000284a63c: hlt    
  0x000000000284a63d: hlt    
  0x000000000284a63e: hlt    
  0x000000000284a63f: hlt    
[Stub Code]
  0x000000000284a640: nop                       ;   {no_reloc}
  0x000000000284a641: nop
  0x000000000284a642: nop
  0x000000000284a643: nop
  0x000000000284a644: nop
  0x000000000284a645: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000284a64f: jmpq   0x000000000284a64f  ;   {runtime_call}
[Exception Handler]
  0x000000000284a654: callq  0x000000000283d860  ;   {runtime_call}
  0x000000000284a659: mov    %rsp,-0x28(%rsp)
  0x000000000284a65e: sub    $0x80,%rsp
  0x000000000284a665: mov    %rax,0x78(%rsp)
  0x000000000284a66a: mov    %rcx,0x70(%rsp)
  0x000000000284a66f: mov    %rdx,0x68(%rsp)
  0x000000000284a674: mov    %rbx,0x60(%rsp)
  0x000000000284a679: mov    %rbp,0x50(%rsp)
  0x000000000284a67e: mov    %rsi,0x48(%rsp)
  0x000000000284a683: mov    %rdi,0x40(%rsp)
  0x000000000284a688: mov    %r8,0x38(%rsp)
  0x000000000284a68d: mov    %r9,0x30(%rsp)
  0x000000000284a692: mov    %r10,0x28(%rsp)
  0x000000000284a697: mov    %r11,0x20(%rsp)
  0x000000000284a69c: mov    %r12,0x18(%rsp)
  0x000000000284a6a1: mov    %r13,0x10(%rsp)
  0x000000000284a6a6: mov    %r14,0x8(%rsp)
  0x000000000284a6ab: mov    %r15,(%rsp)
  0x000000000284a6af: movabs $0x61388e30,%rcx   ;   {external_word}
  0x000000000284a6b9: movabs $0x284a659,%rdx    ;   {internal_word}
  0x000000000284a6c3: mov    %rsp,%r8
  0x000000000284a6c6: and    $0xfffffffffffffff0,%rsp
  0x000000000284a6ca: callq  0x0000000061043d40  ;   {runtime_call}
  0x000000000284a6cf: hlt    
[Deopt Handler Code]
  0x000000000284a6d0: movabs $0x284a6d0,%r10    ;   {section_word}
  0x000000000284a6da: push   %r10
  0x000000000284a6dc: jmpq   0x0000000002787600  ;   {runtime_call}
  0x000000000284a6e1: hlt    
  0x000000000284a6e2: hlt    
  0x000000000284a6e3: hlt    
  0x000000000284a6e4: hlt    
  0x000000000284a6e5: hlt    
  0x000000000284a6e6: hlt    
  0x000000000284a6e7: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x000000000284a360' size='1848' address='0x000000000284a1d0' relocation_offset='288' insts_offset='400' stub_offset='1136' scopes_data_offset='1312' scopes_pcs_offset='1472' dependencies_offset='1824' nul_chk_table_offset='1832' method='java/lang/String indexOf (II)I' bytes='70' count='249' backedge_count='6408' iicount='249' stamp='0.081'/>
<writer thread='7024'/>
<task_queued compile_id='7' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='2432' iicount='2432' level='3' stamp='0.081' comment='tiered' hot_count='2432'/>
<writer thread='7864'/>
Decoding compiled method 0x00000000028486d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000056b64fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002848840: mov    0x8(%rdx),%r10d
  0x0000000002848844: cmp    %rax,%r10
  0x0000000002848847: jne    0x0000000002785f60  ;   {runtime_call}
  0x000000000284884d: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002848858: data16 data16 xchg %ax,%ax
  0x000000000284885c: nopl   0x0(%rax)
[Verified Entry Point]
  0x0000000002848860: mov    %eax,-0x6000(%rsp)
  0x0000000002848867: push   %rbp
  0x0000000002848868: sub    $0x30,%rsp
  0x000000000284886c: movabs $0x56d44530,%rax   ;   {metadata(method data for {method} {0x0000000056b64fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002848876: mov    0xdc(%rax),%esi
  0x000000000284887c: add    $0x8,%esi
  0x000000000284887f: mov    %esi,0xdc(%rax)
  0x0000000002848885: movabs $0x56b64fb8,%rax   ;   {metadata({method} {0x0000000056b64fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000000284888f: and    $0x1ff8,%esi
  0x0000000002848895: cmp    $0x0,%esi
  0x0000000002848898: je     0x00000000028489d1  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x000000000284889e: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x00000000028488a1: cmp    $0x0,%eax
  0x00000000028488a4: movabs $0x56d44530,%rsi   ;   {metadata(method data for {method} {0x0000000056b64fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000028488ae: movabs $0x108,%rdi
  0x00000000028488b8: jne    0x00000000028488c8
  0x00000000028488be: movabs $0x118,%rdi
  0x00000000028488c8: mov    (%rsi,%rdi,1),%rbx
  0x00000000028488cc: lea    0x1(%rbx),%rbx
  0x00000000028488d0: mov    %rbx,(%rsi,%rdi,1)
  0x00000000028488d4: jne    0x00000000028489c5  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x00000000028488da: mov    0xc(%rdx),%esi     ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x00000000028488dd: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x00000000028489e8
  0x00000000028488e0: cmp    $0x0,%edi
  0x00000000028488e3: movabs $0x56d44530,%rbx   ;   {metadata(method data for {method} {0x0000000056b64fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000028488ed: movabs $0x128,%rcx
  0x00000000028488f7: jle    0x0000000002848907
  0x00000000028488fd: movabs $0x138,%rcx
  0x0000000002848907: mov    (%rbx,%rcx,1),%r8
  0x000000000284890b: lea    0x1(%r8),%r8
  0x000000000284890f: mov    %r8,(%rbx,%rcx,1)
  0x0000000002848913: jle    0x00000000028489c5  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x0000000002848919: mov    $0x0,%ebx
  0x000000000284891e: jmpq   0x000000000284898a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x0000000002848923: nopl   0x0(%rax,%rax,1)
  0x0000000002848928: movslq %ebx,%rcx
  0x000000000284892b: movzwl 0x10(%rsi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002848930: mov    %rax,%r8
  0x0000000002848933: shl    $0x5,%eax
  0x0000000002848936: sub    %r8d,%eax
  0x0000000002848939: add    %ecx,%eax
  0x000000000284893b: inc    %ebx
  0x000000000284893d: movabs $0x56d44530,%rcx   ;   {metadata(method data for {method} {0x0000000056b64fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002848947: mov    0xe0(%rcx),%r8d
  0x000000000284894e: add    $0x8,%r8d
  0x0000000002848952: mov    %r8d,0xe0(%rcx)
  0x0000000002848959: movabs $0x56b64fb8,%rcx   ;   {metadata({method} {0x0000000056b64fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002848963: and    $0xfff8,%r8d
  0x000000000284896a: cmp    $0x0,%r8d
  0x000000000284896e: je     0x00000000028489ed  ; OopMap{rsi=Oop rdx=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x0000000002848974: test   %eax,-0x262887a(%rip)        # 0x0000000000220100
                                                ;   {poll}
  0x000000000284897a: movabs $0x56d44530,%rcx   ;   {metadata(method data for {method} {0x0000000056b64fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002848984: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x000000000284898a: cmp    %edi,%ebx
  0x000000000284898c: movabs $0x56d44530,%rcx   ;   {metadata(method data for {method} {0x0000000056b64fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002848996: movabs $0x148,%r8
  0x00000000028489a0: jge    0x00000000028489b0
  0x00000000028489a6: movabs $0x158,%r8
  0x00000000028489b0: mov    (%rcx,%r8,1),%r9
  0x00000000028489b4: lea    0x1(%r9),%r9
  0x00000000028489b8: mov    %r9,(%rcx,%r8,1)
  0x00000000028489bc: jl     0x0000000002848928  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00000000028489c2: mov    %eax,0x10(%rdx)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x00000000028489c5: add    $0x30,%rsp
  0x00000000028489c9: pop    %rbp
  0x00000000028489ca: test   %eax,-0x26288d0(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x00000000028489d0: retq   
  0x00000000028489d1: mov    %rax,0x8(%rsp)
  0x00000000028489d6: movq   $0xffffffffffffffff,(%rsp)
  0x00000000028489de: callq  0x00000000028400a0  ; OopMap{rdx=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x00000000028489e3: jmpq   0x000000000284889e
  0x00000000028489e8: callq  0x000000000283b9c0  ; OopMap{rdx=Oop rsi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00000000028489ed: mov    %rcx,0x8(%rsp)
  0x00000000028489f2: movq   $0x2d,(%rsp)
  0x00000000028489fa: callq  0x00000000028400a0  ; OopMap{rsi=Oop rdx=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x00000000028489ff: jmpq   0x0000000002848974
  0x0000000002848a04: nop
  0x0000000002848a05: nop
  0x0000000002848a06: mov    0x2a8(%r15),%rax
  0x0000000002848a0d: movabs $0x0,%r10
  0x0000000002848a17: mov    %r10,0x2a8(%r15)
  0x0000000002848a1e: movabs $0x0,%r10
  0x0000000002848a28: mov    %r10,0x2b0(%r15)
  0x0000000002848a2f: add    $0x30,%rsp
  0x0000000002848a33: pop    %rbp
  0x0000000002848a34: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x0000000002848a39: hlt    
  0x0000000002848a3a: hlt    
  0x0000000002848a3b: hlt    
  0x0000000002848a3c: hlt    
  0x0000000002848a3d: hlt    
  0x0000000002848a3e: hlt    
  0x0000000002848a3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002848a40: callq  0x000000000283d860  ;   {no_reloc}
  0x0000000002848a45: mov    %rsp,-0x28(%rsp)
  0x0000000002848a4a: sub    $0x80,%rsp
  0x0000000002848a51: mov    %rax,0x78(%rsp)
  0x0000000002848a56: mov    %rcx,0x70(%rsp)
  0x0000000002848a5b: mov    %rdx,0x68(%rsp)
  0x0000000002848a60: mov    %rbx,0x60(%rsp)
  0x0000000002848a65: mov    %rbp,0x50(%rsp)
  0x0000000002848a6a: mov    %rsi,0x48(%rsp)
  0x0000000002848a6f: mov    %rdi,0x40(%rsp)
  0x0000000002848a74: mov    %r8,0x38(%rsp)
  0x0000000002848a79: mov    %r9,0x30(%rsp)
  0x0000000002848a7e: mov    %r10,0x28(%rsp)
  0x0000000002848a83: mov    %r11,0x20(%rsp)
  0x0000000002848a88: mov    %r12,0x18(%rsp)
  0x0000000002848a8d: mov    %r13,0x10(%rsp)
  0x0000000002848a92: mov    %r14,0x8(%rsp)
  0x0000000002848a97: mov    %r15,(%rsp)
  0x0000000002848a9b: movabs $0x61388e30,%rcx   ;   {external_word}
  0x0000000002848aa5: movabs $0x2848a45,%rdx    ;   {internal_word}
  0x0000000002848aaf: mov    %rsp,%r8
  0x0000000002848ab2: and    $0xfffffffffffffff0,%rsp
  0x0000000002848ab6: callq  0x0000000061043d40  ;   {runtime_call}
  0x0000000002848abb: hlt    
[Deopt Handler Code]
  0x0000000002848abc: movabs $0x2848abc,%r10    ;   {section_word}
  0x0000000002848ac6: push   %r10
  0x0000000002848ac8: jmpq   0x0000000002787600  ;   {runtime_call}
  0x0000000002848acd: hlt    
  0x0000000002848ace: hlt    
  0x0000000002848acf: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x0000000002848840' size='1448' address='0x00000000028486d0' relocation_offset='288' insts_offset='368' stub_offset='880' scopes_data_offset='1032' scopes_pcs_offset='1152' dependencies_offset='1424' nul_chk_table_offset='1432' method='java/lang/String hashCode ()I' bytes='55' count='459' backedge_count='6491' iicount='459' stamp='0.083'/>
<writer thread='7024'/>
<task_queued compile_id='8' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='9984' iicount='9984' stamp='0.083' comment='tiered' hot_count='9984'/>
<task_queued compile_id='9' method='java/lang/Math min (II)I' bytes='11' count='512' iicount='512' level='3' stamp='0.083' comment='tiered' hot_count='512'/>
<task_queued compile_id='10' method='java/lang/String charAt (I)C' bytes='29' count='88576' iicount='88576' stamp='0.083' comment='tiered' hot_count='88576'/>
<task_queued compile_id='11' method='java/lang/String length ()I' bytes='6' count='26240' iicount='26240' stamp='0.083' comment='tiered' hot_count='26240'/>
<task_queued compile_id='12' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='896' iicount='896' level='3' stamp='0.083' comment='tiered' hot_count='896'/>
<task_queued compile_id='13' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='896' iicount='896' level='3' stamp='0.083' comment='tiered' hot_count='896'/>
<writer thread='7864'/>
Decoding compiled method 0x0000000002849450:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000056b63160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002849620: mov    0x8(%rdx),%r10d
  0x0000000002849624: cmp    %rax,%r10
  0x0000000002849627: jne    0x0000000002785f60  ;   {runtime_call}
  0x000000000284962d: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002849638: data16 data16 xchg %ax,%ax
  0x000000000284963c: nopl   0x0(%rax)
[Verified Entry Point]
  0x0000000002849640: mov    %eax,-0x6000(%rsp)
  0x0000000002849647: push   %rbp
  0x0000000002849648: sub    $0x60,%rsp
  0x000000000284964c: movabs $0x56d70048,%rsi   ;   {metadata(method data for {method} {0x0000000056b63160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002849656: mov    0xdc(%rsi),%ebx
  0x000000000284965c: add    $0x8,%ebx
  0x000000000284965f: mov    %ebx,0xdc(%rsi)
  0x0000000002849665: movabs $0x56b63158,%rsi   ;   {metadata({method} {0x0000000056b63160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000000284966f: and    $0x1ff8,%ebx
  0x0000000002849675: cmp    $0x0,%ebx
  0x0000000002849678: je     0x000000000284993e  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x000000000284967e: mov    %rdx,%rsi
  0x0000000002849681: movabs $0x56d70048,%rbx   ;   {metadata(method data for {method} {0x0000000056b63160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000000284968b: addq   $0x1,0x108(%rbx)
  0x0000000002849693: movabs $0x56c933b0,%rsi   ;   {metadata(method data for {method} {0x0000000056b60488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000000284969d: mov    0xdc(%rsi),%ebx
  0x00000000028496a3: add    $0x8,%ebx
  0x00000000028496a6: mov    %ebx,0xdc(%rsi)
  0x00000000028496ac: movabs $0x56b60480,%rsi   ;   {metadata({method} {0x0000000056b60488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000028496b6: and    $0x7ffff8,%ebx
  0x00000000028496bc: cmp    $0x0,%ebx
  0x00000000028496bf: je     0x0000000002849955
  0x00000000028496c5: cmp    $0x0,%r9d
  0x00000000028496c9: movabs $0x56d70048,%rsi   ;   {metadata(method data for {method} {0x0000000056b63160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000028496d3: movabs $0x118,%rbx
  0x00000000028496dd: jge    0x00000000028496ed
  0x00000000028496e3: movabs $0x128,%rbx
  0x00000000028496ed: mov    (%rsi,%rbx,1),%rax
  0x00000000028496f1: lea    0x1(%rax),%rax
  0x00000000028496f5: mov    %rax,(%rsi,%rbx,1)
  0x00000000028496f9: jl     0x00000000028498fe  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x00000000028496ff: cmp    $0x0,%edi
  0x0000000002849702: movabs $0x56d70048,%rsi   ;   {metadata(method data for {method} {0x0000000056b63160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000000284970c: movabs $0x148,%rbx
  0x0000000002849716: jg     0x0000000002849726
  0x000000000284971c: movabs $0x158,%rbx
  0x0000000002849726: mov    (%rsi,%rbx,1),%rax
  0x000000000284972a: lea    0x1(%rax),%rax
  0x000000000284972e: mov    %rax,(%rsi,%rbx,1)
  0x0000000002849732: jg     0x00000000028497ae  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x0000000002849738: cmp    $0x0,%edi
  0x000000000284973b: movabs $0x56d70048,%rsi   ;   {metadata(method data for {method} {0x0000000056b63160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002849745: movabs $0x168,%rbx
  0x000000000284974f: jge    0x000000000284975f
  0x0000000002849755: movabs $0x178,%rbx
  0x000000000284975f: mov    (%rsi,%rbx,1),%rax
  0x0000000002849763: lea    0x1(%rax),%rax
  0x0000000002849767: mov    %rax,(%rsi,%rbx,1)
  0x000000000284976b: jl     0x00000000028498be  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x0000000002849771: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x000000000284996c
  0x0000000002849775: cmp    %esi,%r9d
  0x0000000002849778: movabs $0x56d70048,%rsi   ;   {metadata(method data for {method} {0x0000000056b63160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002849782: movabs $0x198,%rbx
  0x000000000284978c: jg     0x000000000284979c
  0x0000000002849792: movabs $0x1a8,%rbx
  0x000000000284979c: mov    (%rsi,%rbx,1),%rax
  0x00000000028497a0: lea    0x1(%rax),%rax
  0x00000000028497a4: mov    %rax,(%rsi,%rbx,1)
  0x00000000028497a8: jle    0x0000000002849846  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x00000000028497ae: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x0000000002849971
  0x00000000028497b2: sub    %edi,%esi
  0x00000000028497b4: cmp    %esi,%r9d
  0x00000000028497b7: movabs $0x56d70048,%rsi   ;   {metadata(method data for {method} {0x0000000056b63160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000028497c1: movabs $0x1b8,%rbx
  0x00000000028497cb: jle    0x00000000028497db
  0x00000000028497d1: movabs $0x1c8,%rbx
  0x00000000028497db: mov    (%rsi,%rbx,1),%rax
  0x00000000028497df: lea    0x1(%rax),%rax
  0x00000000028497e3: mov    %rax,(%rsi,%rbx,1)
  0x00000000028497e7: jg     0x0000000002849878  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x00000000028497ed: mov    %rdx,0x38(%rsp)
  0x00000000028497f2: movabs $0x56d70048,%rsi   ;   {metadata(method data for {method} {0x0000000056b63160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000028497fc: addq   $0x1,0x1e8(%rsi)
  0x0000000002849804: add    %r9d,%edi
  0x0000000002849807: mov    %r8,%rdx
  0x000000000284980a: mov    %r9,%r8
  0x000000000284980d: mov    %rdi,%r9           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x0000000002849810: nop
  0x0000000002849811: nop
  0x0000000002849812: nop
  0x0000000002849813: nop
  0x0000000002849814: nop
  0x0000000002849815: nop
  0x0000000002849816: nop
  0x0000000002849817: callq  0x0000000002786620  ; OopMap{[56]=Oop off=508}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x000000000284981c: mov    0x38(%rsp),%rdx
  0x0000000002849821: mov    %rax,%r10
  0x0000000002849824: mov    %r10d,0xc(%rdx)
  0x0000000002849828: shr    $0x9,%rdx
  0x000000000284982c: movabs $0x116f6000,%rax
  0x0000000002849836: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x000000000284983a: add    $0x60,%rsp
  0x000000000284983e: pop    %rbp
  0x000000000284983f: test   %eax,-0x2629745(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x0000000002849845: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x0000000002849846: movabs $0xd5c0aaf0,%rax   ;   {oop(&quot;&quot;)}
  0x0000000002849850: mov    0xc(%rax),%eax     ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ; implicit exception: dispatches to 0x0000000002849976
  0x0000000002849853: mov    %rax,%r10
  0x0000000002849856: mov    %r10d,0xc(%rdx)
  0x000000000284985a: shr    $0x9,%rdx
  0x000000000284985e: movabs $0x116f6000,%rax
  0x0000000002849868: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x000000000284986c: add    $0x60,%rsp
  0x0000000002849870: pop    %rbp
  0x0000000002849871: test   %eax,-0x2629777(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x0000000002849877: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x0000000002849878: jmpq   0x000000000284998a  ;   {no_reloc}
  0x000000000284987d: add    %al,(%rax)
  0x000000000284987f: add    %al,(%rax)
  0x0000000002849881: add    %ch,%cl
  0x0000000002849883: or     $0x4c000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x0000000002849888: mov    %eax,%eax
  0x000000000284988a: movabs $0x56d70048,%rdx   ;   {metadata(method data for {method} {0x0000000056b63160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002849894: addq   $0x1,0x1d8(%rdx)
  0x000000000284989c: add    %r9d,%edi
  0x000000000284989f: mov    %rdi,%r8
  0x00000000028498a2: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x00000000028498a5: mov    %rax,0x40(%rsp)
  0x00000000028498aa: nop
  0x00000000028498ab: nop
  0x00000000028498ac: nop
  0x00000000028498ad: nop
  0x00000000028498ae: nop
  0x00000000028498af: callq  0x00000000027861a0  ; OopMap{[64]=Oop off=660}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x00000000028498b4: mov    0x40(%rsp),%rax
  0x00000000028498b9: jmpq   0x0000000002849a18  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x00000000028498be: xchg   %ax,%ax
  0x00000000028498c0: jmpq   0x00000000028499b0  ;   {no_reloc}
  0x00000000028498c5: add    %al,(%rax)
  0x00000000028498c7: add    %al,(%rax)
  0x00000000028498c9: add    %ch,%cl
  0x00000000028498cb: jmp    0x00000000028498cd
  0x00000000028498cd: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x00000000028498cf: mov    %rax,%r8
  0x00000000028498d2: movabs $0x56d70048,%rdx   ;   {metadata(method data for {method} {0x0000000056b63160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000028498dc: addq   $0x1,0x188(%rdx)
  0x00000000028498e4: mov    %rdi,%r8
  0x00000000028498e7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x00000000028498ea: mov    %rax,0x48(%rsp)
  0x00000000028498ef: callq  0x00000000027861a0  ; OopMap{[72]=Oop off=724}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x00000000028498f4: mov    0x48(%rsp),%rax
  0x00000000028498f9: jmpq   0x0000000002849a18  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x00000000028498fe: xchg   %ax,%ax
  0x0000000002849900: jmpq   0x00000000028499d6  ;   {no_reloc}
  0x0000000002849905: add    %al,(%rax)
  0x0000000002849907: add    %al,(%rax)
  0x0000000002849909: add    %ch,%cl
  0x000000000284990b: roll   (%rax)
  0x000000000284990d: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x000000000284990f: mov    %rax,%r8
  0x0000000002849912: movabs $0x56d70048,%rdx   ;   {metadata(method data for {method} {0x0000000056b63160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000000284991c: addq   $0x1,0x138(%rdx)
  0x0000000002849924: mov    %r9,%r8
  0x0000000002849927: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x000000000284992a: mov    %rax,0x50(%rsp)
  0x000000000284992f: callq  0x00000000027861a0  ; OopMap{[80]=Oop off=788}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x0000000002849934: mov    0x50(%rsp),%rax
  0x0000000002849939: jmpq   0x0000000002849a18
  0x000000000284993e: mov    %rsi,0x8(%rsp)
  0x0000000002849943: movq   $0xffffffffffffffff,(%rsp)
  0x000000000284994b: callq  0x00000000028400a0  ; OopMap{rdx=Oop r8=Oop off=816}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x0000000002849950: jmpq   0x000000000284967e
  0x0000000002849955: mov    %rsi,0x8(%rsp)
  0x000000000284995a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002849962: callq  0x00000000028400a0  ; OopMap{rdx=Oop r8=Oop off=839}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x0000000002849967: jmpq   0x00000000028496c5
  0x000000000284996c: callq  0x000000000283b9c0  ; OopMap{rdx=Oop r8=Oop off=849}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x0000000002849971: callq  0x000000000283b9c0  ; OopMap{rdx=Oop r8=Oop off=854}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x0000000002849976: callq  0x000000000283b9c0  ; OopMap{rdx=Oop off=859}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x000000000284997b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002849985: mov    $0xa050f00,%eax
  0x000000000284998a: callq  0x000000000283efe0  ; OopMap{off=879}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x000000000284998f: jmpq   0x0000000002849878
  0x0000000002849994: mov    %rdx,%rdx
  0x0000000002849997: callq  0x000000000283be60  ; OopMap{off=892}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x000000000284999c: jmpq   0x0000000002849887
  0x00000000028499a1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000028499ab: mov    $0xa050f00,%eax
  0x00000000028499b0: callq  0x000000000283efe0  ; OopMap{off=917}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x00000000028499b5: jmpq   0x00000000028498c0
  0x00000000028499ba: mov    %rdx,%rdx
  0x00000000028499bd: callq  0x000000000283be60  ; OopMap{off=930}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x00000000028499c2: jmpq   0x00000000028498cf
  0x00000000028499c7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000028499d1: mov    $0xa050f00,%eax
  0x00000000028499d6: callq  0x000000000283efe0  ; OopMap{off=955}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x00000000028499db: jmpq   0x0000000002849900
  0x00000000028499e0: mov    %rdx,%rdx
  0x00000000028499e3: callq  0x000000000283be60  ; OopMap{off=968}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x00000000028499e8: jmpq   0x000000000284990f
  0x00000000028499ed: nop
  0x00000000028499ee: nop
  0x00000000028499ef: mov    0x2a8(%r15),%rax
  0x00000000028499f6: movabs $0x0,%r10
  0x0000000002849a00: mov    %r10,0x2a8(%r15)
  0x0000000002849a07: movabs $0x0,%r10
  0x0000000002849a11: mov    %r10,0x2b0(%r15)
  0x0000000002849a18: add    $0x60,%rsp
  0x0000000002849a1c: pop    %rbp
  0x0000000002849a1d: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x0000000002849a22: hlt    
  0x0000000002849a23: hlt    
  0x0000000002849a24: hlt    
  0x0000000002849a25: hlt    
  0x0000000002849a26: hlt    
  0x0000000002849a27: hlt    
  0x0000000002849a28: hlt    
  0x0000000002849a29: hlt    
  0x0000000002849a2a: hlt    
  0x0000000002849a2b: hlt    
  0x0000000002849a2c: hlt    
  0x0000000002849a2d: hlt    
  0x0000000002849a2e: hlt    
  0x0000000002849a2f: hlt    
  0x0000000002849a30: hlt    
  0x0000000002849a31: hlt    
  0x0000000002849a32: hlt    
  0x0000000002849a33: hlt    
  0x0000000002849a34: hlt    
  0x0000000002849a35: hlt    
  0x0000000002849a36: hlt    
  0x0000000002849a37: hlt    
  0x0000000002849a38: hlt    
  0x0000000002849a39: hlt    
  0x0000000002849a3a: hlt    
  0x0000000002849a3b: hlt    
  0x0000000002849a3c: hlt    
  0x0000000002849a3d: hlt    
  0x0000000002849a3e: hlt    
  0x0000000002849a3f: hlt    
[Stub Code]
  0x0000000002849a40: nop                       ;   {no_reloc}
  0x0000000002849a41: nop
  0x0000000002849a42: nop
  0x0000000002849a43: nop
  0x0000000002849a44: nop
  0x0000000002849a45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002849a4f: jmpq   0x0000000002849a4f  ;   {runtime_call}
  0x0000000002849a54: nop
  0x0000000002849a55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002849a5f: jmpq   0x0000000002849a5f  ;   {runtime_call}
  0x0000000002849a64: nop
  0x0000000002849a65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002849a6f: jmpq   0x0000000002849a6f  ;   {runtime_call}
  0x0000000002849a74: nop
  0x0000000002849a75: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002849a7f: jmpq   0x0000000002849a7f  ;   {runtime_call}
[Exception Handler]
  0x0000000002849a84: callq  0x000000000283d860  ;   {runtime_call}
  0x0000000002849a89: mov    %rsp,-0x28(%rsp)
  0x0000000002849a8e: sub    $0x80,%rsp
  0x0000000002849a95: mov    %rax,0x78(%rsp)
  0x0000000002849a9a: mov    %rcx,0x70(%rsp)
  0x0000000002849a9f: mov    %rdx,0x68(%rsp)
  0x0000000002849aa4: mov    %rbx,0x60(%rsp)
  0x0000000002849aa9: mov    %rbp,0x50(%rsp)
  0x0000000002849aae: mov    %rsi,0x48(%rsp)
  0x0000000002849ab3: mov    %rdi,0x40(%rsp)
  0x0000000002849ab8: mov    %r8,0x38(%rsp)
  0x0000000002849abd: mov    %r9,0x30(%rsp)
  0x0000000002849ac2: mov    %r10,0x28(%rsp)
  0x0000000002849ac7: mov    %r11,0x20(%rsp)
  0x0000000002849acc: mov    %r12,0x18(%rsp)
  0x0000000002849ad1: mov    %r13,0x10(%rsp)
  0x0000000002849ad6: mov    %r14,0x8(%rsp)
  0x0000000002849adb: mov    %r15,(%rsp)
  0x0000000002849adf: movabs $0x61388e30,%rcx   ;   {external_word}
  0x0000000002849ae9: movabs $0x2849a89,%rdx    ;   {internal_word}
  0x0000000002849af3: mov    %rsp,%r8
  0x0000000002849af6: and    $0xfffffffffffffff0,%rsp
  0x0000000002849afa: callq  0x0000000061043d40  ;   {runtime_call}
  0x0000000002849aff: hlt    
[Deopt Handler Code]
  0x0000000002849b00: movabs $0x2849b00,%r10    ;   {section_word}
  0x0000000002849b0a: push   %r10
  0x0000000002849b0c: jmpq   0x0000000002787600  ;   {runtime_call}
  0x0000000002849b11: hlt    
  0x0000000002849b12: hlt    
  0x0000000002849b13: hlt    
  0x0000000002849b14: hlt    
  0x0000000002849b15: hlt    
  0x0000000002849b16: hlt    
  0x0000000002849b17: hlt    
<nmethod compile_id='3' compiler='C1' level='3' entry='0x0000000002849620' size='2704' address='0x0000000002849450' relocation_offset='288' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='325' iicount='325' stamp='0.087'/>
Decoding compiled method 0x000000000284dad0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000056d336c0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000000284dc80: mov    %eax,-0x6000(%rsp)
  0x000000000284dc87: push   %rbp
  0x000000000284dc88: sub    $0x30,%rsp
  0x000000000284dc8c: movabs $0x56d35290,%rax   ;   {metadata(method data for {method} {0x0000000056d336c0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x000000000284dc96: mov    0xdc(%rax),%esi
  0x000000000284dc9c: add    $0x8,%esi
  0x000000000284dc9f: mov    %esi,0xdc(%rax)
  0x000000000284dca5: movabs $0x56d336b8,%rax   ;   {metadata({method} {0x0000000056d336c0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x000000000284dcaf: and    $0x1ff8,%esi
  0x000000000284dcb5: cmp    $0x0,%esi
  0x000000000284dcb8: je     0x000000000284de38  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x000000000284dcbe: mov    %rdx,%rax
  0x000000000284dcc1: shr    $0x8,%eax
  0x000000000284dcc4: cmp    $0x0,%eax
  0x000000000284dcc7: movabs $0x56d35290,%rax   ;   {metadata(method data for {method} {0x0000000056d336c0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x000000000284dcd1: movabs $0x108,%rsi
  0x000000000284dcdb: jne    0x000000000284dceb
  0x000000000284dce1: movabs $0x118,%rsi
  0x000000000284dceb: mov    (%rax,%rsi,1),%rdi
  0x000000000284dcef: lea    0x1(%rdi),%rdi
  0x000000000284dcf3: mov    %rdi,(%rax,%rsi,1)
  0x000000000284dcf7: je     0x000000000284de22  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x000000000284dcfd: shr    $0x10,%edx
  0x000000000284dd00: cmp    $0x0,%edx
  0x000000000284dd03: je     0x000000000284ddfa
  0x000000000284dd09: cmp    $0x1,%edx
  0x000000000284dd0c: je     0x000000000284ddd2
  0x000000000284dd12: cmp    $0x2,%edx
  0x000000000284dd15: je     0x000000000284ddaa
  0x000000000284dd1b: cmp    $0xe,%edx
  0x000000000284dd1e: je     0x000000000284dd82
  0x000000000284dd24: cmp    $0xf,%edx
  0x000000000284dd27: je     0x000000000284dd36
  0x000000000284dd2d: cmp    $0x10,%edx
  0x000000000284dd30: jne    0x000000000284dd5a  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x000000000284dd36: xchg   %ax,%ax
  0x000000000284dd38: jmpq   0x000000000284dea4  ;   {no_reloc}
  0x000000000284dd3d: add    %al,(%rax)
  0x000000000284dd3f: add    %al,(%rax)
  0x000000000284dd41: add    %ah,0xf(%rsi)
  0x000000000284dd44: (bad)  
  0x000000000284dd45: add    %r8b,(%rax)
  0x000000000284dd48: jmpq   0x000000000284debe  ; implicit exception: dispatches to 0x000000000284deae
  0x000000000284dd4d: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x000000000284dd4e: add    $0x30,%rsp
  0x000000000284dd52: pop    %rbp
  0x000000000284dd53: test   %eax,-0x262dc59(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284dd59: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x000000000284dd5a: nopw   0x0(%rax,%rax,1)
  0x000000000284dd60: jmpq   0x000000000284df1d  ;   {no_reloc}
  0x000000000284dd65: add    %al,(%rax)
  0x000000000284dd67: add    %al,(%rax)
  0x000000000284dd69: add    %ah,0xf(%rsi)
  0x000000000284dd6c: (bad)  
  0x000000000284dd6d: add    %r8b,(%rax)
  0x000000000284dd70: jmpq   0x000000000284df37  ; implicit exception: dispatches to 0x000000000284df27
  0x000000000284dd75: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x000000000284dd76: add    $0x30,%rsp
  0x000000000284dd7a: pop    %rbp
  0x000000000284dd7b: test   %eax,-0x262dc81(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284dd81: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x000000000284dd82: nopw   0x0(%rax,%rax,1)
  0x000000000284dd88: jmpq   0x000000000284df96  ;   {no_reloc}
  0x000000000284dd8d: add    %al,(%rax)
  0x000000000284dd8f: add    %al,(%rax)
  0x000000000284dd91: add    %ah,0xf(%rsi)
  0x000000000284dd94: (bad)  
  0x000000000284dd95: add    %r8b,(%rax)
  0x000000000284dd98: jmpq   0x000000000284dfb0  ; implicit exception: dispatches to 0x000000000284dfa0
  0x000000000284dd9d: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x000000000284dd9e: add    $0x30,%rsp
  0x000000000284dda2: pop    %rbp
  0x000000000284dda3: test   %eax,-0x262dca9(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284dda9: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x000000000284ddaa: nopw   0x0(%rax,%rax,1)
  0x000000000284ddb0: jmpq   0x000000000284e00f  ;   {no_reloc}
  0x000000000284ddb5: add    %al,(%rax)
  0x000000000284ddb7: add    %al,(%rax)
  0x000000000284ddb9: add    %ah,0xf(%rsi)
  0x000000000284ddbc: (bad)  
  0x000000000284ddbd: add    %r8b,(%rax)
  0x000000000284ddc0: jmpq   0x000000000284e029  ; implicit exception: dispatches to 0x000000000284e019
  0x000000000284ddc5: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x000000000284ddc6: add    $0x30,%rsp
  0x000000000284ddca: pop    %rbp
  0x000000000284ddcb: test   %eax,-0x262dcd1(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284ddd1: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x000000000284ddd2: nopw   0x0(%rax,%rax,1)
  0x000000000284ddd8: jmpq   0x000000000284e088  ;   {no_reloc}
  0x000000000284dddd: add    %al,(%rax)
  0x000000000284dddf: add    %al,(%rax)
  0x000000000284dde1: add    %ah,0xf(%rsi)
  0x000000000284dde4: (bad)  
  0x000000000284dde5: add    %r8b,(%rax)
  0x000000000284dde8: jmpq   0x000000000284e0a2  ; implicit exception: dispatches to 0x000000000284e092
  0x000000000284dded: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x000000000284ddee: add    $0x30,%rsp
  0x000000000284ddf2: pop    %rbp
  0x000000000284ddf3: test   %eax,-0x262dcf9(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284ddf9: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x000000000284ddfa: nopw   0x0(%rax,%rax,1)
  0x000000000284de00: jmpq   0x000000000284e101  ;   {no_reloc}
  0x000000000284de05: add    %al,(%rax)
  0x000000000284de07: add    %al,(%rax)
  0x000000000284de09: add    %ah,0xf(%rsi)
  0x000000000284de0c: (bad)  
  0x000000000284de0d: add    %r8b,(%rax)
  0x000000000284de10: jmpq   0x000000000284e11b  ; implicit exception: dispatches to 0x000000000284e10b
  0x000000000284de15: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x000000000284de16: add    $0x30,%rsp
  0x000000000284de1a: pop    %rbp
  0x000000000284de1b: test   %eax,-0x262dd21(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284de21: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x000000000284de22: movabs $0xd5c89668,%rax   ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000000284de2c: add    $0x30,%rsp
  0x000000000284de30: pop    %rbp
  0x000000000284de31: test   %eax,-0x262dd37(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284de37: retq   
  0x000000000284de38: mov    %rax,0x8(%rsp)
  0x000000000284de3d: movq   $0xffffffffffffffff,(%rsp)
  0x000000000284de45: callq  0x00000000028400a0  ; OopMap{off=458}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x000000000284de4a: jmpq   0x000000000284dcbe
  0x000000000284de4f: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000000284de59: push   %rax
  0x000000000284de5a: push   %rbx
  0x000000000284de5b: mov    0x48(%rax),%rbx
  0x000000000284de5f: push   %rdi
  0x000000000284de60: push   %rsi
  0x000000000284de61: push   %rdx
  0x000000000284de62: push   %rcx
  0x000000000284de63: push   %r8
  0x000000000284de65: push   %r9
  0x000000000284de67: push   %r10
  0x000000000284de69: mov    %rsp,%r10
  0x000000000284de6c: and    $0xfffffffffffffff0,%rsp
  0x000000000284de70: push   %r10
  0x000000000284de72: push   %r11
  0x000000000284de74: mov    $0xb,%ecx
  0x000000000284de79: callq  0x0000000077b42bd0  ;   {runtime_call}
  0x000000000284de7e: pop    %r11
  0x000000000284de80: pop    %rsp
  0x000000000284de81: pop    %r10
  0x000000000284de83: pop    %r9
  0x000000000284de85: pop    %r8
  0x000000000284de87: pop    %rcx
  0x000000000284de88: pop    %rdx
  0x000000000284de89: pop    %rsi
  0x000000000284de8a: pop    %rdi
  0x000000000284de8b: cmp    0x118(%rbx),%rax
  0x000000000284de92: pop    %rbx
  0x000000000284de93: pop    %rax
  0x000000000284de94: jne    0x000000000284dea4
  0x000000000284de9a: jmpq   0x000000000284dd42
  0x000000000284de9f: mov    $0xa4b5500,%eax
  0x000000000284dea4: callq  0x000000000283f420  ; OopMap{off=553}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000000284dea9: jmpq   0x000000000284dd38
  0x000000000284deae: callq  0x000000000283b9c0  ; OopMap{rax=Oop off=563}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000000284deb3: mov    0x0(%rax),%eax
  0x000000000284deb9: mov    $0x6050b00,%eax
  0x000000000284debe: callq  0x000000000283eba0  ; OopMap{rax=Oop off=579}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000000284dec3: jmpq   0x000000000284dd48
  0x000000000284dec8: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000000284ded2: push   %rax
  0x000000000284ded3: push   %rbx
  0x000000000284ded4: mov    0x48(%rax),%rbx
  0x000000000284ded8: push   %rdi
  0x000000000284ded9: push   %rsi
  0x000000000284deda: push   %rdx
  0x000000000284dedb: push   %rcx
  0x000000000284dedc: push   %r8
  0x000000000284dede: push   %r9
  0x000000000284dee0: push   %r10
  0x000000000284dee2: mov    %rsp,%r10
  0x000000000284dee5: and    $0xfffffffffffffff0,%rsp
  0x000000000284dee9: push   %r10
  0x000000000284deeb: push   %r11
  0x000000000284deed: mov    $0xb,%ecx
  0x000000000284def2: callq  0x0000000077b42bd0  ;   {runtime_call}
  0x000000000284def7: pop    %r11
  0x000000000284def9: pop    %rsp
  0x000000000284defa: pop    %r10
  0x000000000284defc: pop    %r9
  0x000000000284defe: pop    %r8
  0x000000000284df00: pop    %rcx
  0x000000000284df01: pop    %rdx
  0x000000000284df02: pop    %rsi
  0x000000000284df03: pop    %rdi
  0x000000000284df04: cmp    0x118(%rbx),%rax
  0x000000000284df0b: pop    %rbx
  0x000000000284df0c: pop    %rax
  0x000000000284df0d: jne    0x000000000284df1d
  0x000000000284df13: jmpq   0x000000000284dd6a
  0x000000000284df18: mov    $0xa4b5500,%eax
  0x000000000284df1d: callq  0x000000000283f420  ; OopMap{off=674}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000000284df22: jmpq   0x000000000284dd60
  0x000000000284df27: callq  0x000000000283b9c0  ; OopMap{rax=Oop off=684}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000000284df2c: mov    0x0(%rax),%eax
  0x000000000284df32: mov    $0x6050b00,%eax
  0x000000000284df37: callq  0x000000000283eba0  ; OopMap{rax=Oop off=700}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000000284df3c: jmpq   0x000000000284dd70
  0x000000000284df41: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000000284df4b: push   %rax
  0x000000000284df4c: push   %rbx
  0x000000000284df4d: mov    0x48(%rax),%rbx
  0x000000000284df51: push   %rdi
  0x000000000284df52: push   %rsi
  0x000000000284df53: push   %rdx
  0x000000000284df54: push   %rcx
  0x000000000284df55: push   %r8
  0x000000000284df57: push   %r9
  0x000000000284df59: push   %r10
  0x000000000284df5b: mov    %rsp,%r10
  0x000000000284df5e: and    $0xfffffffffffffff0,%rsp
  0x000000000284df62: push   %r10
  0x000000000284df64: push   %r11
  0x000000000284df66: mov    $0xb,%ecx
  0x000000000284df6b: callq  0x0000000077b42bd0  ;   {runtime_call}
  0x000000000284df70: pop    %r11
  0x000000000284df72: pop    %rsp
  0x000000000284df73: pop    %r10
  0x000000000284df75: pop    %r9
  0x000000000284df77: pop    %r8
  0x000000000284df79: pop    %rcx
  0x000000000284df7a: pop    %rdx
  0x000000000284df7b: pop    %rsi
  0x000000000284df7c: pop    %rdi
  0x000000000284df7d: cmp    0x118(%rbx),%rax
  0x000000000284df84: pop    %rbx
  0x000000000284df85: pop    %rax
  0x000000000284df86: jne    0x000000000284df96
  0x000000000284df8c: jmpq   0x000000000284dd92
  0x000000000284df91: mov    $0xa4b5500,%eax
  0x000000000284df96: callq  0x000000000283f420  ; OopMap{off=795}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000000284df9b: jmpq   0x000000000284dd88
  0x000000000284dfa0: callq  0x000000000283b9c0  ; OopMap{rax=Oop off=805}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000000284dfa5: mov    0x0(%rax),%eax
  0x000000000284dfab: mov    $0x6050b00,%eax
  0x000000000284dfb0: callq  0x000000000283eba0  ; OopMap{rax=Oop off=821}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000000284dfb5: jmpq   0x000000000284dd98
  0x000000000284dfba: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000000284dfc4: push   %rax
  0x000000000284dfc5: push   %rbx
  0x000000000284dfc6: mov    0x48(%rax),%rbx
  0x000000000284dfca: push   %rdi
  0x000000000284dfcb: push   %rsi
  0x000000000284dfcc: push   %rdx
  0x000000000284dfcd: push   %rcx
  0x000000000284dfce: push   %r8
  0x000000000284dfd0: push   %r9
  0x000000000284dfd2: push   %r10
  0x000000000284dfd4: mov    %rsp,%r10
  0x000000000284dfd7: and    $0xfffffffffffffff0,%rsp
  0x000000000284dfdb: push   %r10
  0x000000000284dfdd: push   %r11
  0x000000000284dfdf: mov    $0xb,%ecx
  0x000000000284dfe4: callq  0x0000000077b42bd0  ;   {runtime_call}
  0x000000000284dfe9: pop    %r11
  0x000000000284dfeb: pop    %rsp
  0x000000000284dfec: pop    %r10
  0x000000000284dfee: pop    %r9
  0x000000000284dff0: pop    %r8
  0x000000000284dff2: pop    %rcx
  0x000000000284dff3: pop    %rdx
  0x000000000284dff4: pop    %rsi
  0x000000000284dff5: pop    %rdi
  0x000000000284dff6: cmp    0x118(%rbx),%rax
  0x000000000284dffd: pop    %rbx
  0x000000000284dffe: pop    %rax
  0x000000000284dfff: jne    0x000000000284e00f
  0x000000000284e005: jmpq   0x000000000284ddba
  0x000000000284e00a: mov    $0xa4b5500,%eax
  0x000000000284e00f: callq  0x000000000283f420  ; OopMap{off=916}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000000284e014: jmpq   0x000000000284ddb0
  0x000000000284e019: callq  0x000000000283b9c0  ; OopMap{rax=Oop off=926}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000000284e01e: mov    0x0(%rax),%eax
  0x000000000284e024: mov    $0x6050b00,%eax
  0x000000000284e029: callq  0x000000000283eba0  ; OopMap{rax=Oop off=942}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000000284e02e: jmpq   0x000000000284ddc0
  0x000000000284e033: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000000284e03d: push   %rax
  0x000000000284e03e: push   %rbx
  0x000000000284e03f: mov    0x48(%rax),%rbx
  0x000000000284e043: push   %rdi
  0x000000000284e044: push   %rsi
  0x000000000284e045: push   %rdx
  0x000000000284e046: push   %rcx
  0x000000000284e047: push   %r8
  0x000000000284e049: push   %r9
  0x000000000284e04b: push   %r10
  0x000000000284e04d: mov    %rsp,%r10
  0x000000000284e050: and    $0xfffffffffffffff0,%rsp
  0x000000000284e054: push   %r10
  0x000000000284e056: push   %r11
  0x000000000284e058: mov    $0xb,%ecx
  0x000000000284e05d: callq  0x0000000077b42bd0  ;   {runtime_call}
  0x000000000284e062: pop    %r11
  0x000000000284e064: pop    %rsp
  0x000000000284e065: pop    %r10
  0x000000000284e067: pop    %r9
  0x000000000284e069: pop    %r8
  0x000000000284e06b: pop    %rcx
  0x000000000284e06c: pop    %rdx
  0x000000000284e06d: pop    %rsi
  0x000000000284e06e: pop    %rdi
  0x000000000284e06f: cmp    0x118(%rbx),%rax
  0x000000000284e076: pop    %rbx
  0x000000000284e077: pop    %rax
  0x000000000284e078: jne    0x000000000284e088
  0x000000000284e07e: jmpq   0x000000000284dde2
  0x000000000284e083: mov    $0xa4b5500,%eax
  0x000000000284e088: callq  0x000000000283f420  ; OopMap{off=1037}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000000284e08d: jmpq   0x000000000284ddd8
  0x000000000284e092: callq  0x000000000283b9c0  ; OopMap{rax=Oop off=1047}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000000284e097: mov    0x0(%rax),%eax
  0x000000000284e09d: mov    $0x6050b00,%eax
  0x000000000284e0a2: callq  0x000000000283eba0  ; OopMap{rax=Oop off=1063}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000000284e0a7: jmpq   0x000000000284dde8
  0x000000000284e0ac: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000000284e0b6: push   %rax
  0x000000000284e0b7: push   %rbx
  0x000000000284e0b8: mov    0x48(%rax),%rbx
  0x000000000284e0bc: push   %rdi
  0x000000000284e0bd: push   %rsi
  0x000000000284e0be: push   %rdx
  0x000000000284e0bf: push   %rcx
  0x000000000284e0c0: push   %r8
  0x000000000284e0c2: push   %r9
  0x000000000284e0c4: push   %r10
  0x000000000284e0c6: mov    %rsp,%r10
  0x000000000284e0c9: and    $0xfffffffffffffff0,%rsp
  0x000000000284e0cd: push   %r10
  0x000000000284e0cf: push   %r11
  0x000000000284e0d1: mov    $0xb,%ecx
  0x000000000284e0d6: callq  0x0000000077b42bd0  ;   {runtime_call}
  0x000000000284e0db: pop    %r11
  0x000000000284e0dd: pop    %rsp
  0x000000000284e0de: pop    %r10
  0x000000000284e0e0: pop    %r9
  0x000000000284e0e2: pop    %r8
  0x000000000284e0e4: pop    %rcx
  0x000000000284e0e5: pop    %rdx
  0x000000000284e0e6: pop    %rsi
  0x000000000284e0e7: pop    %rdi
  0x000000000284e0e8: cmp    0x118(%rbx),%rax
  0x000000000284e0ef: pop    %rbx
  0x000000000284e0f0: pop    %rax
  0x000000000284e0f1: jne    0x000000000284e101
  0x000000000284e0f7: jmpq   0x000000000284de0a
  0x000000000284e0fc: mov    $0xa4b5500,%eax
  0x000000000284e101: callq  0x000000000283f420  ; OopMap{off=1158}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000000284e106: jmpq   0x000000000284de00
  0x000000000284e10b: callq  0x000000000283b9c0  ; OopMap{rax=Oop off=1168}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000000284e110: mov    0x0(%rax),%eax
  0x000000000284e116: mov    $0x6050b00,%eax
  0x000000000284e11b: callq  0x000000000283eba0  ; OopMap{rax=Oop off=1184}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000000284e120: jmpq   0x000000000284de10
  0x000000000284e125: nop
  0x000000000284e126: nop
  0x000000000284e127: mov    0x2a8(%r15),%rax
  0x000000000284e12e: movabs $0x0,%r10
  0x000000000284e138: mov    %r10,0x2a8(%r15)
  0x000000000284e13f: movabs $0x0,%r10
  0x000000000284e149: mov    %r10,0x2b0(%r15)
  0x000000000284e150: add    $0x30,%rsp
  0x000000000284e154: pop    %rbp
  0x000000000284e155: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x000000000284e15a: hlt    
  0x000000000284e15b: hlt    
  0x000000000284e15c: hlt    
  0x000000000284e15d: hlt    
  0x000000000284e15e: hlt    
  0x000000000284e15f: hlt    
[Exception Handler]
[Stub Code]
  0x000000000284e160: callq  0x000000000283d860  ;   {no_reloc}
  0x000000000284e165: mov    %rsp,-0x28(%rsp)
  0x000000000284e16a: sub    $0x80,%rsp
  0x000000000284e171: mov    %rax,0x78(%rsp)
  0x000000000284e176: mov    %rcx,0x70(%rsp)
  0x000000000284e17b: mov    %rdx,0x68(%rsp)
  0x000000000284e180: mov    %rbx,0x60(%rsp)
  0x000000000284e185: mov    %rbp,0x50(%rsp)
  0x000000000284e18a: mov    %rsi,0x48(%rsp)
  0x000000000284e18f: mov    %rdi,0x40(%rsp)
  0x000000000284e194: mov    %r8,0x38(%rsp)
  0x000000000284e199: mov    %r9,0x30(%rsp)
  0x000000000284e19e: mov    %r10,0x28(%rsp)
  0x000000000284e1a3: mov    %r11,0x20(%rsp)
  0x000000000284e1a8: mov    %r12,0x18(%rsp)
  0x000000000284e1ad: mov    %r13,0x10(%rsp)
  0x000000000284e1b2: mov    %r14,0x8(%rsp)
  0x000000000284e1b7: mov    %r15,(%rsp)
  0x000000000284e1bb: movabs $0x61388e30,%rcx   ;   {external_word}
  0x000000000284e1c5: movabs $0x284e165,%rdx    ;   {internal_word}
  0x000000000284e1cf: mov    %rsp,%r8
  0x000000000284e1d2: and    $0xfffffffffffffff0,%rsp
  0x000000000284e1d6: callq  0x0000000061043d40  ;   {runtime_call}
  0x000000000284e1db: hlt    
[Deopt Handler Code]
  0x000000000284e1dc: movabs $0x284e1dc,%r10    ;   {section_word}
  0x000000000284e1e6: push   %r10
  0x000000000284e1e8: jmpq   0x0000000002787600  ;   {runtime_call}
  0x000000000284e1ed: hlt    
  0x000000000284e1ee: hlt    
  0x000000000284e1ef: hlt    
<nmethod compile_id='12' compiler='C1' level='3' entry='0x000000000284dc80' size='2616' address='0x000000000284dad0' relocation_offset='288' insts_offset='432' stub_offset='1680' scopes_data_offset='1832' scopes_pcs_offset='1976' dependencies_offset='2552' nul_chk_table_offset='2560' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='1213' iicount='1213' stamp='0.093'/>
Decoding compiled method 0x000000000284d790:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000056b60488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x000000000284d8e0: mov    0x8(%rdx),%r10d
  0x000000000284d8e4: cmp    %rax,%r10
  0x000000000284d8e7: jne    0x0000000002785f60  ;   {runtime_call}
  0x000000000284d8ed: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000000284d8f8: data16 data16 xchg %ax,%ax
  0x000000000284d8fc: nopl   0x0(%rax)
[Verified Entry Point]
  0x000000000284d900: mov    %eax,-0x6000(%rsp)
  0x000000000284d907: push   %rbp
  0x000000000284d908: sub    $0x50,%rsp
  0x000000000284d90c: movabs $0x56c933b0,%rcx   ;   {metadata(method data for {method} {0x0000000056b60488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000000284d916: mov    0xdc(%rcx),%esi
  0x000000000284d91c: add    $0x8,%esi
  0x000000000284d91f: mov    %esi,0xdc(%rcx)
  0x000000000284d925: movabs $0x56b60480,%rcx   ;   {metadata({method} {0x0000000056b60488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000000284d92f: and    $0x1ff8,%esi
  0x000000000284d935: cmp    $0x0,%esi
  0x000000000284d938: je     0x000000000284d957
  0x000000000284d93e: mov    %rdx,%rcx          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x000000000284d941: mov    %rdx,0x40(%rsp)
  0x000000000284d946: callq  0x000000000283bbe0  ; OopMap{[64]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x000000000284d94b: add    $0x50,%rsp
  0x000000000284d94f: pop    %rbp
  0x000000000284d950: test   %eax,-0x262d856(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284d956: retq   
  0x000000000284d957: mov    %rcx,0x8(%rsp)
  0x000000000284d95c: movq   $0xffffffffffffffff,(%rsp)
  0x000000000284d964: callq  0x00000000028400a0  ; OopMap{rdx=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x000000000284d969: jmp    0x000000000284d93e
  0x000000000284d96b: nop
  0x000000000284d96c: nop
  0x000000000284d96d: mov    0x2a8(%r15),%rax
  0x000000000284d974: movabs $0x0,%r10
  0x000000000284d97e: mov    %r10,0x2a8(%r15)
  0x000000000284d985: movabs $0x0,%r10
  0x000000000284d98f: mov    %r10,0x2b0(%r15)
  0x000000000284d996: add    $0x50,%rsp
  0x000000000284d99a: pop    %rbp
  0x000000000284d99b: jmpq   0x000000000283ace0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x000000000284d9a0: callq  0x000000000283d860  ;   {no_reloc}
  0x000000000284d9a5: mov    %rsp,-0x28(%rsp)
  0x000000000284d9aa: sub    $0x80,%rsp
  0x000000000284d9b1: mov    %rax,0x78(%rsp)
  0x000000000284d9b6: mov    %rcx,0x70(%rsp)
  0x000000000284d9bb: mov    %rdx,0x68(%rsp)
  0x000000000284d9c0: mov    %rbx,0x60(%rsp)
  0x000000000284d9c5: mov    %rbp,0x50(%rsp)
  0x000000000284d9ca: mov    %rsi,0x48(%rsp)
  0x000000000284d9cf: mov    %rdi,0x40(%rsp)
  0x000000000284d9d4: mov    %r8,0x38(%rsp)
  0x000000000284d9d9: mov    %r9,0x30(%rsp)
  0x000000000284d9de: mov    %r10,0x28(%rsp)
  0x000000000284d9e3: mov    %r11,0x20(%rsp)
  0x000000000284d9e8: mov    %r12,0x18(%rsp)
  0x000000000284d9ed: mov    %r13,0x10(%rsp)
  0x000000000284d9f2: mov    %r14,0x8(%rsp)
  0x000000000284d9f7: mov    %r15,(%rsp)
  0x000000000284d9fb: movabs $0x61388e30,%rcx   ;   {external_word}
  0x000000000284da05: movabs $0x284d9a5,%rdx    ;   {internal_word}
  0x000000000284da0f: mov    %rsp,%r8
  0x000000000284da12: and    $0xfffffffffffffff0,%rsp
  0x000000000284da16: callq  0x0000000061043d40  ;   {runtime_call}
  0x000000000284da1b: hlt    
[Deopt Handler Code]
  0x000000000284da1c: movabs $0x284da1c,%r10    ;   {section_word}
  0x000000000284da26: push   %r10
  0x000000000284da28: jmpq   0x0000000002787600  ;   {runtime_call}
  0x000000000284da2d: hlt    
  0x000000000284da2e: hlt    
  0x000000000284da2f: hlt    
<nmethod compile_id='7' compiler='C1' level='3' entry='0x000000000284d8e0' size='800' address='0x000000000284d790' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='792' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='2592' iicount='2592' stamp='0.094'/>
<writer thread='10424'/>
Decoding compiled method 0x000000000284c050:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000056c8e730} &apos;parentOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/TreeMap$Entry&apos;
  #           [sp+0x30]  (sp of caller)
  0x000000000284c180: mov    %eax,-0x6000(%rsp)
  0x000000000284c187: push   %rbp
  0x000000000284c188: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.TreeMap::parentOf@-1 (line 2204)

  0x000000000284c18c: mov    0x20(%rdx),%r10d   ; implicit exception: dispatches to 0x000000000284c19f
  0x000000000284c190: mov    %r10,%rax          ;*getfield parent
                                                ; - java.util.TreeMap::parentOf@9 (line 2204)

  0x000000000284c193: add    $0x20,%rsp
  0x000000000284c197: pop    %rbp
  0x000000000284c198: test   %eax,-0x262c19e(%rip)        # 0x0000000000220000
                                                ;   {poll_return}
  0x000000000284c19e: retq   
  0x000000000284c19f: mov    %rdx,(%rsp)
  0x000000000284c1a3: mov    $0xffffff65,%edx
  0x000000000284c1a8: data16 xchg %ax,%ax
  0x000000000284c1ab: callq  0x00000000027857a0  ; OopMap{[0]=Oop off=48}
                                                ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1 (line 2204)
                                                ;   {runtime_call}
  0x000000000284c1b0: int3                      ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1 (line 2204)

  0x000000000284c1b1: hlt    
  0x000000000284c1b2: hlt    
  0x000000000284c1b3: hlt    
  0x000000000284c1b4: hlt    
  0x000000000284c1b5: hlt    
  0x000000000284c1b6: hlt    
  0x000000000284c1b7: hlt    
  0x000000000284c1b8: hlt    
  0x000000000284c1b9: hlt    
  0x000000000284c1ba: hlt    
  0x000000000284c1bb: hlt    
  0x000000000284c1bc: hlt    
  0x000000000284c1bd: hlt    
  0x000000000284c1be: hlt    
  0x000000000284c1bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000000284c1c0: jmpq   0x000000000283b1e0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000000284c1c5: callq  0x000000000284c1ca
  0x000000000284c1ca: subq   $0x5,(%rsp)
  0x000000000284c1cf: jmpq   0x0000000002787600  ;   {runtime_call}
  0x000000000284c1d4: hlt    
  0x000000000284c1d5: hlt    
  0x000000000284c1d6: hlt    
  0x000000000284c1d7: hlt    
<nmethod compile_id='8' compiler='C2' level='4' entry='0x000000000284c180' size='552' address='0x000000000284c050' relocation_offset='288' insts_offset='304' stub_offset='368' scopes_data_offset='400' scopes_pcs_offset='432' dependencies_offset='528' nul_chk_table_offset='536' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='10263' iicount='10263' stamp='0.095'/>
<writer thread='6740'/>
Decoding compiled method 0x000000000284ba10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000056b63c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x000000000284bb40: mov    0x8(%rdx),%r10d
  0x000000000284bb44: cmp    %r10,%rax
  0x000000000284bb47: jne    0x0000000002785f60  ;   {runtime_call}
  0x000000000284bb4d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000000284bb50: mov    %eax,-0x6000(%rsp)
  0x000000000284bb57: push   %rbp
  0x000000000284bb58: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)

  0x000000000284bb5c: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x000000000284bb60: mov    0xc(%r11),%eax     ; implicit exception: dispatches to 0x000000000284bb70
  0x000000000284bb64: add    $0x10,%rsp
  0x000000000284bb68: pop    %rbp
  0x000000000284bb69: test   %eax,-0x262bb6f(%rip)        # 0x0000000000220000
                                                ;   {poll_return}
  0x000000000284bb6f: retq   
  0x000000000284bb70: mov    $0xfffffff6,%edx
  0x000000000284bb75: xchg   %ax,%ax
  0x000000000284bb77: callq  0x00000000027857a0  ; OopMap{off=60}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x000000000284bb7c: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)

  0x000000000284bb7d: hlt    
  0x000000000284bb7e: hlt    
  0x000000000284bb7f: hlt    
[Exception Handler]
[Stub Code]
  0x000000000284bb80: jmpq   0x000000000283b1e0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000000284bb85: callq  0x000000000284bb8a
  0x000000000284bb8a: subq   $0x5,(%rsp)
  0x000000000284bb8f: jmpq   0x0000000002787600  ;   {runtime_call}
  0x000000000284bb94: hlt    
  0x000000000284bb95: hlt    
  0x000000000284bb96: hlt    
  0x000000000284bb97: hlt    
<nmethod compile_id='11' compiler='C2' level='4' entry='0x000000000284bb40' size='552' address='0x000000000284ba10' relocation_offset='288' insts_offset='304' stub_offset='368' scopes_data_offset='400' scopes_pcs_offset='432' dependencies_offset='528' nul_chk_table_offset='536' method='java/lang/String length ()I' bytes='6' count='26603' iicount='26603' stamp='0.095'/>
<writer thread='7864'/>
Decoding compiled method 0x000000000284d390:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000056d33d80} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x000000000284d4e0: mov    0x8(%rdx),%r10d
  0x000000000284d4e4: cmp    %rax,%r10
  0x000000000284d4e7: jne    0x0000000002785f60  ;   {runtime_call}
  0x000000000284d4ed: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000000284d4f8: data16 data16 xchg %ax,%ax
  0x000000000284d4fc: nopl   0x0(%rax)
[Verified Entry Point]
  0x000000000284d500: mov    %eax,-0x6000(%rsp)
  0x000000000284d507: push   %rbp
  0x000000000284d508: sub    $0x30,%rsp
  0x000000000284d50c: movabs $0x56d356c0,%rax   ;   {metadata(method data for {method} {0x0000000056d33d80} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000000284d516: mov    0xdc(%rax),%esi
  0x000000000284d51c: add    $0x8,%esi
  0x000000000284d51f: mov    %esi,0xdc(%rax)
  0x000000000284d525: movabs $0x56d33d78,%rax   ;   {metadata({method} {0x0000000056d33d80} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000000284d52f: and    $0x1ff8,%esi
  0x000000000284d535: cmp    $0x0,%esi
  0x000000000284d538: je     0x000000000284d56c  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x000000000284d53e: and    $0xffff,%r8d
  0x000000000284d545: movabs $0xd5c89678,%rax   ;   {oop([I)}
  0x000000000284d54f: movslq %r8d,%rsi
  0x000000000284d552: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x000000000284d580
  0x000000000284d556: jae    0x000000000284d58a
  0x000000000284d55c: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x000000000284d560: add    $0x30,%rsp
  0x000000000284d564: pop    %rbp
  0x000000000284d565: test   %eax,-0x262d46b(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284d56b: retq   
  0x000000000284d56c: mov    %rax,0x8(%rsp)
  0x000000000284d571: movq   $0xffffffffffffffff,(%rsp)
  0x000000000284d579: callq  0x00000000028400a0  ; OopMap{rdx=Oop off=158}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x000000000284d57e: jmp    0x000000000284d53e
  0x000000000284d580: callq  0x000000000283b9c0  ; OopMap{rax=Oop off=165}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000000284d585: callq  0x000000000283b9c0  ; OopMap{rax=Oop off=170}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000000284d58a: mov    %r8,(%rsp)
  0x000000000284d58e: callq  0x000000000283b300  ; OopMap{rax=Oop off=179}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000000284d593: nop
  0x000000000284d594: nop
  0x000000000284d595: mov    0x2a8(%r15),%rax
  0x000000000284d59c: movabs $0x0,%r10
  0x000000000284d5a6: mov    %r10,0x2a8(%r15)
  0x000000000284d5ad: movabs $0x0,%r10
  0x000000000284d5b7: mov    %r10,0x2b0(%r15)
  0x000000000284d5be: add    $0x30,%rsp
  0x000000000284d5c2: pop    %rbp
  0x000000000284d5c3: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x000000000284d5c8: hlt    
  0x000000000284d5c9: hlt    
  0x000000000284d5ca: hlt    
  0x000000000284d5cb: hlt    
  0x000000000284d5cc: hlt    
  0x000000000284d5cd: hlt    
  0x000000000284d5ce: hlt    
  0x000000000284d5cf: hlt    
  0x000000000284d5d0: hlt    
  0x000000000284d5d1: hlt    
  0x000000000284d5d2: hlt    
  0x000000000284d5d3: hlt    
  0x000000000284d5d4: hlt    
  0x000000000284d5d5: hlt    
  0x000000000284d5d6: hlt    
  0x000000000284d5d7: hlt    
  0x000000000284d5d8: hlt    
  0x000000000284d5d9: hlt    
  0x000000000284d5da: hlt    
  0x000000000284d5db: hlt    
  0x000000000284d5dc: hlt    
  0x000000000284d5dd: hlt    
  0x000000000284d5de: hlt    
  0x000000000284d5df: hlt    
[Exception Handler]
[Stub Code]
  0x000000000284d5e0: callq  0x000000000283d860  ;   {no_reloc}
  0x000000000284d5e5: mov    %rsp,-0x28(%rsp)
  0x000000000284d5ea: sub    $0x80,%rsp
  0x000000000284d5f1: mov    %rax,0x78(%rsp)
  0x000000000284d5f6: mov    %rcx,0x70(%rsp)
  0x000000000284d5fb: mov    %rdx,0x68(%rsp)
  0x000000000284d600: mov    %rbx,0x60(%rsp)
  0x000000000284d605: mov    %rbp,0x50(%rsp)
  0x000000000284d60a: mov    %rsi,0x48(%rsp)
  0x000000000284d60f: mov    %rdi,0x40(%rsp)
  0x000000000284d614: mov    %r8,0x38(%rsp)
  0x000000000284d619: mov    %r9,0x30(%rsp)
  0x000000000284d61e: mov    %r10,0x28(%rsp)
  0x000000000284d623: mov    %r11,0x20(%rsp)
  0x000000000284d628: mov    %r12,0x18(%rsp)
  0x000000000284d62d: mov    %r13,0x10(%rsp)
  0x000000000284d632: mov    %r14,0x8(%rsp)
  0x000000000284d637: mov    %r15,(%rsp)
  0x000000000284d63b: movabs $0x61388e30,%rcx   ;   {external_word}
  0x000000000284d645: movabs $0x284d5e5,%rdx    ;   {internal_word}
  0x000000000284d64f: mov    %rsp,%r8
  0x000000000284d652: and    $0xfffffffffffffff0,%rsp
  0x000000000284d656: callq  0x0000000061043d40  ;   {runtime_call}
  0x000000000284d65b: hlt    
[Deopt Handler Code]
  0x000000000284d65c: movabs $0x284d65c,%r10    ;   {section_word}
  0x000000000284d666: push   %r10
  0x000000000284d668: jmpq   0x0000000002787600  ;   {runtime_call}
  0x000000000284d66d: hlt    
  0x000000000284d66e: hlt    
  0x000000000284d66f: hlt    
<nmethod compile_id='13' compiler='C1' level='3' entry='0x000000000284d4e0' size='952' address='0x000000000284d390' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='792' dependencies_offset='920' nul_chk_table_offset='928' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='1213' iicount='1213' stamp='0.097'/>
Decoding compiled method 0x000000000284cfd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x000000000284d120: mov    %eax,-0x6000(%rsp)
  0x000000000284d127: push   %rbp
  0x000000000284d128: sub    $0x30,%rsp
  0x000000000284d12c: movabs $0x56d721b8,%rax   ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000000284d136: mov    0xdc(%rax),%esi
  0x000000000284d13c: add    $0x8,%esi
  0x000000000284d13f: mov    %esi,0xdc(%rax)
  0x000000000284d145: movabs $0x56c542a0,%rax   ;   {metadata({method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000000284d14f: and    $0x1ff8,%esi
  0x000000000284d155: cmp    $0x0,%esi
  0x000000000284d158: je     0x000000000284d1be  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x000000000284d15e: cmp    %r8d,%edx
  0x000000000284d161: movabs $0x56d721b8,%rax   ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000000284d16b: movabs $0x108,%rsi
  0x000000000284d175: jg     0x000000000284d185
  0x000000000284d17b: movabs $0x118,%rsi
  0x000000000284d185: mov    (%rax,%rsi,1),%rdi
  0x000000000284d189: lea    0x1(%rdi),%rdi
  0x000000000284d18d: mov    %rdi,(%rax,%rsi,1)
  0x000000000284d191: jg     0x000000000284d1ac  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x000000000284d197: movabs $0x56d721b8,%rax   ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000000284d1a1: incl   0x128(%rax)
  0x000000000284d1a7: jmpq   0x000000000284d1af  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x000000000284d1ac: mov    %r8,%rdx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x000000000284d1af: mov    %rdx,%rax
  0x000000000284d1b2: add    $0x30,%rsp
  0x000000000284d1b6: pop    %rbp
  0x000000000284d1b7: test   %eax,-0x262d0bd(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284d1bd: retq   
  0x000000000284d1be: mov    %rax,0x8(%rsp)
  0x000000000284d1c3: movq   $0xffffffffffffffff,(%rsp)
  0x000000000284d1cb: callq  0x00000000028400a0  ; OopMap{off=176}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x000000000284d1d0: jmp    0x000000000284d15e
  0x000000000284d1d2: nop
  0x000000000284d1d3: nop
  0x000000000284d1d4: mov    0x2a8(%r15),%rax
  0x000000000284d1db: movabs $0x0,%r10
  0x000000000284d1e5: mov    %r10,0x2a8(%r15)
  0x000000000284d1ec: movabs $0x0,%r10
  0x000000000284d1f6: mov    %r10,0x2b0(%r15)
  0x000000000284d1fd: add    $0x30,%rsp
  0x000000000284d201: pop    %rbp
  0x000000000284d202: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x000000000284d207: hlt    
  0x000000000284d208: hlt    
  0x000000000284d209: hlt    
  0x000000000284d20a: hlt    
  0x000000000284d20b: hlt    
  0x000000000284d20c: hlt    
  0x000000000284d20d: hlt    
  0x000000000284d20e: hlt    
  0x000000000284d20f: hlt    
  0x000000000284d210: hlt    
  0x000000000284d211: hlt    
  0x000000000284d212: hlt    
  0x000000000284d213: hlt    
  0x000000000284d214: hlt    
  0x000000000284d215: hlt    
  0x000000000284d216: hlt    
  0x000000000284d217: hlt    
  0x000000000284d218: hlt    
  0x000000000284d219: hlt    
  0x000000000284d21a: hlt    
  0x000000000284d21b: hlt    
  0x000000000284d21c: hlt    
  0x000000000284d21d: hlt    
  0x000000000284d21e: hlt    
  0x000000000284d21f: hlt    
[Exception Handler]
[Stub Code]
  0x000000000284d220: callq  0x000000000283d860  ;   {no_reloc}
  0x000000000284d225: mov    %rsp,-0x28(%rsp)
  0x000000000284d22a: sub    $0x80,%rsp
  0x000000000284d231: mov    %rax,0x78(%rsp)
  0x000000000284d236: mov    %rcx,0x70(%rsp)
  0x000000000284d23b: mov    %rdx,0x68(%rsp)
  0x000000000284d240: mov    %rbx,0x60(%rsp)
  0x000000000284d245: mov    %rbp,0x50(%rsp)
  0x000000000284d24a: mov    %rsi,0x48(%rsp)
  0x000000000284d24f: mov    %rdi,0x40(%rsp)
  0x000000000284d254: mov    %r8,0x38(%rsp)
  0x000000000284d259: mov    %r9,0x30(%rsp)
  0x000000000284d25e: mov    %r10,0x28(%rsp)
  0x000000000284d263: mov    %r11,0x20(%rsp)
  0x000000000284d268: mov    %r12,0x18(%rsp)
  0x000000000284d26d: mov    %r13,0x10(%rsp)
  0x000000000284d272: mov    %r14,0x8(%rsp)
  0x000000000284d277: mov    %r15,(%rsp)
  0x000000000284d27b: movabs $0x61388e30,%rcx   ;   {external_word}
  0x000000000284d285: movabs $0x284d225,%rdx    ;   {internal_word}
  0x000000000284d28f: mov    %rsp,%r8
  0x000000000284d292: and    $0xfffffffffffffff0,%rsp
  0x000000000284d296: callq  0x0000000061043d40  ;   {runtime_call}
  0x000000000284d29b: hlt    
[Deopt Handler Code]
  0x000000000284d29c: movabs $0x284d29c,%r10    ;   {section_word}
  0x000000000284d2a6: push   %r10
  0x000000000284d2a8: jmpq   0x0000000002787600  ;   {runtime_call}
  0x000000000284d2ad: hlt    
  0x000000000284d2ae: hlt    
  0x000000000284d2af: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x000000000284d120' size='904' address='0x000000000284cfd0' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' method='java/lang/Math min (II)I' bytes='11' count='701' iicount='701' stamp='0.098'/>
<writer thread='10424'/>
Decoding compiled method 0x000000000284c810:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000056b63d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x000000000284c960: mov    0x8(%rdx),%r10d
  0x000000000284c964: cmp    %r10,%rax
  0x000000000284c967: jne    0x0000000002785f60  ;   {runtime_call}
  0x000000000284c96d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000000284c970: mov    %eax,-0x6000(%rsp)
  0x000000000284c977: push   %rbp
  0x000000000284c978: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x000000000284c97c: test   %r8d,%r8d
  0x000000000284c97f: jl     0x000000000284c9b9  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x000000000284c981: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x000000000284c985: mov    0xc(%r10),%ebp     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x000000000284c9e1
  0x000000000284c989: cmp    %ebp,%r8d
  0x000000000284c98c: jge    0x000000000284c9cd  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x000000000284c98e: cmp    %ebp,%r8d
  0x000000000284c991: jae    0x000000000284c9a5
  0x000000000284c993: movzwl 0x10(%r10,%r8,2),%eax
  0x000000000284c999: add    $0x20,%rsp
  0x000000000284c99d: pop    %rbp
  0x000000000284c99e: test   %eax,-0x262c9a4(%rip)        # 0x0000000000220000
                                                ;   {poll_return}
  0x000000000284c9a4: retq   
  0x000000000284c9a5: mov    $0xffffffe4,%edx
  0x000000000284c9aa: mov    %r8d,%ebp
  0x000000000284c9ad: mov    %r10d,(%rsp)
  0x000000000284c9b1: xchg   %ax,%ax
  0x000000000284c9b3: callq  0x00000000027857a0  ; OopMap{[0]=NarrowOop off=88}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000000284c9b8: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x000000000284c9b9: mov    %rdx,%rbp
  0x000000000284c9bc: mov    %r8d,0x4(%rsp)
  0x000000000284c9c1: mov    $0xffffff65,%edx
  0x000000000284c9c6: nop
  0x000000000284c9c7: callq  0x00000000027857a0  ; OopMap{rbp=Oop off=108}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000000284c9cc: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x000000000284c9cd: mov    %rdx,(%rsp)
  0x000000000284c9d1: mov    %r8d,0xc(%rsp)
  0x000000000284c9d6: mov    $0xffffff65,%edx
  0x000000000284c9db: callq  0x00000000027857a0  ; OopMap{[0]=Oop off=128}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000000284c9e0: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x000000000284c9e1: mov    $0xfffffff6,%edx
  0x000000000284c9e6: nop
  0x000000000284c9e7: callq  0x00000000027857a0  ; OopMap{off=140}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000000284c9ec: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x000000000284c9ed: hlt    
  0x000000000284c9ee: hlt    
  0x000000000284c9ef: hlt    
  0x000000000284c9f0: hlt    
  0x000000000284c9f1: hlt    
  0x000000000284c9f2: hlt    
  0x000000000284c9f3: hlt    
  0x000000000284c9f4: hlt    
  0x000000000284c9f5: hlt    
  0x000000000284c9f6: hlt    
  0x000000000284c9f7: hlt    
  0x000000000284c9f8: hlt    
  0x000000000284c9f9: hlt    
  0x000000000284c9fa: hlt    
  0x000000000284c9fb: hlt    
  0x000000000284c9fc: hlt    
  0x000000000284c9fd: hlt    
  0x000000000284c9fe: hlt    
  0x000000000284c9ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000000284ca00: jmpq   0x000000000283b1e0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000000284ca05: callq  0x000000000284ca0a
  0x000000000284ca0a: subq   $0x5,(%rsp)
  0x000000000284ca0f: jmpq   0x0000000002787600  ;   {runtime_call}
  0x000000000284ca14: hlt    
  0x000000000284ca15: hlt    
  0x000000000284ca16: hlt    
  0x000000000284ca17: hlt    
<nmethod compile_id='10' compiler='C2' level='4' entry='0x000000000284c960' size='896' address='0x000000000284c810' relocation_offset='288' insts_offset='336' stub_offset='496' scopes_data_offset='528' scopes_pcs_offset='632' dependencies_offset='872' nul_chk_table_offset='880' method='java/lang/String charAt (I)C' bytes='29' count='89731' iicount='89731' stamp='0.100'/>
<writer thread='7864'/>
Decoding compiled method 0x0000000002851810:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000056c78fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0xb0]  (sp of caller)
  0x0000000002851a20: mov    %eax,-0x6000(%rsp)
  0x0000000002851a27: push   %rbp
  0x0000000002851a28: sub    $0xa0,%rsp
  0x0000000002851a2f: mov    %rdx,%r11
  0x0000000002851a32: movabs $0x56d71b78,%rbx   ;   {metadata(method data for {method} {0x0000000056c78fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002851a3c: mov    0xdc(%rbx),%edx
  0x0000000002851a42: add    $0x8,%edx
  0x0000000002851a45: mov    %edx,0xdc(%rbx)
  0x0000000002851a4b: movabs $0x56c78fc0,%rbx   ;   {metadata({method} {0x0000000056c78fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002851a55: and    $0x1ff8,%edx
  0x0000000002851a5b: cmp    $0x0,%edx
  0x0000000002851a5e: je     0x00000000028522a1  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x0000000002851a64: mov    %r9,%r13
  0x0000000002851a67: sub    %r8d,%r13d
  0x0000000002851a6a: cmp    $0x0,%r13d
  0x0000000002851a6e: movabs $0x56d71b78,%rbx   ;   {metadata(method data for {method} {0x0000000056c78fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002851a78: movabs $0x108,%rdx
  0x0000000002851a82: jge    0x0000000002851a92
  0x0000000002851a88: movabs $0x118,%rdx
  0x0000000002851a92: mov    (%rbx,%rdx,1),%rsi
  0x0000000002851a96: lea    0x1(%rsi),%rsi
  0x0000000002851a9a: mov    %rsi,(%rbx,%rdx,1)
  0x0000000002851a9e: jl     0x0000000002851c62  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x0000000002851aa4: mov    %r13,%rbx
  0x0000000002851aa7: movabs $0x16b60208,%rdx   ;   {metadata({type array char})}
  0x0000000002851ab1: movslq %ebx,%rbx
  0x0000000002851ab4: mov    %rbx,%rdi
  0x0000000002851ab7: cmp    $0xffffff,%rbx
  0x0000000002851abe: ja     0x00000000028522b8
  0x0000000002851ac4: movabs $0x17,%rsi
  0x0000000002851ace: lea    (%rsi,%rbx,2),%rsi
  0x0000000002851ad2: and    $0xfffffffffffffff8,%rsi
  0x0000000002851ad6: mov    0x60(%r15),%rax
  0x0000000002851ada: lea    (%rax,%rsi,1),%rsi
  0x0000000002851ade: cmp    0x70(%r15),%rsi
  0x0000000002851ae2: ja     0x00000000028522b8
  0x0000000002851ae8: mov    %rsi,0x60(%r15)
  0x0000000002851aec: sub    %rax,%rsi
  0x0000000002851aef: movq   $0x1,(%rax)
  0x0000000002851af6: mov    %rdx,%rcx
  0x0000000002851af9: mov    %ecx,0x8(%rax)
  0x0000000002851afc: mov    %ebx,0xc(%rax)
  0x0000000002851aff: sub    $0x10,%rsi
  0x0000000002851b03: je     0x0000000002851b1a
  0x0000000002851b09: xor    %rbx,%rbx
  0x0000000002851b0c: shr    $0x3,%rsi
  0x0000000002851b10: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002851b15: dec    %rsi
  0x0000000002851b18: jne    0x0000000002851b10  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000002851b1a: mov    0xc(%r11),%edx     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x00000000028522c2
  0x0000000002851b1e: sub    %r8d,%edx
  0x0000000002851b21: movabs $0x56d71b78,%r9    ;   {metadata(method data for {method} {0x0000000056c78fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002851b2b: addq   $0x1,0x208(%r9)
  0x0000000002851b33: movabs $0x56d721b8,%r9    ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002851b3d: mov    0xdc(%r9),%edi
  0x0000000002851b44: add    $0x8,%edi
  0x0000000002851b47: mov    %edi,0xdc(%r9)
  0x0000000002851b4e: movabs $0x56c542a0,%r9    ;   {metadata({method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002851b58: and    $0x7ffff8,%edi
  0x0000000002851b5e: cmp    $0x0,%edi
  0x0000000002851b61: je     0x00000000028522c7
  0x0000000002851b67: cmp    %r13d,%edx
  0x0000000002851b6a: movabs $0x56d721b8,%r9    ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002851b74: movabs $0x108,%rdi
  0x0000000002851b7e: jg     0x0000000002851b8e
  0x0000000002851b84: movabs $0x118,%rdi
  0x0000000002851b8e: mov    (%r9,%rdi,1),%rsi
  0x0000000002851b92: lea    0x1(%rsi),%rsi
  0x0000000002851b96: mov    %rsi,(%r9,%rdi,1)
  0x0000000002851b9a: jg     0x0000000002851bb9  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002851ba0: movabs $0x56d721b8,%r9    ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002851baa: incl   0x128(%r9)
  0x0000000002851bb1: mov    %rdx,%rsi
  0x0000000002851bb4: jmpq   0x0000000002851bbc  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002851bb9: mov    %r13,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002851bbc: movabs $0x56d71b78,%rdx   ;   {metadata(method data for {method} {0x0000000056c78fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002851bc6: addq   $0x1,0x218(%rdx)
  0x0000000002851bce: mov    %r11,%rdx
  0x0000000002851bd1: mov    %rax,%r9
  0x0000000002851bd4: mov    $0x0,%edi
  0x0000000002851bd9: mov    %rax,0x70(%rsp)
  0x0000000002851bde: test   %r8d,%r8d
  0x0000000002851be1: jl     0x00000000028522de
  0x0000000002851be7: lea    (%r8,%rsi,1),%rcx
  0x0000000002851beb: cmp    0xc(%rdx),%ecx
  0x0000000002851bee: ja     0x00000000028522de
  0x0000000002851bf4: lea    (%rdi,%rsi,1),%rcx
  0x0000000002851bf8: cmp    0xc(%r9),%ecx
  0x0000000002851bfc: ja     0x00000000028522de
  0x0000000002851c02: test   %esi,%esi
  0x0000000002851c04: jl     0x00000000028522de
  0x0000000002851c0a: je     0x0000000002851c4e
  0x0000000002851c10: movslq %r8d,%r8
  0x0000000002851c13: movslq %edi,%rdi
  0x0000000002851c16: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002851c1b: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002851c20: mov    %rsi,%r8
  0x0000000002851c23: sub    $0x20,%rsp
  0x0000000002851c27: test   $0xf,%esp
  0x0000000002851c2d: je     0x0000000002851c45
  0x0000000002851c33: sub    $0x8,%rsp
  0x0000000002851c37: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002851c3c: add    $0x8,%rsp
  0x0000000002851c40: jmpq   0x0000000002851c4a
  0x0000000002851c45: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002851c4a: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000002851c4e: mov    0x70(%rsp),%rax
  0x0000000002851c53: add    $0xa0,%rsp
  0x0000000002851c5a: pop    %rbp
  0x0000000002851c5b: test   %eax,-0x2631b61(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x0000000002851c61: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x0000000002851c62: mov    %r9d,0x80(%rsp)
  0x0000000002851c6a: nopw   0x0(%rax,%rax,1)
  0x0000000002851c70: jmpq   0x00000000028522f8  ;   {no_reloc}
  0x0000000002851c75: add    %al,(%rax)
  0x0000000002851c77: add    %al,(%rax)
  0x0000000002851c79: add    %cl,-0x75(%rcx)
  0x0000000002851c7c: rex.RXB (bad) 
  0x0000000002851c7e: lea    0x20(%rax),%rdi
  0x0000000002851c82: cmp    0x70(%r15),%rdi
  0x0000000002851c86: ja     0x0000000002852302
  0x0000000002851c8c: mov    %rdi,0x60(%r15)
  0x0000000002851c90: mov    0xa8(%rdx),%rcx
  0x0000000002851c97: mov    %rcx,(%rax)
  0x0000000002851c9a: mov    %rdx,%rcx
  0x0000000002851c9d: mov    %ecx,0x8(%rax)
  0x0000000002851ca0: xor    %rcx,%rcx
  0x0000000002851ca3: mov    %ecx,0xc(%rax)
  0x0000000002851ca6: xor    %rcx,%rcx
  0x0000000002851ca9: mov    %rcx,0x10(%rax)
  0x0000000002851cad: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x0000000002851cb1: nopl   0x0(%rax)
  0x0000000002851cb8: jmpq   0x000000000285231e  ;   {no_reloc}
  0x0000000002851cbd: add    %al,(%rax)
  0x0000000002851cbf: add    %al,(%rax)
  0x0000000002851cc1: add    %cl,-0x77(%rax)
  0x0000000002851cc4: test   %ah,(%rax,%rcx,4)
  0x0000000002851cc7: add    %al,(%rax)
  0x0000000002851cc9: add    %cl,-0x75(%rcx)
  0x0000000002851ccc: rex.RXB (bad) 
  0x0000000002851cce: lea    0x18(%rax),%rdi
  0x0000000002851cd2: cmp    0x70(%r15),%rdi
  0x0000000002851cd6: ja     0x0000000002852328
  0x0000000002851cdc: mov    %rdi,0x60(%r15)
  0x0000000002851ce0: mov    0xa8(%rdx),%rcx
  0x0000000002851ce7: mov    %rcx,(%rax)
  0x0000000002851cea: mov    %rdx,%rcx
  0x0000000002851ced: mov    %ecx,0x8(%rax)
  0x0000000002851cf0: xor    %rcx,%rcx
  0x0000000002851cf3: mov    %ecx,0xc(%rax)
  0x0000000002851cf6: xor    %rcx,%rcx
  0x0000000002851cf9: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x0000000002851cfd: mov    %rax,%rbx
  0x0000000002851d00: movabs $0x56d71b78,%rdx   ;   {metadata(method data for {method} {0x0000000056c78fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002851d0a: addq   $0x1,0x128(%rdx)
  0x0000000002851d12: movabs $0x56d79458,%rbx   ;   {metadata(method data for {method} {0x0000000056bd7650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002851d1c: mov    0xdc(%rbx),%edx
  0x0000000002851d22: add    $0x8,%edx
  0x0000000002851d25: mov    %edx,0xdc(%rbx)
  0x0000000002851d2b: movabs $0x56bd7648,%rbx   ;   {metadata({method} {0x0000000056bd7650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002851d35: and    $0x7ffff8,%edx
  0x0000000002851d3b: cmp    $0x0,%edx
  0x0000000002851d3e: je     0x0000000002852335
  0x0000000002851d44: mov    %rax,%rbx
  0x0000000002851d47: movabs $0x56d79458,%rdx   ;   {metadata(method data for {method} {0x0000000056bd7650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002851d51: addq   $0x1,0x108(%rdx)
  0x0000000002851d59: movabs $0x56d797c0,%rbx   ;   {metadata(method data for {method} {0x0000000056bd3980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002851d63: mov    0xdc(%rbx),%edx
  0x0000000002851d69: add    $0x8,%edx
  0x0000000002851d6c: mov    %edx,0xdc(%rbx)
  0x0000000002851d72: movabs $0x56bd3978,%rbx   ;   {metadata({method} {0x0000000056bd3980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002851d7c: and    $0x7ffff8,%edx
  0x0000000002851d82: cmp    $0x0,%edx
  0x0000000002851d85: je     0x000000000285234c
  0x0000000002851d8b: mov    %rax,%rbx
  0x0000000002851d8e: movabs $0x56d797c0,%rdx   ;   {metadata(method data for {method} {0x0000000056bd3980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002851d98: addq   $0x1,0x108(%rdx)
  0x0000000002851da0: movabs $0x56c933b0,%rbx   ;   {metadata(method data for {method} {0x0000000056b60488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002851daa: mov    0xdc(%rbx),%edx
  0x0000000002851db0: add    $0x8,%edx
  0x0000000002851db3: mov    %edx,0xdc(%rbx)
  0x0000000002851db9: movabs $0x56b60480,%rbx   ;   {metadata({method} {0x0000000056b60488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002851dc3: and    $0x7ffff8,%edx
  0x0000000002851dc9: cmp    $0x0,%edx
  0x0000000002851dcc: je     0x0000000002852363
  0x0000000002851dd2: mov    $0x10,%ebx
  0x0000000002851dd7: movabs $0x16b60208,%rdx   ;   {metadata({type array char})}
  0x0000000002851de1: mov    %rax,%r13
  0x0000000002851de4: movslq %ebx,%rbx
  0x0000000002851de7: mov    %rbx,%rdi
  0x0000000002851dea: cmp    $0xffffff,%rbx
  0x0000000002851df1: ja     0x000000000285237a
  0x0000000002851df7: movabs $0x17,%rsi
  0x0000000002851e01: lea    (%rsi,%rbx,2),%rsi
  0x0000000002851e05: and    $0xfffffffffffffff8,%rsi
  0x0000000002851e09: mov    0x60(%r15),%rax
  0x0000000002851e0d: lea    (%rax,%rsi,1),%rsi
  0x0000000002851e11: cmp    0x70(%r15),%rsi
  0x0000000002851e15: ja     0x000000000285237a
  0x0000000002851e1b: mov    %rsi,0x60(%r15)
  0x0000000002851e1f: sub    %rax,%rsi
  0x0000000002851e22: movq   $0x1,(%rax)
  0x0000000002851e29: mov    %rdx,%rcx
  0x0000000002851e2c: mov    %ecx,0x8(%rax)
  0x0000000002851e2f: mov    %ebx,0xc(%rax)
  0x0000000002851e32: sub    $0x10,%rsi
  0x0000000002851e36: je     0x0000000002851e4d
  0x0000000002851e3c: xor    %rbx,%rbx
  0x0000000002851e3f: shr    $0x3,%rsi
  0x0000000002851e43: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002851e48: dec    %rsi
  0x0000000002851e4b: jne    0x0000000002851e43  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000002851e4d: mov    %rax,%r10
  0x0000000002851e50: mov    %r10d,0x10(%r13)
  0x0000000002851e54: mov    %r13,%rax
  0x0000000002851e57: shr    $0x9,%rax
  0x0000000002851e5b: movabs $0x116f6000,%rdx
  0x0000000002851e65: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000002851e69: mov    %r13,%rax
  0x0000000002851e6c: movabs $0x56d71b78,%rdx   ;   {metadata(method data for {method} {0x0000000056c78fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002851e76: mov    0x8(%rax),%eax
  0x0000000002851e79: cmp    0x140(%rdx),%rax
  0x0000000002851e80: jne    0x0000000002851e8f
  0x0000000002851e82: addq   $0x1,0x148(%rdx)
  0x0000000002851e8a: jmpq   0x0000000002851ef5
  0x0000000002851e8f: cmp    0x150(%rdx),%rax
  0x0000000002851e96: jne    0x0000000002851ea5
  0x0000000002851e98: addq   $0x1,0x158(%rdx)
  0x0000000002851ea0: jmpq   0x0000000002851ef5
  0x0000000002851ea5: cmpq   $0x0,0x140(%rdx)
  0x0000000002851eb0: jne    0x0000000002851ec9
  0x0000000002851eb2: mov    %rax,0x140(%rdx)
  0x0000000002851eb9: movq   $0x1,0x148(%rdx)
  0x0000000002851ec4: jmpq   0x0000000002851ef5
  0x0000000002851ec9: cmpq   $0x0,0x150(%rdx)
  0x0000000002851ed4: jne    0x0000000002851eed
  0x0000000002851ed6: mov    %rax,0x150(%rdx)
  0x0000000002851edd: movq   $0x1,0x158(%rdx)
  0x0000000002851ee8: jmpq   0x0000000002851ef5
  0x0000000002851eed: addq   $0x1,0x138(%rdx)
  0x0000000002851ef5: movabs $0x56d7a978,%rdx   ;   {metadata(method data for {method} {0x0000000056bd7e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002851eff: mov    0xdc(%rdx),%esi
  0x0000000002851f05: add    $0x8,%esi
  0x0000000002851f08: mov    %esi,0xdc(%rdx)
  0x0000000002851f0e: movabs $0x56bd7e20,%rdx   ;   {metadata({method} {0x0000000056bd7e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002851f18: and    $0x7ffff8,%esi
  0x0000000002851f1e: cmp    $0x0,%esi
  0x0000000002851f21: je     0x0000000002852384
  0x0000000002851f27: mov    %r13,%rax
  0x0000000002851f2a: movabs $0x56d7a978,%rdx   ;   {metadata(method data for {method} {0x0000000056bd7e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002851f34: addq   $0x1,0x108(%rdx)
  0x0000000002851f3c: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x0000000002851f3f: mov    %r13,0x78(%rsp)
  0x0000000002851f44: nop
  0x0000000002851f45: nop
  0x0000000002851f46: nop
  0x0000000002851f47: callq  0x00000000027861a0  ; OopMap{[120]=Oop [136]=Oop off=1324}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002851f4c: mov    0x78(%rsp),%rax
  0x0000000002851f51: movabs $0x56d71b78,%r8    ;   {metadata(method data for {method} {0x0000000056c78fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002851f5b: mov    0x8(%rax),%eax
  0x0000000002851f5e: cmp    0x170(%r8),%rax
  0x0000000002851f65: jne    0x0000000002851f74
  0x0000000002851f67: addq   $0x1,0x178(%r8)
  0x0000000002851f6f: jmpq   0x0000000002851fda
  0x0000000002851f74: cmp    0x180(%r8),%rax
  0x0000000002851f7b: jne    0x0000000002851f8a
  0x0000000002851f7d: addq   $0x1,0x188(%r8)
  0x0000000002851f85: jmpq   0x0000000002851fda
  0x0000000002851f8a: cmpq   $0x0,0x170(%r8)
  0x0000000002851f95: jne    0x0000000002851fae
  0x0000000002851f97: mov    %rax,0x170(%r8)
  0x0000000002851f9e: movq   $0x1,0x178(%r8)
  0x0000000002851fa9: jmpq   0x0000000002851fda
  0x0000000002851fae: cmpq   $0x0,0x180(%r8)
  0x0000000002851fb9: jne    0x0000000002851fd2
  0x0000000002851fbb: mov    %rax,0x180(%r8)
  0x0000000002851fc2: movq   $0x1,0x188(%r8)
  0x0000000002851fcd: jmpq   0x0000000002851fda
  0x0000000002851fd2: addq   $0x1,0x168(%r8)
  0x0000000002851fda: movabs $0x56d7b288,%r8    ;   {metadata(method data for {method} {0x0000000056bd7968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002851fe4: mov    0xdc(%r8),%edx
  0x0000000002851feb: add    $0x8,%edx
  0x0000000002851fee: mov    %edx,0xdc(%r8)
  0x0000000002851ff5: movabs $0x56bd7960,%r8    ;   {metadata({method} {0x0000000056bd7968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002851fff: and    $0x7ffff8,%edx
  0x0000000002852005: cmp    $0x0,%edx
  0x0000000002852008: je     0x000000000285239b
  0x000000000285200e: mov    0x78(%rsp),%rax
  0x0000000002852013: movabs $0x56d7b288,%r8    ;   {metadata(method data for {method} {0x0000000056bd7968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000000285201d: addq   $0x1,0x108(%r8)
  0x0000000002852025: movabs $0xd5ca6670,%r8    ;   {oop(&quot; &gt; &quot;)}
  0x000000000285202f: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x0000000002852034: nop
  0x0000000002852035: nop
  0x0000000002852036: nop
  0x0000000002852037: callq  0x00000000027861a0  ; OopMap{[120]=Oop [136]=Oop off=1564}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000000285203c: mov    0x78(%rsp),%rax
  0x0000000002852041: movabs $0x56d71b78,%r8    ;   {metadata(method data for {method} {0x0000000056c78fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000000285204b: mov    0x8(%rax),%eax
  0x000000000285204e: cmp    0x1a0(%r8),%rax
  0x0000000002852055: jne    0x0000000002852064
  0x0000000002852057: addq   $0x1,0x1a8(%r8)
  0x000000000285205f: jmpq   0x00000000028520ca
  0x0000000002852064: cmp    0x1b0(%r8),%rax
  0x000000000285206b: jne    0x000000000285207a
  0x000000000285206d: addq   $0x1,0x1b8(%r8)
  0x0000000002852075: jmpq   0x00000000028520ca
  0x000000000285207a: cmpq   $0x0,0x1a0(%r8)
  0x0000000002852085: jne    0x000000000285209e
  0x0000000002852087: mov    %rax,0x1a0(%r8)
  0x000000000285208e: movq   $0x1,0x1a8(%r8)
  0x0000000002852099: jmpq   0x00000000028520ca
  0x000000000285209e: cmpq   $0x0,0x1b0(%r8)
  0x00000000028520a9: jne    0x00000000028520c2
  0x00000000028520ab: mov    %rax,0x1b0(%r8)
  0x00000000028520b2: movq   $0x1,0x1b8(%r8)
  0x00000000028520bd: jmpq   0x00000000028520ca
  0x00000000028520c2: addq   $0x1,0x198(%r8)
  0x00000000028520ca: movabs $0x56d7a978,%r8    ;   {metadata(method data for {method} {0x0000000056bd7e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000028520d4: mov    0xdc(%r8),%edx
  0x00000000028520db: add    $0x8,%edx
  0x00000000028520de: mov    %edx,0xdc(%r8)
  0x00000000028520e5: movabs $0x56bd7e20,%r8    ;   {metadata({method} {0x0000000056bd7e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000028520ef: and    $0x7ffff8,%edx
  0x00000000028520f5: cmp    $0x0,%edx
  0x00000000028520f8: je     0x00000000028523b2
  0x00000000028520fe: mov    0x78(%rsp),%rax
  0x0000000002852103: movabs $0x56d7a978,%r8    ;   {metadata(method data for {method} {0x0000000056bd7e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000000285210d: addq   $0x1,0x108(%r8)
  0x0000000002852115: mov    0x80(%rsp),%r8d
  0x000000000285211d: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x0000000002852122: nop
  0x0000000002852123: nop
  0x0000000002852124: nop
  0x0000000002852125: nop
  0x0000000002852126: nop
  0x0000000002852127: callq  0x00000000027861a0  ; OopMap{[120]=Oop [136]=Oop off=1804}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000000285212c: mov    0x78(%rsp),%rax
  0x0000000002852131: movabs $0x56d71b78,%rdx   ;   {metadata(method data for {method} {0x0000000056c78fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000000285213b: mov    0x8(%rax),%eax
  0x000000000285213e: cmp    0x1d0(%rdx),%rax
  0x0000000002852145: jne    0x0000000002852154
  0x0000000002852147: addq   $0x1,0x1d8(%rdx)
  0x000000000285214f: jmpq   0x00000000028521ba
  0x0000000002852154: cmp    0x1e0(%rdx),%rax
  0x000000000285215b: jne    0x000000000285216a
  0x000000000285215d: addq   $0x1,0x1e8(%rdx)
  0x0000000002852165: jmpq   0x00000000028521ba
  0x000000000285216a: cmpq   $0x0,0x1d0(%rdx)
  0x0000000002852175: jne    0x000000000285218e
  0x0000000002852177: mov    %rax,0x1d0(%rdx)
  0x000000000285217e: movq   $0x1,0x1d8(%rdx)
  0x0000000002852189: jmpq   0x00000000028521ba
  0x000000000285218e: cmpq   $0x0,0x1e0(%rdx)
  0x0000000002852199: jne    0x00000000028521b2
  0x000000000285219b: mov    %rax,0x1e0(%rdx)
  0x00000000028521a2: movq   $0x1,0x1e8(%rdx)
  0x00000000028521ad: jmpq   0x00000000028521ba
  0x00000000028521b2: addq   $0x1,0x1c8(%rdx)
  0x00000000028521ba: movabs $0x56d7d210,%rdx   ;   {metadata(method data for {method} {0x0000000056bd8d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000028521c4: mov    0xdc(%rdx),%esi
  0x00000000028521ca: add    $0x8,%esi
  0x00000000028521cd: mov    %esi,0xdc(%rdx)
  0x00000000028521d3: movabs $0x56bd8d10,%rdx   ;   {metadata({method} {0x0000000056bd8d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000028521dd: and    $0x7ffff8,%esi
  0x00000000028521e3: cmp    $0x0,%esi
  0x00000000028521e6: je     0x00000000028523c9
  0x00000000028521ec: movabs $0x16b616d0,%rdx   ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000028521f6: mov    0x60(%r15),%rax
  0x00000000028521fa: lea    0x18(%rax),%rdi
  0x00000000028521fe: cmp    0x70(%r15),%rdi
  0x0000000002852202: ja     0x00000000028523e0
  0x0000000002852208: mov    %rdi,0x60(%r15)
  0x000000000285220c: mov    0xa8(%rdx),%rcx
  0x0000000002852213: mov    %rcx,(%rax)
  0x0000000002852216: mov    %rdx,%rcx
  0x0000000002852219: mov    %ecx,0x8(%rax)
  0x000000000285221c: xor    %rcx,%rcx
  0x000000000285221f: mov    %ecx,0xc(%rax)
  0x0000000002852222: xor    %rcx,%rcx
  0x0000000002852225: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002852229: mov    0x78(%rsp),%r8
  0x000000000285222e: mov    0x10(%r8),%r9d     ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002852232: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002852236: mov    %rax,%r8
  0x0000000002852239: movabs $0x56d7d210,%rdx   ;   {metadata(method data for {method} {0x0000000056bd8d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002852243: addq   $0x1,0x108(%rdx)
  0x000000000285224b: mov    %r9,%r8
  0x000000000285224e: mov    $0x0,%r9d
  0x0000000002852254: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002852257: mov    %rax,0x90(%rsp)
  0x000000000285225f: callq  0x00000000027861a0  ; OopMap{[136]=Oop [144]=Oop off=2116}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002852264: mov    0x88(%rsp),%rax
  0x000000000285226c: movabs $0x56d71b78,%r8    ;   {metadata(method data for {method} {0x0000000056c78fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002852276: addq   $0x1,0x1f8(%r8)
  0x000000000285227e: mov    0x90(%rsp),%r8
  0x0000000002852286: mov    0x88(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x000000000285228e: nop
  0x000000000285228f: callq  0x00000000027861a0  ; OopMap{[136]=Oop off=2164}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002852294: mov    0x88(%rsp),%rax
  0x000000000285229c: jmpq   0x0000000002852418
  0x00000000028522a1: mov    %rbx,0x8(%rsp)
  0x00000000028522a6: movq   $0xffffffffffffffff,(%rsp)
  0x00000000028522ae: callq  0x00000000028400a0  ; OopMap{r11=Oop off=2195}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x00000000028522b3: jmpq   0x0000000002851a64
  0x00000000028522b8: callq  0x000000000283ca40  ; OopMap{r11=Oop off=2205}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x00000000028522bd: jmpq   0x0000000002851b1a
  0x00000000028522c2: callq  0x000000000283b9c0  ; OopMap{r11=Oop rax=Oop off=2215}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x00000000028522c7: mov    %r9,0x8(%rsp)
  0x00000000028522cc: movq   $0xffffffffffffffff,(%rsp)
  0x00000000028522d4: callq  0x00000000028400a0  ; OopMap{r11=Oop rax=Oop off=2233}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x00000000028522d9: jmpq   0x0000000002851b67
  0x00000000028522de: nop
  0x00000000028522df: callq  0x0000000002786620  ; OopMap{[112]=Oop off=2244}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x00000000028522e4: jmpq   0x0000000002851c4e
  0x00000000028522e9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000028522f3: mov    $0xa050f00,%eax
  0x00000000028522f8: callq  0x000000000283efe0  ; OopMap{off=2269}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00000000028522fd: jmpq   0x0000000002851c70
  0x0000000002852302: mov    %rdx,%rdx
  0x0000000002852305: callq  0x000000000283c140  ; OopMap{off=2282}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000000285230a: jmpq   0x0000000002851cb1
  0x000000000285230f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002852319: mov    $0xa050f00,%eax
  0x000000000285231e: callq  0x000000000283efe0  ; OopMap{rax=Oop off=2307}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000002852323: jmpq   0x0000000002851cb8
  0x0000000002852328: mov    %rdx,%rdx
  0x000000000285232b: callq  0x000000000283c140  ; OopMap{[136]=Oop off=2320}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000002852330: jmpq   0x0000000002851cfd
  0x0000000002852335: mov    %rbx,0x8(%rsp)
  0x000000000285233a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002852342: callq  0x00000000028400a0  ; OopMap{[136]=Oop rax=Oop off=2343}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002852347: jmpq   0x0000000002851d44
  0x000000000285234c: mov    %rbx,0x8(%rsp)
  0x0000000002852351: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002852359: callq  0x00000000028400a0  ; OopMap{[136]=Oop rax=Oop off=2366}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000000285235e: jmpq   0x0000000002851d8b
  0x0000000002852363: mov    %rbx,0x8(%rsp)
  0x0000000002852368: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002852370: callq  0x00000000028400a0  ; OopMap{[136]=Oop rax=Oop off=2389}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002852375: jmpq   0x0000000002851dd2
  0x000000000285237a: callq  0x000000000283ca40  ; OopMap{[136]=Oop r13=Oop off=2399}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000000285237f: jmpq   0x0000000002851e4d
  0x0000000002852384: mov    %rdx,0x8(%rsp)
  0x0000000002852389: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002852391: callq  0x00000000028400a0  ; OopMap{[136]=Oop r13=Oop off=2422}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x0000000002852396: jmpq   0x0000000002851f27
  0x000000000285239b: mov    %r8,0x8(%rsp)
  0x00000000028523a0: movq   $0xffffffffffffffff,(%rsp)
  0x00000000028523a8: callq  0x00000000028400a0  ; OopMap{[120]=Oop [136]=Oop off=2445}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x00000000028523ad: jmpq   0x000000000285200e
  0x00000000028523b2: mov    %r8,0x8(%rsp)
  0x00000000028523b7: movq   $0xffffffffffffffff,(%rsp)
  0x00000000028523bf: callq  0x00000000028400a0  ; OopMap{[120]=Oop [136]=Oop off=2468}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x00000000028523c4: jmpq   0x00000000028520fe
  0x00000000028523c9: mov    %rdx,0x8(%rsp)
  0x00000000028523ce: movq   $0xffffffffffffffff,(%rsp)
  0x00000000028523d6: callq  0x00000000028400a0  ; OopMap{[120]=Oop [136]=Oop off=2491}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00000000028523db: jmpq   0x00000000028521ec
  0x00000000028523e0: mov    %rdx,%rdx
  0x00000000028523e3: callq  0x000000000283c140  ; OopMap{[120]=Oop [136]=Oop off=2504}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00000000028523e8: jmpq   0x0000000002852229
  0x00000000028523ed: nop
  0x00000000028523ee: nop
  0x00000000028523ef: mov    0x2a8(%r15),%rax
  0x00000000028523f6: movabs $0x0,%r10
  0x0000000002852400: mov    %r10,0x2a8(%r15)
  0x0000000002852407: movabs $0x0,%r10
  0x0000000002852411: mov    %r10,0x2b0(%r15)
  0x0000000002852418: add    $0xa0,%rsp
  0x000000000285241f: pop    %rbp
  0x0000000002852420: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x0000000002852425: hlt    
  0x0000000002852426: hlt    
  0x0000000002852427: hlt    
  0x0000000002852428: hlt    
  0x0000000002852429: hlt    
  0x000000000285242a: hlt    
  0x000000000285242b: hlt    
  0x000000000285242c: hlt    
  0x000000000285242d: hlt    
  0x000000000285242e: hlt    
  0x000000000285242f: hlt    
  0x0000000002852430: hlt    
  0x0000000002852431: hlt    
  0x0000000002852432: hlt    
  0x0000000002852433: hlt    
  0x0000000002852434: hlt    
  0x0000000002852435: hlt    
  0x0000000002852436: hlt    
  0x0000000002852437: hlt    
  0x0000000002852438: hlt    
  0x0000000002852439: hlt    
  0x000000000285243a: hlt    
  0x000000000285243b: hlt    
  0x000000000285243c: hlt    
  0x000000000285243d: hlt    
  0x000000000285243e: hlt    
  0x000000000285243f: hlt    
[Stub Code]
  0x0000000002852440: nop                       ;   {no_reloc}
  0x0000000002852441: nop
  0x0000000002852442: nop
  0x0000000002852443: nop
  0x0000000002852444: nop
  0x0000000002852445: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000285244f: jmpq   0x000000000285244f  ;   {runtime_call}
  0x0000000002852454: nop
  0x0000000002852455: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000285245f: jmpq   0x000000000285245f  ;   {runtime_call}
  0x0000000002852464: nop
  0x0000000002852465: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000285246f: jmpq   0x000000000285246f  ;   {runtime_call}
  0x0000000002852474: nop
  0x0000000002852475: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000285247f: jmpq   0x000000000285247f  ;   {runtime_call}
  0x0000000002852484: nop
  0x0000000002852485: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000285248f: jmpq   0x000000000285248f  ;   {runtime_call}
  0x0000000002852494: nop
  0x0000000002852495: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000285249f: jmpq   0x000000000285249f  ;   {runtime_call}
[Exception Handler]
  0x00000000028524a4: callq  0x000000000283d860  ;   {runtime_call}
  0x00000000028524a9: mov    %rsp,-0x28(%rsp)
  0x00000000028524ae: sub    $0x80,%rsp
  0x00000000028524b5: mov    %rax,0x78(%rsp)
  0x00000000028524ba: mov    %rcx,0x70(%rsp)
  0x00000000028524bf: mov    %rdx,0x68(%rsp)
  0x00000000028524c4: mov    %rbx,0x60(%rsp)
  0x00000000028524c9: mov    %rbp,0x50(%rsp)
  0x00000000028524ce: mov    %rsi,0x48(%rsp)
  0x00000000028524d3: mov    %rdi,0x40(%rsp)
  0x00000000028524d8: mov    %r8,0x38(%rsp)
  0x00000000028524dd: mov    %r9,0x30(%rsp)
  0x00000000028524e2: mov    %r10,0x28(%rsp)
  0x00000000028524e7: mov    %r11,0x20(%rsp)
  0x00000000028524ec: mov    %r12,0x18(%rsp)
  0x00000000028524f1: mov    %r13,0x10(%rsp)
  0x00000000028524f6: mov    %r14,0x8(%rsp)
  0x00000000028524fb: mov    %r15,(%rsp)
  0x00000000028524ff: movabs $0x61388e30,%rcx   ;   {external_word}
  0x0000000002852509: movabs $0x28524a9,%rdx    ;   {internal_word}
  0x0000000002852513: mov    %rsp,%r8
  0x0000000002852516: and    $0xfffffffffffffff0,%rsp
  0x000000000285251a: callq  0x0000000061043d40  ;   {runtime_call}
  0x000000000285251f: hlt    
[Deopt Handler Code]
  0x0000000002852520: movabs $0x2852520,%r10    ;   {section_word}
  0x000000000285252a: push   %r10
  0x000000000285252c: jmpq   0x0000000002787600  ;   {runtime_call}
  0x0000000002852531: hlt    
  0x0000000002852532: hlt    
  0x0000000002852533: hlt    
  0x0000000002852534: hlt    
  0x0000000002852535: hlt    
  0x0000000002852536: hlt    
  0x0000000002852537: hlt    
<nmethod compile_id='4' compiler='C1' level='3' entry='0x0000000002851a20' size='4824' address='0x0000000002851810' relocation_offset='288' insts_offset='528' stub_offset='3120' scopes_data_offset='3440' scopes_pcs_offset='4064' dependencies_offset='4800' nul_chk_table_offset='4808' oops_offset='3368' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='332' iicount='332' stamp='0.108'/>
<writer thread='7024'/>
<task_queued compile_id='14' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='256' iicount='256' level='3' stamp='0.109' comment='tiered' hot_count='256'/>
<task_queued compile_id='15' method='java/lang/Character toLowerCase (I)I' bytes='9' count='896' iicount='896' level='3' stamp='0.109' comment='tiered' hot_count='896'/>
<task_queued compile_id='16' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='896' iicount='896' level='3' stamp='0.109' comment='tiered' hot_count='896'/>
<task_queued compile_id='17' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='384' iicount='384' level='3' stamp='0.109' comment='tiered' hot_count='384'/>
<writer thread='7864'/>
Decoding compiled method 0x0000000002850f90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0xb0]  (sp of caller)
  0x0000000002851120: mov    0x8(%rdx),%r10d
  0x0000000002851124: cmp    %rax,%r10
  0x0000000002851127: jne    0x0000000002785f60  ;   {runtime_call}
  0x000000000285112d: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002851138: data16 data16 xchg %ax,%ax
  0x000000000285113c: nopl   0x0(%rax)
[Verified Entry Point]
  0x0000000002851140: mov    %eax,-0x6000(%rsp)
  0x0000000002851147: push   %rbp
  0x0000000002851148: sub    $0xa0,%rsp
  0x000000000285114f: movabs $0x56d85840,%rsi   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002851159: mov    0xdc(%rsi),%edi
  0x000000000285115f: add    $0x8,%edi
  0x0000000002851162: mov    %edi,0xdc(%rsi)
  0x0000000002851168: movabs $0x56bd3bf8,%rsi   ;   {metadata({method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002851172: and    $0x1ff8,%edi
  0x0000000002851178: cmp    $0x0,%edi
  0x000000000285117b: je     0x0000000002851429  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x0000000002851181: mov    0x10(%rdx),%esi    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x0000000002851184: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x0000000002851440
  0x0000000002851187: mov    %r8,%rbx
  0x000000000285118a: sub    %edi,%ebx
  0x000000000285118c: cmp    $0x0,%ebx
  0x000000000285118f: movabs $0x56d85840,%rbx   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002851199: movabs $0x108,%rax
  0x00000000028511a3: jle    0x00000000028511b3
  0x00000000028511a9: movabs $0x118,%rax
  0x00000000028511b3: mov    (%rbx,%rax,1),%rcx
  0x00000000028511b7: lea    0x1(%rcx),%rcx
  0x00000000028511bb: mov    %rcx,(%rbx,%rax,1)
  0x00000000028511bf: jle    0x000000000285141a  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x00000000028511c5: mov    %edi,0x78(%rsp)
  0x00000000028511c9: mov    %rsi,0x80(%rsp)
  0x00000000028511d1: mov    %rdx,%rbx
  0x00000000028511d4: movabs $0x56d85840,%rax   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000028511de: addq   $0x1,0x128(%rax)
  0x00000000028511e6: mov    %rdx,%rbx
  0x00000000028511e9: mov    %rbx,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000028511ec: mov    %rbx,0x88(%rsp)
  0x00000000028511f4: nop
  0x00000000028511f5: nop
  0x00000000028511f6: nop
  0x00000000028511f7: callq  0x00000000027861a0  ; OopMap{[136]=Oop [128]=Oop off=220}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x00000000028511fc: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000028511ff: movabs $0x56d85840,%rbx   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002851209: addq   $0x1,0x138(%rbx)
  0x0000000002851211: movabs $0x56d85c80,%rbx   ;   {metadata(method data for {method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000000285121b: mov    0xdc(%rbx),%edx
  0x0000000002851221: add    $0x8,%edx
  0x0000000002851224: mov    %edx,0xdc(%rbx)
  0x000000000285122a: movabs $0x56c787f8,%rbx   ;   {metadata({method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002851234: and    $0x7ffff8,%edx
  0x000000000285123a: cmp    $0x0,%edx
  0x000000000285123d: je     0x0000000002851445
  0x0000000002851243: mov    %r8,%rbx
  0x0000000002851246: movabs $0x16b60208,%rdx   ;   {metadata({type array char})}
  0x0000000002851250: movslq %ebx,%rbx
  0x0000000002851253: mov    %rbx,%rdi
  0x0000000002851256: cmp    $0xffffff,%rbx
  0x000000000285125d: ja     0x000000000285145c
  0x0000000002851263: movabs $0x17,%rsi
  0x000000000285126d: lea    (%rsi,%rbx,2),%rsi
  0x0000000002851271: and    $0xfffffffffffffff8,%rsi
  0x0000000002851275: mov    0x60(%r15),%rax
  0x0000000002851279: lea    (%rax,%rsi,1),%rsi
  0x000000000285127d: cmp    0x70(%r15),%rsi
  0x0000000002851281: ja     0x000000000285145c
  0x0000000002851287: mov    %rsi,0x60(%r15)
  0x000000000285128b: sub    %rax,%rsi
  0x000000000285128e: movq   $0x1,(%rax)
  0x0000000002851295: mov    %rdx,%rcx
  0x0000000002851298: mov    %ecx,0x8(%rax)
  0x000000000285129b: mov    %ebx,0xc(%rax)
  0x000000000285129e: sub    $0x10,%rsi
  0x00000000028512a2: je     0x00000000028512b9
  0x00000000028512a8: xor    %rbx,%rbx
  0x00000000028512ab: shr    $0x3,%rsi
  0x00000000028512af: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000028512b4: dec    %rsi
  0x00000000028512b7: jne    0x00000000028512af  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000028512b9: movabs $0x56d85c80,%rdx   ;   {metadata(method data for {method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000028512c3: addq   $0x1,0x108(%rdx)
  0x00000000028512cb: movabs $0x56d721b8,%rdx   ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000028512d5: mov    0xdc(%rdx),%r9d
  0x00000000028512dc: add    $0x8,%r9d
  0x00000000028512e0: mov    %r9d,0xdc(%rdx)
  0x00000000028512e7: movabs $0x56c542a0,%rdx   ;   {metadata({method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000028512f1: and    $0x7ffff8,%r9d
  0x00000000028512f8: cmp    $0x0,%r9d
  0x00000000028512fc: je     0x0000000002851466
  0x0000000002851302: mov    0x78(%rsp),%edi
  0x0000000002851306: cmp    %r8d,%edi
  0x0000000002851309: movabs $0x56d721b8,%rdx   ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002851313: movabs $0x108,%r9
  0x000000000285131d: jg     0x000000000285132d
  0x0000000002851323: movabs $0x118,%r9
  0x000000000285132d: mov    (%rdx,%r9,1),%rsi
  0x0000000002851331: lea    0x1(%rsi),%rsi
  0x0000000002851335: mov    %rsi,(%rdx,%r9,1)
  0x0000000002851339: jg     0x0000000002851357  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000000285133f: movabs $0x56d721b8,%rdx   ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002851349: incl   0x128(%rdx)
  0x000000000285134f: mov    %rdi,%rsi
  0x0000000002851352: jmpq   0x000000000285135a  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002851357: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000000285135a: mov    0x80(%rsp),%rdx
  0x0000000002851362: movabs $0x56d85c80,%r8    ;   {metadata(method data for {method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000000285136c: addq   $0x1,0x118(%r8)
  0x0000000002851374: mov    $0x0,%r8d
  0x000000000285137a: mov    %rax,%r9
  0x000000000285137d: mov    $0x0,%edi
  0x0000000002851382: mov    %rax,0x90(%rsp)
  0x000000000285138a: lea    (%r8,%rsi,1),%rcx
  0x000000000285138e: cmp    0xc(%rdx),%ecx
  0x0000000002851391: ja     0x000000000285147d
  0x0000000002851397: lea    (%rdi,%rsi,1),%rcx
  0x000000000285139b: cmp    0xc(%r9),%ecx
  0x000000000285139f: ja     0x000000000285147d
  0x00000000028513a5: test   %esi,%esi
  0x00000000028513a7: jl     0x000000000285147d
  0x00000000028513ad: je     0x00000000028513f1
  0x00000000028513b3: movslq %r8d,%r8
  0x00000000028513b6: movslq %edi,%rdi
  0x00000000028513b9: lea    0x10(%rdx,%r8,2),%rcx
  0x00000000028513be: lea    0x10(%r9,%rdi,2),%rdx
  0x00000000028513c3: mov    %rsi,%r8
  0x00000000028513c6: sub    $0x20,%rsp
  0x00000000028513ca: test   $0xf,%esp
  0x00000000028513d0: je     0x00000000028513e8
  0x00000000028513d6: sub    $0x8,%rsp
  0x00000000028513da: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000028513df: add    $0x8,%rsp
  0x00000000028513e3: jmpq   0x00000000028513ed
  0x00000000028513e8: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000028513ed: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000028513f1: mov    0x90(%rsp),%rax
  0x00000000028513f9: mov    0x88(%rsp),%rdx
  0x0000000002851401: mov    %rax,%r10
  0x0000000002851404: mov    %r10d,0x10(%rdx)
  0x0000000002851408: shr    $0x9,%rdx
  0x000000000285140c: movabs $0x116f6000,%rsi
  0x0000000002851416: movb   $0x0,(%rdx,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x000000000285141a: add    $0xa0,%rsp
  0x0000000002851421: pop    %rbp
  0x0000000002851422: test   %eax,-0x2631328(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x0000000002851428: retq   
  0x0000000002851429: mov    %rsi,0x8(%rsp)
  0x000000000285142e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002851436: callq  0x00000000028400a0  ; OopMap{rdx=Oop off=795}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x000000000285143b: jmpq   0x0000000002851181
  0x0000000002851440: callq  0x000000000283b9c0  ; OopMap{rdx=Oop rsi=Oop off=805}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x0000000002851445: mov    %rbx,0x8(%rsp)
  0x000000000285144a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002851452: callq  0x00000000028400a0  ; OopMap{[136]=Oop [128]=Oop off=823}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000002851457: jmpq   0x0000000002851243
  0x000000000285145c: callq  0x000000000283ca40  ; OopMap{[136]=Oop [128]=Oop off=833}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000002851461: jmpq   0x00000000028512b9
  0x0000000002851466: mov    %rdx,0x8(%rsp)
  0x000000000285146b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002851473: callq  0x00000000028400a0  ; OopMap{[136]=Oop [128]=Oop rax=Oop off=856}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000002851478: jmpq   0x0000000002851302
  0x000000000285147d: nop
  0x000000000285147e: nop
  0x000000000285147f: callq  0x0000000002786620  ; OopMap{[136]=Oop [144]=Oop off=868}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x0000000002851484: jmpq   0x00000000028513f1
  0x0000000002851489: nop
  0x000000000285148a: nop
  0x000000000285148b: mov    0x2a8(%r15),%rax
  0x0000000002851492: movabs $0x0,%r10
  0x000000000285149c: mov    %r10,0x2a8(%r15)
  0x00000000028514a3: movabs $0x0,%r10
  0x00000000028514ad: mov    %r10,0x2b0(%r15)
  0x00000000028514b4: add    $0xa0,%rsp
  0x00000000028514bb: pop    %rbp
  0x00000000028514bc: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x00000000028514c1: hlt    
  0x00000000028514c2: hlt    
  0x00000000028514c3: hlt    
  0x00000000028514c4: hlt    
  0x00000000028514c5: hlt    
  0x00000000028514c6: hlt    
  0x00000000028514c7: hlt    
  0x00000000028514c8: hlt    
  0x00000000028514c9: hlt    
  0x00000000028514ca: hlt    
  0x00000000028514cb: hlt    
  0x00000000028514cc: hlt    
  0x00000000028514cd: hlt    
  0x00000000028514ce: hlt    
  0x00000000028514cf: hlt    
  0x00000000028514d0: hlt    
  0x00000000028514d1: hlt    
  0x00000000028514d2: hlt    
  0x00000000028514d3: hlt    
  0x00000000028514d4: hlt    
  0x00000000028514d5: hlt    
  0x00000000028514d6: hlt    
  0x00000000028514d7: hlt    
  0x00000000028514d8: hlt    
  0x00000000028514d9: hlt    
  0x00000000028514da: hlt    
  0x00000000028514db: hlt    
  0x00000000028514dc: hlt    
  0x00000000028514dd: hlt    
  0x00000000028514de: hlt    
  0x00000000028514df: hlt    
[Stub Code]
  0x00000000028514e0: nop                       ;   {no_reloc}
  0x00000000028514e1: nop
  0x00000000028514e2: nop
  0x00000000028514e3: nop
  0x00000000028514e4: nop
  0x00000000028514e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000028514ef: jmpq   0x00000000028514ef  ;   {runtime_call}
  0x00000000028514f4: nop
  0x00000000028514f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000028514ff: jmpq   0x00000000028514ff  ;   {runtime_call}
[Exception Handler]
  0x0000000002851504: callq  0x000000000283d860  ;   {runtime_call}
  0x0000000002851509: mov    %rsp,-0x28(%rsp)
  0x000000000285150e: sub    $0x80,%rsp
  0x0000000002851515: mov    %rax,0x78(%rsp)
  0x000000000285151a: mov    %rcx,0x70(%rsp)
  0x000000000285151f: mov    %rdx,0x68(%rsp)
  0x0000000002851524: mov    %rbx,0x60(%rsp)
  0x0000000002851529: mov    %rbp,0x50(%rsp)
  0x000000000285152e: mov    %rsi,0x48(%rsp)
  0x0000000002851533: mov    %rdi,0x40(%rsp)
  0x0000000002851538: mov    %r8,0x38(%rsp)
  0x000000000285153d: mov    %r9,0x30(%rsp)
  0x0000000002851542: mov    %r10,0x28(%rsp)
  0x0000000002851547: mov    %r11,0x20(%rsp)
  0x000000000285154c: mov    %r12,0x18(%rsp)
  0x0000000002851551: mov    %r13,0x10(%rsp)
  0x0000000002851556: mov    %r14,0x8(%rsp)
  0x000000000285155b: mov    %r15,(%rsp)
  0x000000000285155f: movabs $0x61388e30,%rcx   ;   {external_word}
  0x0000000002851569: movabs $0x2851509,%rdx    ;   {internal_word}
  0x0000000002851573: mov    %rsp,%r8
  0x0000000002851576: and    $0xfffffffffffffff0,%rsp
  0x000000000285157a: callq  0x0000000061043d40  ;   {runtime_call}
  0x000000000285157f: hlt    
[Deopt Handler Code]
  0x0000000002851580: movabs $0x2851580,%r10    ;   {section_word}
  0x000000000285158a: push   %r10
  0x000000000285158c: jmpq   0x0000000002787600  ;   {runtime_call}
  0x0000000002851591: hlt    
  0x0000000002851592: hlt    
  0x0000000002851593: hlt    
  0x0000000002851594: hlt    
  0x0000000002851595: hlt    
  0x0000000002851596: hlt    
  0x0000000002851597: hlt    
<nmethod compile_id='14' compiler='C1' level='3' entry='0x0000000002851120' size='2128' address='0x0000000002850f90' relocation_offset='288' insts_offset='400' stub_offset='1360' scopes_data_offset='1568' scopes_pcs_offset='1768' dependencies_offset='2104' nul_chk_table_offset='2112' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='847' iicount='847' stamp='0.134'/>
<writer thread='7024'/>
<task_queued compile_id='18' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='1536' iicount='1536' level='1' stamp='0.134' comment='tiered' hot_count='1536'/>
<writer thread='7864'/>
Decoding compiled method 0x000000000284c490:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000056d33d80} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x000000000284c5e0: mov    0x8(%rdx),%r10d
  0x000000000284c5e4: cmp    %rax,%r10
  0x000000000284c5e7: jne    0x0000000002785f60  ;   {runtime_call}
  0x000000000284c5ed: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000000284c5f8: data16 data16 xchg %ax,%ax
  0x000000000284c5fc: nopl   0x0(%rax)
[Verified Entry Point]
  0x000000000284c600: mov    %eax,-0x6000(%rsp)
  0x000000000284c607: push   %rbp
  0x000000000284c608: sub    $0x30,%rsp         ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x000000000284c60c: and    $0xffff,%r8d
  0x000000000284c613: movabs $0xd5c89678,%rax   ;   {oop([I)}
  0x000000000284c61d: movslq %r8d,%rsi
  0x000000000284c620: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x000000000284c63a
  0x000000000284c624: jae    0x000000000284c644
  0x000000000284c62a: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x000000000284c62e: add    $0x30,%rsp
  0x000000000284c632: pop    %rbp
  0x000000000284c633: test   %eax,-0x262c539(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284c639: retq   
  0x000000000284c63a: callq  0x000000000283b9c0  ; OopMap{rax=Oop off=95}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000000284c63f: callq  0x000000000283b9c0  ; OopMap{rax=Oop off=100}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000000284c644: mov    %r8,(%rsp)
  0x000000000284c648: callq  0x000000000283b300  ; OopMap{rax=Oop off=109}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000000284c64d: nop
  0x000000000284c64e: nop
  0x000000000284c64f: mov    0x2a8(%r15),%rax
  0x000000000284c656: movabs $0x0,%r10
  0x000000000284c660: mov    %r10,0x2a8(%r15)
  0x000000000284c667: movabs $0x0,%r10
  0x000000000284c671: mov    %r10,0x2b0(%r15)
  0x000000000284c678: add    $0x30,%rsp
  0x000000000284c67c: pop    %rbp
  0x000000000284c67d: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x000000000284c682: hlt    
  0x000000000284c683: hlt    
  0x000000000284c684: hlt    
  0x000000000284c685: hlt    
  0x000000000284c686: hlt    
  0x000000000284c687: hlt    
  0x000000000284c688: hlt    
  0x000000000284c689: hlt    
  0x000000000284c68a: hlt    
  0x000000000284c68b: hlt    
  0x000000000284c68c: hlt    
  0x000000000284c68d: hlt    
  0x000000000284c68e: hlt    
  0x000000000284c68f: hlt    
  0x000000000284c690: hlt    
  0x000000000284c691: hlt    
  0x000000000284c692: hlt    
  0x000000000284c693: hlt    
  0x000000000284c694: hlt    
  0x000000000284c695: hlt    
  0x000000000284c696: hlt    
  0x000000000284c697: hlt    
  0x000000000284c698: hlt    
  0x000000000284c699: hlt    
  0x000000000284c69a: hlt    
  0x000000000284c69b: hlt    
  0x000000000284c69c: hlt    
  0x000000000284c69d: hlt    
  0x000000000284c69e: hlt    
  0x000000000284c69f: hlt    
[Exception Handler]
[Stub Code]
  0x000000000284c6a0: callq  0x000000000283d860  ;   {no_reloc}
  0x000000000284c6a5: mov    %rsp,-0x28(%rsp)
  0x000000000284c6aa: sub    $0x80,%rsp
  0x000000000284c6b1: mov    %rax,0x78(%rsp)
  0x000000000284c6b6: mov    %rcx,0x70(%rsp)
  0x000000000284c6bb: mov    %rdx,0x68(%rsp)
  0x000000000284c6c0: mov    %rbx,0x60(%rsp)
  0x000000000284c6c5: mov    %rbp,0x50(%rsp)
  0x000000000284c6ca: mov    %rsi,0x48(%rsp)
  0x000000000284c6cf: mov    %rdi,0x40(%rsp)
  0x000000000284c6d4: mov    %r8,0x38(%rsp)
  0x000000000284c6d9: mov    %r9,0x30(%rsp)
  0x000000000284c6de: mov    %r10,0x28(%rsp)
  0x000000000284c6e3: mov    %r11,0x20(%rsp)
  0x000000000284c6e8: mov    %r12,0x18(%rsp)
  0x000000000284c6ed: mov    %r13,0x10(%rsp)
  0x000000000284c6f2: mov    %r14,0x8(%rsp)
  0x000000000284c6f7: mov    %r15,(%rsp)
  0x000000000284c6fb: movabs $0x61388e30,%rcx   ;   {external_word}
  0x000000000284c705: movabs $0x284c6a5,%rdx    ;   {internal_word}
  0x000000000284c70f: mov    %rsp,%r8
  0x000000000284c712: and    $0xfffffffffffffff0,%rsp
  0x000000000284c716: callq  0x0000000061043d40  ;   {runtime_call}
  0x000000000284c71b: hlt    
[Deopt Handler Code]
  0x000000000284c71c: movabs $0x284c71c,%r10    ;   {section_word}
  0x000000000284c726: push   %r10
  0x000000000284c728: jmpq   0x0000000002787600  ;   {runtime_call}
  0x000000000284c72d: hlt    
  0x000000000284c72e: hlt    
  0x000000000284c72f: hlt    
<nmethod compile_id='18' compiler='C1' level='1' entry='0x000000000284c5e0' size='856' address='0x000000000284c490' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='824' nul_chk_table_offset='832' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='1568' iicount='1568' stamp='0.135'/>
<make_not_entrant thread='7864' compile_id='13' compiler='C1' level='3' stamp='0.135'/>
<writer thread='7024'/>
<task_queued compile_id='19' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='384' iicount='384' level='3' stamp='0.135' comment='tiered' hot_count='384'/>
<task_queued compile_id='20' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='384' iicount='384' level='3' stamp='0.135' comment='tiered' hot_count='384'/>
<task_queued compile_id='21' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='384' iicount='384' level='3' stamp='0.135' comment='tiered' hot_count='384'/>
<writer thread='7864'/>
Decoding compiled method 0x0000000002850510:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000056bd4d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0xe0]  (sp of caller)
  0x00000000028506c0: mov    0x8(%rdx),%r10d
  0x00000000028506c4: cmp    %rax,%r10
  0x00000000028506c7: jne    0x0000000002785f60  ;   {runtime_call}
  0x00000000028506cd: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000028506d8: data16 data16 xchg %ax,%ax
  0x00000000028506dc: nopl   0x0(%rax)
[Verified Entry Point]
  0x00000000028506e0: mov    %eax,-0x6000(%rsp)
  0x00000000028506e7: push   %rbp
  0x00000000028506e8: sub    $0xd0,%rsp
  0x00000000028506ef: movabs $0x56d85eb0,%rsi   ;   {metadata(method data for {method} {0x0000000056bd4d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000028506f9: mov    0xdc(%rsi),%edi
  0x00000000028506ff: add    $0x8,%edi
  0x0000000002850702: mov    %edi,0xdc(%rsi)
  0x0000000002850708: movabs $0x56bd4d30,%rsi   ;   {metadata({method} {0x0000000056bd4d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002850712: and    $0x1ff8,%edi
  0x0000000002850718: cmp    $0x0,%edi
  0x000000000285071b: je     0x0000000002850a65  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 649)

  0x0000000002850721: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)

  0x0000000002850724: inc    %esi
  0x0000000002850726: mov    %rdx,%rdi
  0x0000000002850729: movabs $0x56d85eb0,%rbx   ;   {metadata(method data for {method} {0x0000000056bd4d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002850733: addq   $0x1,0x108(%rbx)
  0x000000000285073b: movabs $0x56d85840,%rdi   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002850745: mov    0xdc(%rdi),%ebx
  0x000000000285074b: add    $0x8,%ebx
  0x000000000285074e: mov    %ebx,0xdc(%rdi)
  0x0000000002850754: movabs $0x56bd3bf8,%rdi   ;   {metadata({method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000000285075e: and    $0x7ffff8,%ebx
  0x0000000002850764: cmp    $0x0,%ebx
  0x0000000002850767: je     0x0000000002850a7c
  0x000000000285076d: mov    0x10(%rdx),%edi    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002850770: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; implicit exception: dispatches to 0x0000000002850a93
  0x0000000002850773: mov    %rsi,%rax
  0x0000000002850776: sub    %ebx,%eax
  0x0000000002850778: cmp    $0x0,%eax
  0x000000000285077b: movabs $0x56d85840,%rax   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002850785: movabs $0x108,%rcx
  0x000000000285078f: jle    0x000000000285079f
  0x0000000002850795: movabs $0x118,%rcx
  0x000000000285079f: mov    (%rax,%rcx,1),%r9
  0x00000000028507a3: lea    0x1(%r9),%r9
  0x00000000028507a7: mov    %r9,(%rax,%rcx,1)
  0x00000000028507ab: jg     0x00000000028507be  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000028507b1: mov    %r8d,0xac(%rsp)
  0x00000000028507b9: jmpq   0x0000000002850a2b  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000028507be: mov    %ebx,0xa8(%rsp)
  0x00000000028507c5: mov    %rdi,0xb0(%rsp)
  0x00000000028507cd: mov    %r8d,0xac(%rsp)
  0x00000000028507d5: mov    %rdx,%rax
  0x00000000028507d8: movabs $0x56d85840,%rcx   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000028507e2: addq   $0x1,0x128(%rcx)
  0x00000000028507ea: mov    %rsi,%r8
  0x00000000028507ed: mov    %rdx,%rsi
  0x00000000028507f0: mov    %rsi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000028507f3: mov    %rsi,0xb8(%rsp)
  0x00000000028507fb: nop
  0x00000000028507fc: nop
  0x00000000028507fd: nop
  0x00000000028507fe: nop
  0x00000000028507ff: callq  0x00000000027861a0  ; OopMap{[184]=Oop [176]=Oop off=324}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {optimized virtual_call}
  0x0000000002850804: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002850807: movabs $0x56d85840,%rbx   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002850811: addq   $0x1,0x138(%rbx)
  0x0000000002850819: movabs $0x56d85c80,%rbx   ;   {metadata(method data for {method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002850823: mov    0xdc(%rbx),%edx
  0x0000000002850829: add    $0x8,%edx
  0x000000000285082c: mov    %edx,0xdc(%rbx)
  0x0000000002850832: movabs $0x56c787f8,%rbx   ;   {metadata({method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000000285083c: and    $0x7ffff8,%edx
  0x0000000002850842: cmp    $0x0,%edx
  0x0000000002850845: je     0x0000000002850a98
  0x000000000285084b: mov    %r8,%rbx
  0x000000000285084e: movabs $0x16b60208,%rdx   ;   {metadata({type array char})}
  0x0000000002850858: movslq %ebx,%rbx
  0x000000000285085b: mov    %rbx,%rdi
  0x000000000285085e: cmp    $0xffffff,%rbx
  0x0000000002850865: ja     0x0000000002850aaf
  0x000000000285086b: movabs $0x17,%rsi
  0x0000000002850875: lea    (%rsi,%rbx,2),%rsi
  0x0000000002850879: and    $0xfffffffffffffff8,%rsi
  0x000000000285087d: mov    0x60(%r15),%rax
  0x0000000002850881: lea    (%rax,%rsi,1),%rsi
  0x0000000002850885: cmp    0x70(%r15),%rsi
  0x0000000002850889: ja     0x0000000002850aaf
  0x000000000285088f: mov    %rsi,0x60(%r15)
  0x0000000002850893: sub    %rax,%rsi
  0x0000000002850896: movq   $0x1,(%rax)
  0x000000000285089d: mov    %rdx,%rcx
  0x00000000028508a0: mov    %ecx,0x8(%rax)
  0x00000000028508a3: mov    %ebx,0xc(%rax)
  0x00000000028508a6: sub    $0x10,%rsi
  0x00000000028508aa: je     0x00000000028508c1
  0x00000000028508b0: xor    %rbx,%rbx
  0x00000000028508b3: shr    $0x3,%rsi
  0x00000000028508b7: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000028508bc: dec    %rsi
  0x00000000028508bf: jne    0x00000000028508b7  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000028508c1: movabs $0x56d85c80,%rdx   ;   {metadata(method data for {method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000028508cb: addq   $0x1,0x108(%rdx)
  0x00000000028508d3: movabs $0x56d721b8,%rdx   ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000028508dd: mov    0xdc(%rdx),%r9d
  0x00000000028508e4: add    $0x8,%r9d
  0x00000000028508e8: mov    %r9d,0xdc(%rdx)
  0x00000000028508ef: movabs $0x56c542a0,%rdx   ;   {metadata({method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000028508f9: and    $0x7ffff8,%r9d
  0x0000000002850900: cmp    $0x0,%r9d
  0x0000000002850904: je     0x0000000002850ab9
  0x000000000285090a: mov    0xa8(%rsp),%ebx
  0x0000000002850911: cmp    %r8d,%ebx
  0x0000000002850914: movabs $0x56d721b8,%rdx   ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000000285091e: movabs $0x108,%r9
  0x0000000002850928: jg     0x0000000002850938
  0x000000000285092e: movabs $0x118,%r9
  0x0000000002850938: mov    (%rdx,%r9,1),%rdi
  0x000000000285093c: lea    0x1(%rdi),%rdi
  0x0000000002850940: mov    %rdi,(%rdx,%r9,1)
  0x0000000002850944: jg     0x000000000285095f  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000000285094a: movabs $0x56d721b8,%rdx   ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002850954: incl   0x128(%rdx)
  0x000000000285095a: jmpq   0x0000000002850962  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000000285095f: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002850962: mov    0xb0(%rsp),%rdi
  0x000000000285096a: movabs $0x56d85c80,%rdx   ;   {metadata(method data for {method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002850974: addq   $0x1,0x118(%rdx)
  0x000000000285097c: mov    %rdi,%rdx
  0x000000000285097f: mov    $0x0,%r8d
  0x0000000002850985: mov    %rax,%r9
  0x0000000002850988: mov    $0x0,%edi
  0x000000000285098d: mov    %rbx,%rsi
  0x0000000002850990: mov    %rax,0xc0(%rsp)
  0x0000000002850998: lea    (%r8,%rsi,1),%rcx
  0x000000000285099c: cmp    0xc(%rdx),%ecx
  0x000000000285099f: ja     0x0000000002850ad0
  0x00000000028509a5: lea    (%rdi,%rsi,1),%rcx
  0x00000000028509a9: cmp    0xc(%r9),%ecx
  0x00000000028509ad: ja     0x0000000002850ad0
  0x00000000028509b3: test   %esi,%esi
  0x00000000028509b5: jl     0x0000000002850ad0
  0x00000000028509bb: je     0x00000000028509ff
  0x00000000028509c1: movslq %r8d,%r8
  0x00000000028509c4: movslq %edi,%rdi
  0x00000000028509c7: lea    0x10(%rdx,%r8,2),%rcx
  0x00000000028509cc: lea    0x10(%r9,%rdi,2),%rdx
  0x00000000028509d1: mov    %rsi,%r8
  0x00000000028509d4: sub    $0x20,%rsp
  0x00000000028509d8: test   $0xf,%esp
  0x00000000028509de: je     0x00000000028509f6
  0x00000000028509e4: sub    $0x8,%rsp
  0x00000000028509e8: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000028509ed: add    $0x8,%rsp
  0x00000000028509f1: jmpq   0x00000000028509fb
  0x00000000028509f6: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000028509fb: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000028509ff: mov    0xc0(%rsp),%rax
  0x0000000002850a07: mov    0xb8(%rsp),%rdx
  0x0000000002850a0f: mov    %rax,%r10
  0x0000000002850a12: mov    %r10d,0x10(%rdx)
  0x0000000002850a16: mov    %rdx,%rax
  0x0000000002850a19: shr    $0x9,%rax
  0x0000000002850a1d: movabs $0x116f6000,%rsi
  0x0000000002850a27: movb   $0x0,(%rax,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002850a2b: mov    0xac(%rsp),%r8d
  0x0000000002850a33: mov    0x10(%rdx),%eax    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)

  0x0000000002850a36: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x0000000002850a39: mov    %rsi,%rdi
  0x0000000002850a3c: inc    %edi
  0x0000000002850a3e: mov    %edi,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)

  0x0000000002850a41: movslq %esi,%rdi
  0x0000000002850a44: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000002850ae1
  0x0000000002850a47: jae    0x0000000002850aeb
  0x0000000002850a4d: mov    %r8w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)

  0x0000000002850a53: mov    %rdx,%rax
  0x0000000002850a56: add    $0xd0,%rsp
  0x0000000002850a5d: pop    %rbp
  0x0000000002850a5e: test   %eax,-0x2630964(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x0000000002850a64: retq   
  0x0000000002850a65: mov    %rsi,0x8(%rsp)
  0x0000000002850a6a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002850a72: callq  0x00000000028400a0  ; OopMap{rdx=Oop off=951}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ;   {runtime_call}
  0x0000000002850a77: jmpq   0x0000000002850721
  0x0000000002850a7c: mov    %rdi,0x8(%rsp)
  0x0000000002850a81: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002850a89: callq  0x00000000028400a0  ; OopMap{rdx=Oop off=974}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002850a8e: jmpq   0x000000000285076d
  0x0000000002850a93: callq  0x000000000283b9c0  ; OopMap{rdx=Oop rdi=Oop off=984}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002850a98: mov    %rbx,0x8(%rsp)
  0x0000000002850a9d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002850aa5: callq  0x00000000028400a0  ; OopMap{[184]=Oop [176]=Oop off=1002}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002850aaa: jmpq   0x000000000285084b
  0x0000000002850aaf: callq  0x000000000283ca40  ; OopMap{[184]=Oop [176]=Oop off=1012}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002850ab4: jmpq   0x00000000028508c1
  0x0000000002850ab9: mov    %rdx,0x8(%rsp)
  0x0000000002850abe: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002850ac6: callq  0x00000000028400a0  ; OopMap{[184]=Oop [176]=Oop rax=Oop off=1035}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002850acb: jmpq   0x000000000285090a
  0x0000000002850ad0: nop
  0x0000000002850ad1: nop
  0x0000000002850ad2: nop
  0x0000000002850ad3: nop
  0x0000000002850ad4: nop
  0x0000000002850ad5: nop
  0x0000000002850ad6: nop
  0x0000000002850ad7: callq  0x0000000002786620  ; OopMap{[184]=Oop [192]=Oop off=1052}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {static_call}
  0x0000000002850adc: jmpq   0x00000000028509ff
  0x0000000002850ae1: callq  0x000000000283b9c0  ; OopMap{rdx=Oop rax=Oop off=1062}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000002850ae6: callq  0x000000000283b9c0  ; OopMap{rdx=Oop rax=Oop off=1067}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000002850aeb: mov    %rsi,(%rsp)
  0x0000000002850aef: callq  0x000000000283b300  ; OopMap{rdx=Oop rax=Oop off=1076}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000002850af4: nop
  0x0000000002850af5: nop
  0x0000000002850af6: mov    0x2a8(%r15),%rax
  0x0000000002850afd: movabs $0x0,%r10
  0x0000000002850b07: mov    %r10,0x2a8(%r15)
  0x0000000002850b0e: movabs $0x0,%r10
  0x0000000002850b18: mov    %r10,0x2b0(%r15)
  0x0000000002850b1f: add    $0xd0,%rsp
  0x0000000002850b26: pop    %rbp
  0x0000000002850b27: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x0000000002850b2c: hlt    
  0x0000000002850b2d: hlt    
  0x0000000002850b2e: hlt    
  0x0000000002850b2f: hlt    
  0x0000000002850b30: hlt    
  0x0000000002850b31: hlt    
  0x0000000002850b32: hlt    
  0x0000000002850b33: hlt    
  0x0000000002850b34: hlt    
  0x0000000002850b35: hlt    
  0x0000000002850b36: hlt    
  0x0000000002850b37: hlt    
  0x0000000002850b38: hlt    
  0x0000000002850b39: hlt    
  0x0000000002850b3a: hlt    
  0x0000000002850b3b: hlt    
  0x0000000002850b3c: hlt    
  0x0000000002850b3d: hlt    
  0x0000000002850b3e: hlt    
  0x0000000002850b3f: hlt    
[Stub Code]
  0x0000000002850b40: nop                       ;   {no_reloc}
  0x0000000002850b41: nop
  0x0000000002850b42: nop
  0x0000000002850b43: nop
  0x0000000002850b44: nop
  0x0000000002850b45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002850b4f: jmpq   0x0000000002850b4f  ;   {runtime_call}
  0x0000000002850b54: nop
  0x0000000002850b55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002850b5f: jmpq   0x0000000002850b5f  ;   {runtime_call}
[Exception Handler]
  0x0000000002850b64: callq  0x000000000283d860  ;   {runtime_call}
  0x0000000002850b69: mov    %rsp,-0x28(%rsp)
  0x0000000002850b6e: sub    $0x80,%rsp
  0x0000000002850b75: mov    %rax,0x78(%rsp)
  0x0000000002850b7a: mov    %rcx,0x70(%rsp)
  0x0000000002850b7f: mov    %rdx,0x68(%rsp)
  0x0000000002850b84: mov    %rbx,0x60(%rsp)
  0x0000000002850b89: mov    %rbp,0x50(%rsp)
  0x0000000002850b8e: mov    %rsi,0x48(%rsp)
  0x0000000002850b93: mov    %rdi,0x40(%rsp)
  0x0000000002850b98: mov    %r8,0x38(%rsp)
  0x0000000002850b9d: mov    %r9,0x30(%rsp)
  0x0000000002850ba2: mov    %r10,0x28(%rsp)
  0x0000000002850ba7: mov    %r11,0x20(%rsp)
  0x0000000002850bac: mov    %r12,0x18(%rsp)
  0x0000000002850bb1: mov    %r13,0x10(%rsp)
  0x0000000002850bb6: mov    %r14,0x8(%rsp)
  0x0000000002850bbb: mov    %r15,(%rsp)
  0x0000000002850bbf: movabs $0x61388e30,%rcx   ;   {external_word}
  0x0000000002850bc9: movabs $0x2850b69,%rdx    ;   {internal_word}
  0x0000000002850bd3: mov    %rsp,%r8
  0x0000000002850bd6: and    $0xfffffffffffffff0,%rsp
  0x0000000002850bda: callq  0x0000000061043d40  ;   {runtime_call}
  0x0000000002850bdf: hlt    
[Deopt Handler Code]
  0x0000000002850be0: movabs $0x2850be0,%r10    ;   {section_word}
  0x0000000002850bea: push   %r10
  0x0000000002850bec: jmpq   0x0000000002787600  ;   {runtime_call}
  0x0000000002850bf1: hlt    
  0x0000000002850bf2: hlt    
  0x0000000002850bf3: hlt    
  0x0000000002850bf4: hlt    
  0x0000000002850bf5: hlt    
  0x0000000002850bf6: hlt    
  0x0000000002850bf7: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x00000000028506c0' size='2624' address='0x0000000002850510' relocation_offset='288' insts_offset='432' stub_offset='1584' scopes_data_offset='1800' scopes_pcs_offset='2088' dependencies_offset='2584' nul_chk_table_offset='2592' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='1484' iicount='1484' stamp='0.141'/>
Decoding compiled method 0x0000000002850050:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000056bfa3b8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000000028501c0: mov    %eax,-0x6000(%rsp)
  0x00000000028501c7: push   %rbp
  0x00000000028501c8: sub    $0x30,%rsp
  0x00000000028501cc: movabs $0x56d35108,%rsi   ;   {metadata(method data for {method} {0x0000000056bfa3b8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00000000028501d6: mov    0xdc(%rsi),%edi
  0x00000000028501dc: add    $0x8,%edi
  0x00000000028501df: mov    %edi,0xdc(%rsi)
  0x00000000028501e5: movabs $0x56bfa3b0,%rsi   ;   {metadata({method} {0x0000000056bfa3b8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00000000028501ef: and    $0x1ff8,%edi
  0x00000000028501f5: cmp    $0x0,%edi
  0x00000000028501f8: je     0x00000000028502d8  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6338)

  0x00000000028501fe: movabs $0x56d35108,%rsi   ;   {metadata(method data for {method} {0x0000000056bfa3b8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002850208: addq   $0x1,0x108(%rsi)
  0x0000000002850210: mov    %rdx,%rsi
  0x0000000002850213: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x0000000002850216: mov    %esi,0x20(%rsp)
  0x000000000285021a: nop
  0x000000000285021b: nop
  0x000000000285021c: nop
  0x000000000285021d: nop
  0x000000000285021e: nop
  0x000000000285021f: callq  0x0000000002786620  ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ;   {static_call}
  0x0000000002850224: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00000000028502ef
  0x0000000002850227: mov    %rax,%r8
  0x000000000285022a: movabs $0x56d35108,%rdx   ;   {metadata(method data for {method} {0x0000000056bfa3b8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002850234: mov    0x8(%r8),%r8d
  0x0000000002850238: cmp    0x120(%rdx),%r8
  0x000000000285023f: jne    0x000000000285024e
  0x0000000002850241: addq   $0x1,0x128(%rdx)
  0x0000000002850249: jmpq   0x00000000028502b4
  0x000000000285024e: cmp    0x130(%rdx),%r8
  0x0000000002850255: jne    0x0000000002850264
  0x0000000002850257: addq   $0x1,0x138(%rdx)
  0x000000000285025f: jmpq   0x00000000028502b4
  0x0000000002850264: cmpq   $0x0,0x120(%rdx)
  0x000000000285026f: jne    0x0000000002850288
  0x0000000002850271: mov    %r8,0x120(%rdx)
  0x0000000002850278: movq   $0x1,0x128(%rdx)
  0x0000000002850283: jmpq   0x00000000028502b4
  0x0000000002850288: cmpq   $0x0,0x130(%rdx)
  0x0000000002850293: jne    0x00000000028502ac
  0x0000000002850295: mov    %r8,0x130(%rdx)
  0x000000000285029c: movq   $0x1,0x138(%rdx)
  0x00000000028502a7: jmpq   0x00000000028502b4
  0x00000000028502ac: addq   $0x1,0x118(%rdx)
  0x00000000028502b4: mov    0x20(%rsp),%r8d
  0x00000000028502b9: mov    %rax,%rdx          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x00000000028502bc: nop
  0x00000000028502bd: movabs $0xffffffffffffffff,%rax
  0x00000000028502c7: callq  0x00000000027863e0  ; OopMap{off=268}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {virtual_call}
  0x00000000028502cc: add    $0x30,%rsp
  0x00000000028502d0: pop    %rbp
  0x00000000028502d1: test   %eax,-0x26301d7(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x00000000028502d7: retq   
  0x00000000028502d8: mov    %rsi,0x8(%rsp)
  0x00000000028502dd: movq   $0xffffffffffffffff,(%rsp)
  0x00000000028502e5: callq  0x00000000028400a0  ; OopMap{off=298}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ;   {runtime_call}
  0x00000000028502ea: jmpq   0x00000000028501fe
  0x00000000028502ef: callq  0x000000000283b9c0  ; OopMap{rax=Oop off=308}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {runtime_call}
  0x00000000028502f4: nop
  0x00000000028502f5: nop
  0x00000000028502f6: mov    0x2a8(%r15),%rax
  0x00000000028502fd: movabs $0x0,%r10
  0x0000000002850307: mov    %r10,0x2a8(%r15)
  0x000000000285030e: movabs $0x0,%r10
  0x0000000002850318: mov    %r10,0x2b0(%r15)
  0x000000000285031f: add    $0x30,%rsp
  0x0000000002850323: pop    %rbp
  0x0000000002850324: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x0000000002850329: hlt    
  0x000000000285032a: hlt    
  0x000000000285032b: hlt    
  0x000000000285032c: hlt    
  0x000000000285032d: hlt    
  0x000000000285032e: hlt    
  0x000000000285032f: hlt    
  0x0000000002850330: hlt    
  0x0000000002850331: hlt    
  0x0000000002850332: hlt    
  0x0000000002850333: hlt    
  0x0000000002850334: hlt    
  0x0000000002850335: hlt    
  0x0000000002850336: hlt    
  0x0000000002850337: hlt    
  0x0000000002850338: hlt    
  0x0000000002850339: hlt    
  0x000000000285033a: hlt    
  0x000000000285033b: hlt    
  0x000000000285033c: hlt    
  0x000000000285033d: hlt    
  0x000000000285033e: hlt    
  0x000000000285033f: hlt    
[Stub Code]
  0x0000000002850340: nop                       ;   {no_reloc}
  0x0000000002850341: nop
  0x0000000002850342: nop
  0x0000000002850343: nop
  0x0000000002850344: nop
  0x0000000002850345: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000285034f: jmpq   0x000000000285034f  ;   {runtime_call}
  0x0000000002850354: nop
  0x0000000002850355: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000285035f: jmpq   0x000000000285035f  ;   {runtime_call}
[Exception Handler]
  0x0000000002850364: callq  0x000000000283d860  ;   {runtime_call}
  0x0000000002850369: mov    %rsp,-0x28(%rsp)
  0x000000000285036e: sub    $0x80,%rsp
  0x0000000002850375: mov    %rax,0x78(%rsp)
  0x000000000285037a: mov    %rcx,0x70(%rsp)
  0x000000000285037f: mov    %rdx,0x68(%rsp)
  0x0000000002850384: mov    %rbx,0x60(%rsp)
  0x0000000002850389: mov    %rbp,0x50(%rsp)
  0x000000000285038e: mov    %rsi,0x48(%rsp)
  0x0000000002850393: mov    %rdi,0x40(%rsp)
  0x0000000002850398: mov    %r8,0x38(%rsp)
  0x000000000285039d: mov    %r9,0x30(%rsp)
  0x00000000028503a2: mov    %r10,0x28(%rsp)
  0x00000000028503a7: mov    %r11,0x20(%rsp)
  0x00000000028503ac: mov    %r12,0x18(%rsp)
  0x00000000028503b1: mov    %r13,0x10(%rsp)
  0x00000000028503b6: mov    %r14,0x8(%rsp)
  0x00000000028503bb: mov    %r15,(%rsp)
  0x00000000028503bf: movabs $0x61388e30,%rcx   ;   {external_word}
  0x00000000028503c9: movabs $0x2850369,%rdx    ;   {internal_word}
  0x00000000028503d3: mov    %rsp,%r8
  0x00000000028503d6: and    $0xfffffffffffffff0,%rsp
  0x00000000028503da: callq  0x0000000061043d40  ;   {runtime_call}
  0x00000000028503df: hlt    
[Deopt Handler Code]
  0x00000000028503e0: movabs $0x28503e0,%r10    ;   {section_word}
  0x00000000028503ea: push   %r10
  0x00000000028503ec: jmpq   0x0000000002787600  ;   {runtime_call}
  0x00000000028503f1: hlt    
  0x00000000028503f2: hlt    
  0x00000000028503f3: hlt    
  0x00000000028503f4: hlt    
  0x00000000028503f5: hlt    
  0x00000000028503f6: hlt    
  0x00000000028503f7: hlt    
<nmethod compile_id='15' compiler='C1' level='3' entry='0x00000000028501c0' size='1160' address='0x0000000002850050' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='944' scopes_pcs_offset='992' dependencies_offset='1136' nul_chk_table_offset='1144' method='java/lang/Character toLowerCase (I)I' bytes='9' count='1632' iicount='1632' stamp='0.143'/>
Decoding compiled method 0x000000000284f550:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000056bd7d90} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x100]  (sp of caller)
  0x000000000284f700: mov    0x8(%rdx),%r10d
  0x000000000284f704: cmp    %rax,%r10
  0x000000000284f707: jne    0x0000000002785f60  ;   {runtime_call}
  0x000000000284f70d: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000000284f718: data16 data16 xchg %ax,%ax
  0x000000000284f71c: nopl   0x0(%rax)
[Verified Entry Point]
  0x000000000284f720: mov    %eax,-0x6000(%rsp)
  0x000000000284f727: push   %rbp
  0x000000000284f728: sub    $0xf0,%rsp
  0x000000000284f72f: movabs $0x56d85fe8,%rsi   ;   {metadata(method data for {method} {0x0000000056bd7d90} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000000284f739: mov    0xdc(%rsi),%edi
  0x000000000284f73f: add    $0x8,%edi
  0x000000000284f742: mov    %edi,0xdc(%rsi)
  0x000000000284f748: movabs $0x56bd7d88,%rsi   ;   {metadata({method} {0x0000000056bd7d90} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000000284f752: and    $0x1ff8,%edi
  0x000000000284f758: cmp    $0x0,%edi
  0x000000000284f75b: je     0x000000000284faed  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 202)

  0x000000000284f761: mov    %rdx,%rsi
  0x000000000284f764: movabs $0x56d85fe8,%rdi   ;   {metadata(method data for {method} {0x0000000056bd7d90} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000000284f76e: addq   $0x1,0x108(%rdi)
  0x000000000284f776: movabs $0x56d85eb0,%rsi   ;   {metadata(method data for {method} {0x0000000056bd4d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000000284f780: mov    0xdc(%rsi),%edi
  0x000000000284f786: add    $0x8,%edi
  0x000000000284f789: mov    %edi,0xdc(%rsi)
  0x000000000284f78f: movabs $0x56bd4d30,%rsi   ;   {metadata({method} {0x0000000056bd4d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000000284f799: and    $0x7ffff8,%edi
  0x000000000284f79f: cmp    $0x0,%edi
  0x000000000284f7a2: je     0x000000000284fb04
  0x000000000284f7a8: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000000284f7ab: inc    %esi
  0x000000000284f7ad: mov    %rdx,%rdi
  0x000000000284f7b0: movabs $0x56d85eb0,%rbx   ;   {metadata(method data for {method} {0x0000000056bd4d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000000284f7ba: addq   $0x1,0x108(%rbx)
  0x000000000284f7c2: movabs $0x56d85840,%rdi   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000000284f7cc: mov    0xdc(%rdi),%ebx
  0x000000000284f7d2: add    $0x8,%ebx
  0x000000000284f7d5: mov    %ebx,0xdc(%rdi)
  0x000000000284f7db: movabs $0x56bd3bf8,%rdi   ;   {metadata({method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000000284f7e5: and    $0x7ffff8,%ebx
  0x000000000284f7eb: cmp    $0x0,%ebx
  0x000000000284f7ee: je     0x000000000284fb1b
  0x000000000284f7f4: mov    0x10(%rdx),%edi    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000000284f7f7: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; implicit exception: dispatches to 0x000000000284fb32
  0x000000000284f7fa: mov    %rsi,%rax
  0x000000000284f7fd: sub    %ebx,%eax
  0x000000000284f7ff: cmp    $0x0,%eax
  0x000000000284f802: movabs $0x56d85840,%rax   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000000284f80c: movabs $0x108,%rcx
  0x000000000284f816: jle    0x000000000284f826
  0x000000000284f81c: movabs $0x118,%rcx
  0x000000000284f826: mov    (%rax,%rcx,1),%r9
  0x000000000284f82a: lea    0x1(%r9),%r9
  0x000000000284f82e: mov    %r9,(%rax,%rcx,1)
  0x000000000284f832: jg     0x000000000284f845  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000000284f838: mov    %r8d,0xc4(%rsp)
  0x000000000284f840: jmpq   0x000000000284fab3  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000000284f845: mov    %ebx,0xc0(%rsp)
  0x000000000284f84c: mov    %rdi,0xc8(%rsp)
  0x000000000284f854: mov    %r8d,0xc4(%rsp)
  0x000000000284f85c: mov    %rdx,%rax
  0x000000000284f85f: movabs $0x56d85840,%rcx   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000000284f869: addq   $0x1,0x128(%rcx)
  0x000000000284f871: mov    %rsi,%r8
  0x000000000284f874: mov    %rdx,%rsi
  0x000000000284f877: mov    %rsi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000000284f87a: mov    %rsi,0xd0(%rsp)
  0x000000000284f882: nop
  0x000000000284f883: nop
  0x000000000284f884: nop
  0x000000000284f885: nop
  0x000000000284f886: nop
  0x000000000284f887: callq  0x00000000027861a0  ; OopMap{[208]=Oop [200]=Oop off=396}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {optimized virtual_call}
  0x000000000284f88c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000000284f88f: movabs $0x56d85840,%rbx   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000000284f899: addq   $0x1,0x138(%rbx)
  0x000000000284f8a1: movabs $0x56d85c80,%rbx   ;   {metadata(method data for {method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000000284f8ab: mov    0xdc(%rbx),%edx
  0x000000000284f8b1: add    $0x8,%edx
  0x000000000284f8b4: mov    %edx,0xdc(%rbx)
  0x000000000284f8ba: movabs $0x56c787f8,%rbx   ;   {metadata({method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000000284f8c4: and    $0x7ffff8,%edx
  0x000000000284f8ca: cmp    $0x0,%edx
  0x000000000284f8cd: je     0x000000000284fb37
  0x000000000284f8d3: mov    %r8,%rbx
  0x000000000284f8d6: movabs $0x16b60208,%rdx   ;   {metadata({type array char})}
  0x000000000284f8e0: movslq %ebx,%rbx
  0x000000000284f8e3: mov    %rbx,%rdi
  0x000000000284f8e6: cmp    $0xffffff,%rbx
  0x000000000284f8ed: ja     0x000000000284fb4e
  0x000000000284f8f3: movabs $0x17,%rsi
  0x000000000284f8fd: lea    (%rsi,%rbx,2),%rsi
  0x000000000284f901: and    $0xfffffffffffffff8,%rsi
  0x000000000284f905: mov    0x60(%r15),%rax
  0x000000000284f909: lea    (%rax,%rsi,1),%rsi
  0x000000000284f90d: cmp    0x70(%r15),%rsi
  0x000000000284f911: ja     0x000000000284fb4e
  0x000000000284f917: mov    %rsi,0x60(%r15)
  0x000000000284f91b: sub    %rax,%rsi
  0x000000000284f91e: movq   $0x1,(%rax)
  0x000000000284f925: mov    %rdx,%rcx
  0x000000000284f928: mov    %ecx,0x8(%rax)
  0x000000000284f92b: mov    %ebx,0xc(%rax)
  0x000000000284f92e: sub    $0x10,%rsi
  0x000000000284f932: je     0x000000000284f949
  0x000000000284f938: xor    %rbx,%rbx
  0x000000000284f93b: shr    $0x3,%rsi
  0x000000000284f93f: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000000284f944: dec    %rsi
  0x000000000284f947: jne    0x000000000284f93f  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000000284f949: movabs $0x56d85c80,%rdx   ;   {metadata(method data for {method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000000284f953: addq   $0x1,0x108(%rdx)
  0x000000000284f95b: movabs $0x56d721b8,%rdx   ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000000284f965: mov    0xdc(%rdx),%r9d
  0x000000000284f96c: add    $0x8,%r9d
  0x000000000284f970: mov    %r9d,0xdc(%rdx)
  0x000000000284f977: movabs $0x56c542a0,%rdx   ;   {metadata({method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000000284f981: and    $0x7ffff8,%r9d
  0x000000000284f988: cmp    $0x0,%r9d
  0x000000000284f98c: je     0x000000000284fb58
  0x000000000284f992: mov    0xc0(%rsp),%ebx
  0x000000000284f999: cmp    %r8d,%ebx
  0x000000000284f99c: movabs $0x56d721b8,%rdx   ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000000284f9a6: movabs $0x108,%r9
  0x000000000284f9b0: jg     0x000000000284f9c0
  0x000000000284f9b6: movabs $0x118,%r9
  0x000000000284f9c0: mov    (%rdx,%r9,1),%rdi
  0x000000000284f9c4: lea    0x1(%rdi),%rdi
  0x000000000284f9c8: mov    %rdi,(%rdx,%r9,1)
  0x000000000284f9cc: jg     0x000000000284f9e7  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000000284f9d2: movabs $0x56d721b8,%rdx   ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000000284f9dc: incl   0x128(%rdx)
  0x000000000284f9e2: jmpq   0x000000000284f9ea  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000000284f9e7: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000000284f9ea: mov    0xc8(%rsp),%rdi
  0x000000000284f9f2: movabs $0x56d85c80,%rdx   ;   {metadata(method data for {method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000000284f9fc: addq   $0x1,0x118(%rdx)
  0x000000000284fa04: mov    %rdi,%rdx
  0x000000000284fa07: mov    $0x0,%r8d
  0x000000000284fa0d: mov    %rax,%r9
  0x000000000284fa10: mov    $0x0,%edi
  0x000000000284fa15: mov    %rbx,%rsi
  0x000000000284fa18: mov    %rax,0xd8(%rsp)
  0x000000000284fa20: lea    (%r8,%rsi,1),%rcx
  0x000000000284fa24: cmp    0xc(%rdx),%ecx
  0x000000000284fa27: ja     0x000000000284fb6f
  0x000000000284fa2d: lea    (%rdi,%rsi,1),%rcx
  0x000000000284fa31: cmp    0xc(%r9),%ecx
  0x000000000284fa35: ja     0x000000000284fb6f
  0x000000000284fa3b: test   %esi,%esi
  0x000000000284fa3d: jl     0x000000000284fb6f
  0x000000000284fa43: je     0x000000000284fa87
  0x000000000284fa49: movslq %r8d,%r8
  0x000000000284fa4c: movslq %edi,%rdi
  0x000000000284fa4f: lea    0x10(%rdx,%r8,2),%rcx
  0x000000000284fa54: lea    0x10(%r9,%rdi,2),%rdx
  0x000000000284fa59: mov    %rsi,%r8
  0x000000000284fa5c: sub    $0x20,%rsp
  0x000000000284fa60: test   $0xf,%esp
  0x000000000284fa66: je     0x000000000284fa7e
  0x000000000284fa6c: sub    $0x8,%rsp
  0x000000000284fa70: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000000284fa75: add    $0x8,%rsp
  0x000000000284fa79: jmpq   0x000000000284fa83
  0x000000000284fa7e: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000000284fa83: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000000284fa87: mov    0xd8(%rsp),%rax
  0x000000000284fa8f: mov    0xd0(%rsp),%rdx
  0x000000000284fa97: mov    %rax,%r10
  0x000000000284fa9a: mov    %r10d,0x10(%rdx)
  0x000000000284fa9e: mov    %rdx,%rax
  0x000000000284faa1: shr    $0x9,%rax
  0x000000000284faa5: movabs $0x116f6000,%rsi
  0x000000000284faaf: movb   $0x0,(%rax,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000000284fab3: mov    0xc4(%rsp),%r8d
  0x000000000284fabb: mov    0x10(%rdx),%eax    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000000284fabe: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000000284fac1: mov    %rsi,%rdi
  0x000000000284fac4: inc    %edi
  0x000000000284fac6: mov    %edi,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000000284fac9: movslq %esi,%rdi
  0x000000000284facc: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x000000000284fb79
  0x000000000284facf: jae    0x000000000284fb83
  0x000000000284fad5: mov    %r8w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000000284fadb: mov    %rdx,%rax
  0x000000000284fade: add    $0xf0,%rsp
  0x000000000284fae5: pop    %rbp
  0x000000000284fae6: test   %eax,-0x262f9ec(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284faec: retq   
  0x000000000284faed: mov    %rsi,0x8(%rsp)
  0x000000000284faf2: movq   $0xffffffffffffffff,(%rsp)
  0x000000000284fafa: callq  0x00000000028400a0  ; OopMap{rdx=Oop off=1023}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ;   {runtime_call}
  0x000000000284faff: jmpq   0x000000000284f761
  0x000000000284fb04: mov    %rsi,0x8(%rsp)
  0x000000000284fb09: movq   $0xffffffffffffffff,(%rsp)
  0x000000000284fb11: callq  0x00000000028400a0  ; OopMap{rdx=Oop off=1046}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000000284fb16: jmpq   0x000000000284f7a8
  0x000000000284fb1b: mov    %rdi,0x8(%rsp)
  0x000000000284fb20: movq   $0xffffffffffffffff,(%rsp)
  0x000000000284fb28: callq  0x00000000028400a0  ; OopMap{rdx=Oop off=1069}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000000284fb2d: jmpq   0x000000000284f7f4
  0x000000000284fb32: callq  0x000000000283b9c0  ; OopMap{rdx=Oop rdi=Oop off=1079}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000000284fb37: mov    %rbx,0x8(%rsp)
  0x000000000284fb3c: movq   $0xffffffffffffffff,(%rsp)
  0x000000000284fb44: callq  0x00000000028400a0  ; OopMap{[208]=Oop [200]=Oop off=1097}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000000284fb49: jmpq   0x000000000284f8d3
  0x000000000284fb4e: callq  0x000000000283ca40  ; OopMap{[208]=Oop [200]=Oop off=1107}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000000284fb53: jmpq   0x000000000284f949
  0x000000000284fb58: mov    %rdx,0x8(%rsp)
  0x000000000284fb5d: movq   $0xffffffffffffffff,(%rsp)
  0x000000000284fb65: callq  0x00000000028400a0  ; OopMap{[208]=Oop [200]=Oop rax=Oop off=1130}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000000284fb6a: jmpq   0x000000000284f992
  0x000000000284fb6f: callq  0x0000000002786620  ; OopMap{[208]=Oop [216]=Oop off=1140}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {static_call}
  0x000000000284fb74: jmpq   0x000000000284fa87
  0x000000000284fb79: callq  0x000000000283b9c0  ; OopMap{rdx=Oop rax=Oop off=1150}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000000284fb7e: callq  0x000000000283b9c0  ; OopMap{rdx=Oop rax=Oop off=1155}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000000284fb83: mov    %rsi,(%rsp)
  0x000000000284fb87: callq  0x000000000283b300  ; OopMap{rdx=Oop rax=Oop off=1164}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000000284fb8c: nop
  0x000000000284fb8d: nop
  0x000000000284fb8e: mov    0x2a8(%r15),%rax
  0x000000000284fb95: movabs $0x0,%r10
  0x000000000284fb9f: mov    %r10,0x2a8(%r15)
  0x000000000284fba6: movabs $0x0,%r10
  0x000000000284fbb0: mov    %r10,0x2b0(%r15)
  0x000000000284fbb7: add    $0xf0,%rsp
  0x000000000284fbbe: pop    %rbp
  0x000000000284fbbf: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x000000000284fbc4: hlt    
  0x000000000284fbc5: hlt    
  0x000000000284fbc6: hlt    
  0x000000000284fbc7: hlt    
  0x000000000284fbc8: hlt    
  0x000000000284fbc9: hlt    
  0x000000000284fbca: hlt    
  0x000000000284fbcb: hlt    
  0x000000000284fbcc: hlt    
  0x000000000284fbcd: hlt    
  0x000000000284fbce: hlt    
  0x000000000284fbcf: hlt    
  0x000000000284fbd0: hlt    
  0x000000000284fbd1: hlt    
  0x000000000284fbd2: hlt    
  0x000000000284fbd3: hlt    
  0x000000000284fbd4: hlt    
  0x000000000284fbd5: hlt    
  0x000000000284fbd6: hlt    
  0x000000000284fbd7: hlt    
  0x000000000284fbd8: hlt    
  0x000000000284fbd9: hlt    
  0x000000000284fbda: hlt    
  0x000000000284fbdb: hlt    
  0x000000000284fbdc: hlt    
  0x000000000284fbdd: hlt    
  0x000000000284fbde: hlt    
  0x000000000284fbdf: hlt    
[Stub Code]
  0x000000000284fbe0: nop                       ;   {no_reloc}
  0x000000000284fbe1: nop
  0x000000000284fbe2: nop
  0x000000000284fbe3: nop
  0x000000000284fbe4: nop
  0x000000000284fbe5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000284fbef: jmpq   0x000000000284fbef  ;   {runtime_call}
  0x000000000284fbf4: nop
  0x000000000284fbf5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000284fbff: jmpq   0x000000000284fbff  ;   {runtime_call}
[Exception Handler]
  0x000000000284fc04: callq  0x000000000283d860  ;   {runtime_call}
  0x000000000284fc09: mov    %rsp,-0x28(%rsp)
  0x000000000284fc0e: sub    $0x80,%rsp
  0x000000000284fc15: mov    %rax,0x78(%rsp)
  0x000000000284fc1a: mov    %rcx,0x70(%rsp)
  0x000000000284fc1f: mov    %rdx,0x68(%rsp)
  0x000000000284fc24: mov    %rbx,0x60(%rsp)
  0x000000000284fc29: mov    %rbp,0x50(%rsp)
  0x000000000284fc2e: mov    %rsi,0x48(%rsp)
  0x000000000284fc33: mov    %rdi,0x40(%rsp)
  0x000000000284fc38: mov    %r8,0x38(%rsp)
  0x000000000284fc3d: mov    %r9,0x30(%rsp)
  0x000000000284fc42: mov    %r10,0x28(%rsp)
  0x000000000284fc47: mov    %r11,0x20(%rsp)
  0x000000000284fc4c: mov    %r12,0x18(%rsp)
  0x000000000284fc51: mov    %r13,0x10(%rsp)
  0x000000000284fc56: mov    %r14,0x8(%rsp)
  0x000000000284fc5b: mov    %r15,(%rsp)
  0x000000000284fc5f: movabs $0x61388e30,%rcx   ;   {external_word}
  0x000000000284fc69: movabs $0x284fc09,%rdx    ;   {internal_word}
  0x000000000284fc73: mov    %rsp,%r8
  0x000000000284fc76: and    $0xfffffffffffffff0,%rsp
  0x000000000284fc7a: callq  0x0000000061043d40  ;   {runtime_call}
  0x000000000284fc7f: hlt    
[Deopt Handler Code]
  0x000000000284fc80: movabs $0x284fc80,%r10    ;   {section_word}
  0x000000000284fc8a: push   %r10
  0x000000000284fc8c: jmpq   0x0000000002787600  ;   {runtime_call}
  0x000000000284fc91: hlt    
  0x000000000284fc92: hlt    
  0x000000000284fc93: hlt    
  0x000000000284fc94: hlt    
  0x000000000284fc95: hlt    
  0x000000000284fc96: hlt    
  0x000000000284fc97: hlt    
<nmethod compile_id='19' compiler='C1' level='3' entry='0x000000000284f700' size='2784' address='0x000000000284f550' relocation_offset='288' insts_offset='432' stub_offset='1680' scopes_data_offset='1904' scopes_pcs_offset='2232' dependencies_offset='2744' nul_chk_table_offset='2752' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='771' iicount='771' stamp='0.148'/>
Decoding compiled method 0x000000000284ef10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000056cdb520} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x40]  (sp of caller)
  0x000000000284f060: mov    0x8(%rdx),%r10d
  0x000000000284f064: cmp    %rax,%r10
  0x000000000284f067: jne    0x0000000002785f60  ;   {runtime_call}
  0x000000000284f06d: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000000284f078: data16 data16 xchg %ax,%ax
  0x000000000284f07c: nopl   0x0(%rax)
[Verified Entry Point]
  0x000000000284f080: mov    %eax,-0x6000(%rsp)
  0x000000000284f087: push   %rbp
  0x000000000284f088: sub    $0x30,%rsp
  0x000000000284f08c: movabs $0x56d86120,%rax   ;   {metadata(method data for {method} {0x0000000056cdb520} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000000000284f096: mov    0xdc(%rax),%esi
  0x000000000284f09c: add    $0x8,%esi
  0x000000000284f09f: mov    %esi,0xdc(%rax)
  0x000000000284f0a5: movabs $0x56cdb518,%rax   ;   {metadata({method} {0x0000000056cdb520} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000000000284f0af: and    $0x1ff8,%esi
  0x000000000284f0b5: cmp    $0x0,%esi
  0x000000000284f0b8: je     0x000000000284f160  ;*iload_1
                                                ; - java.io.WinNTFileSystem::isSlash@0 (line 53)

  0x000000000284f0be: cmp    $0x5c,%r8d
  0x000000000284f0c2: movabs $0x56d86120,%rax   ;   {metadata(method data for {method} {0x0000000056cdb520} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000000000284f0cc: movabs $0x108,%rsi
  0x000000000284f0d6: je     0x000000000284f0e6
  0x000000000284f0dc: movabs $0x118,%rsi
  0x000000000284f0e6: mov    (%rax,%rsi,1),%rdi
  0x000000000284f0ea: lea    0x1(%rdi),%rdi
  0x000000000284f0ee: mov    %rdi,(%rax,%rsi,1)
  0x000000000284f0f2: je     0x000000000284f132  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)

  0x000000000284f0f8: cmp    $0x2f,%r8d
  0x000000000284f0fc: movabs $0x56d86120,%rax   ;   {metadata(method data for {method} {0x0000000056cdb520} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000000000284f106: movabs $0x128,%rsi
  0x000000000284f110: jne    0x000000000284f120
  0x000000000284f116: movabs $0x138,%rsi
  0x000000000284f120: mov    (%rax,%rsi,1),%rdi
  0x000000000284f124: lea    0x1(%rdi),%rdi
  0x000000000284f128: mov    %rdi,(%rax,%rsi,1)
  0x000000000284f12c: jne    0x000000000284f14c  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)

  0x000000000284f132: movabs $0x56d86120,%rax   ;   {metadata(method data for {method} {0x0000000056cdb520} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x000000000284f13c: incl   0x148(%rax)
  0x000000000284f142: mov    $0x1,%eax
  0x000000000284f147: jmpq   0x000000000284f151  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)

  0x000000000284f14c: mov    $0x0,%eax          ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)

  0x000000000284f151: and    $0x1,%eax
  0x000000000284f154: add    $0x30,%rsp
  0x000000000284f158: pop    %rbp
  0x000000000284f159: test   %eax,-0x262f05f(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x000000000284f15f: retq   
  0x000000000284f160: mov    %rax,0x8(%rsp)
  0x000000000284f165: movq   $0xffffffffffffffff,(%rsp)
  0x000000000284f16d: callq  0x00000000028400a0  ; OopMap{rdx=Oop off=274}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ;   {runtime_call}
  0x000000000284f172: jmpq   0x000000000284f0be
  0x000000000284f177: nop
  0x000000000284f178: nop
  0x000000000284f179: mov    0x2a8(%r15),%rax
  0x000000000284f180: movabs $0x0,%r10
  0x000000000284f18a: mov    %r10,0x2a8(%r15)
  0x000000000284f191: movabs $0x0,%r10
  0x000000000284f19b: mov    %r10,0x2b0(%r15)
  0x000000000284f1a2: add    $0x30,%rsp
  0x000000000284f1a6: pop    %rbp
  0x000000000284f1a7: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x000000000284f1ac: hlt    
  0x000000000284f1ad: hlt    
  0x000000000284f1ae: hlt    
  0x000000000284f1af: hlt    
  0x000000000284f1b0: hlt    
  0x000000000284f1b1: hlt    
  0x000000000284f1b2: hlt    
  0x000000000284f1b3: hlt    
  0x000000000284f1b4: hlt    
  0x000000000284f1b5: hlt    
  0x000000000284f1b6: hlt    
  0x000000000284f1b7: hlt    
  0x000000000284f1b8: hlt    
  0x000000000284f1b9: hlt    
  0x000000000284f1ba: hlt    
  0x000000000284f1bb: hlt    
  0x000000000284f1bc: hlt    
  0x000000000284f1bd: hlt    
  0x000000000284f1be: hlt    
  0x000000000284f1bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000000284f1c0: callq  0x000000000283d860  ;   {no_reloc}
  0x000000000284f1c5: mov    %rsp,-0x28(%rsp)
  0x000000000284f1ca: sub    $0x80,%rsp
  0x000000000284f1d1: mov    %rax,0x78(%rsp)
  0x000000000284f1d6: mov    %rcx,0x70(%rsp)
  0x000000000284f1db: mov    %rdx,0x68(%rsp)
  0x000000000284f1e0: mov    %rbx,0x60(%rsp)
  0x000000000284f1e5: mov    %rbp,0x50(%rsp)
  0x000000000284f1ea: mov    %rsi,0x48(%rsp)
  0x000000000284f1ef: mov    %rdi,0x40(%rsp)
  0x000000000284f1f4: mov    %r8,0x38(%rsp)
  0x000000000284f1f9: mov    %r9,0x30(%rsp)
  0x000000000284f1fe: mov    %r10,0x28(%rsp)
  0x000000000284f203: mov    %r11,0x20(%rsp)
  0x000000000284f208: mov    %r12,0x18(%rsp)
  0x000000000284f20d: mov    %r13,0x10(%rsp)
  0x000000000284f212: mov    %r14,0x8(%rsp)
  0x000000000284f217: mov    %r15,(%rsp)
  0x000000000284f21b: movabs $0x61388e30,%rcx   ;   {external_word}
  0x000000000284f225: movabs $0x284f1c5,%rdx    ;   {internal_word}
  0x000000000284f22f: mov    %rsp,%r8
  0x000000000284f232: and    $0xfffffffffffffff0,%rsp
  0x000000000284f236: callq  0x0000000061043d40  ;   {runtime_call}
  0x000000000284f23b: hlt    
[Deopt Handler Code]
  0x000000000284f23c: movabs $0x284f23c,%r10    ;   {section_word}
  0x000000000284f246: push   %r10
  0x000000000284f248: jmpq   0x0000000002787600  ;   {runtime_call}
  0x000000000284f24d: hlt    
  0x000000000284f24e: hlt    
  0x000000000284f24f: hlt    
<nmethod compile_id='20' compiler='C1' level='3' entry='0x000000000284f060' size='1024' address='0x000000000284ef10' relocation_offset='288' insts_offset='336' stub_offset='688' scopes_data_offset='840' scopes_pcs_offset='888' dependencies_offset='1016' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='856' iicount='856' stamp='0.150'/>
Decoding compiled method 0x0000000002852b10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000056bcff58} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0x110]  (sp of caller)
  0x0000000002852cc0: mov    0x8(%rdx),%r10d
  0x0000000002852cc4: cmp    %rax,%r10
  0x0000000002852cc7: jne    0x0000000002785f60  ;   {runtime_call}
  0x0000000002852ccd: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002852cd8: data16 data16 xchg %ax,%ax
  0x0000000002852cdc: nopl   0x0(%rax)
[Verified Entry Point]
  0x0000000002852ce0: mov    %eax,-0x6000(%rsp)
  0x0000000002852ce7: push   %rbp
  0x0000000002852ce8: sub    $0x100,%rsp
  0x0000000002852cef: lea    0xe0(%rsp),%rsi
  0x0000000002852cf7: mov    %rdx,0x8(%rsi)
  0x0000000002852cfb: mov    (%rdx),%rax
  0x0000000002852cfe: mov    %rax,%rdi
  0x0000000002852d01: and    $0x7,%rdi
  0x0000000002852d05: cmp    $0x5,%rdi
  0x0000000002852d09: jne    0x0000000002852d84
  0x0000000002852d0f: mov    0x8(%rdx),%edi
  0x0000000002852d12: mov    0xa8(%rdi),%rdi
  0x0000000002852d19: or     %r15,%rdi
  0x0000000002852d1c: xor    %rax,%rdi
  0x0000000002852d1f: and    $0xffffffffffffff87,%rdi
  0x0000000002852d23: je     0x0000000002852dac
  0x0000000002852d29: test   $0x7,%rdi
  0x0000000002852d30: jne    0x0000000002852d75
  0x0000000002852d32: test   $0x300,%rdi
  0x0000000002852d39: jne    0x0000000002852d58
  0x0000000002852d3b: and    $0x37f,%rax
  0x0000000002852d42: mov    %rax,%rdi
  0x0000000002852d45: or     %r15,%rdi
  0x0000000002852d48: lock cmpxchg %rdi,(%rdx)
  0x0000000002852d4d: jne    0x00000000028531b9
  0x0000000002852d53: jmpq   0x0000000002852dac
  0x0000000002852d58: mov    0x8(%rdx),%edi
  0x0000000002852d5b: mov    0xa8(%rdi),%rdi
  0x0000000002852d62: or     %r15,%rdi
  0x0000000002852d65: lock cmpxchg %rdi,(%rdx)
  0x0000000002852d6a: jne    0x00000000028531b9
  0x0000000002852d70: jmpq   0x0000000002852dac
  0x0000000002852d75: mov    0x8(%rdx),%edi
  0x0000000002852d78: mov    0xa8(%rdi),%rdi
  0x0000000002852d7f: lock cmpxchg %rdi,(%rdx)
  0x0000000002852d84: mov    (%rdx),%rax
  0x0000000002852d87: or     $0x1,%rax
  0x0000000002852d8b: mov    %rax,(%rsi)
  0x0000000002852d8e: lock cmpxchg %rsi,(%rdx)
  0x0000000002852d93: je     0x0000000002852dac
  0x0000000002852d99: sub    %rsp,%rax
  0x0000000002852d9c: and    $0xfffffffffffff007,%rax
  0x0000000002852da3: mov    %rax,(%rsi)
  0x0000000002852da6: jne    0x00000000028531b9
  0x0000000002852dac: movabs $0x56d862a0,%rsi   ;   {metadata(method data for {method} {0x0000000056bcff58} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002852db6: mov    0xdc(%rsi),%edi
  0x0000000002852dbc: add    $0x8,%edi
  0x0000000002852dbf: mov    %edi,0xdc(%rsi)
  0x0000000002852dc5: movabs $0x56bcff50,%rsi   ;   {metadata({method} {0x0000000056bcff58} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002852dcf: and    $0x1ff8,%edi
  0x0000000002852dd5: cmp    $0x0,%edi
  0x0000000002852dd8: je     0x00000000028531cc  ;*aload_0
                                                ; - java.lang.StringBuffer::append@0 (line 380)

  0x0000000002852dde: movl   $0x0,0x14(%rdx)
  0x0000000002852de5: mov    %rdx,%rsi
  0x0000000002852de8: shr    $0x9,%rsi
  0x0000000002852dec: movabs $0x116f6000,%rdi
  0x0000000002852df6: movb   $0x0,(%rsi,%rdi,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)

  0x0000000002852dfa: mov    %rdx,%rsi
  0x0000000002852dfd: movabs $0x56d862a0,%rdi   ;   {metadata(method data for {method} {0x0000000056bcff58} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002852e07: addq   $0x1,0x108(%rdi)
  0x0000000002852e0f: movabs $0x56d85eb0,%rsi   ;   {metadata(method data for {method} {0x0000000056bd4d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002852e19: mov    0xdc(%rsi),%edi
  0x0000000002852e1f: add    $0x8,%edi
  0x0000000002852e22: mov    %edi,0xdc(%rsi)
  0x0000000002852e28: movabs $0x56bd4d30,%rsi   ;   {metadata({method} {0x0000000056bd4d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002852e32: and    $0x7ffff8,%edi
  0x0000000002852e38: cmp    $0x0,%edi
  0x0000000002852e3b: je     0x00000000028531e3
  0x0000000002852e41: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002852e44: inc    %esi
  0x0000000002852e46: mov    %rdx,%rdi
  0x0000000002852e49: movabs $0x56d85eb0,%rbx   ;   {metadata(method data for {method} {0x0000000056bd4d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002852e53: addq   $0x1,0x108(%rbx)
  0x0000000002852e5b: movabs $0x56d85840,%rdi   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002852e65: mov    0xdc(%rdi),%ebx
  0x0000000002852e6b: add    $0x8,%ebx
  0x0000000002852e6e: mov    %ebx,0xdc(%rdi)
  0x0000000002852e74: movabs $0x56bd3bf8,%rdi   ;   {metadata({method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002852e7e: and    $0x7ffff8,%ebx
  0x0000000002852e84: cmp    $0x0,%ebx
  0x0000000002852e87: je     0x00000000028531fa
  0x0000000002852e8d: mov    0x10(%rdx),%edi    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002852e90: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; implicit exception: dispatches to 0x0000000002853211
  0x0000000002852e93: mov    %rsi,%rax
  0x0000000002852e96: sub    %ebx,%eax
  0x0000000002852e98: cmp    $0x0,%eax
  0x0000000002852e9b: movabs $0x56d85840,%rax   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002852ea5: movabs $0x108,%rcx
  0x0000000002852eaf: jle    0x0000000002852ebf
  0x0000000002852eb5: movabs $0x118,%rcx
  0x0000000002852ebf: mov    (%rax,%rcx,1),%r9
  0x0000000002852ec3: lea    0x1(%r9),%r9
  0x0000000002852ec7: mov    %r9,(%rax,%rcx,1)
  0x0000000002852ecb: jg     0x0000000002852ede  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002852ed1: mov    %r8d,0xc4(%rsp)
  0x0000000002852ed9: jmpq   0x000000000285314b  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002852ede: mov    %ebx,0xc0(%rsp)
  0x0000000002852ee5: mov    %rdi,0xc8(%rsp)
  0x0000000002852eed: mov    %r8d,0xc4(%rsp)
  0x0000000002852ef5: mov    %rdx,%rax
  0x0000000002852ef8: movabs $0x56d85840,%rcx   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002852f02: addq   $0x1,0x128(%rcx)
  0x0000000002852f0a: mov    %rsi,%r8
  0x0000000002852f0d: mov    %rdx,%rsi
  0x0000000002852f10: mov    %rsi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002852f13: mov    %rsi,0xd0(%rsp)
  0x0000000002852f1b: nop
  0x0000000002852f1c: nop
  0x0000000002852f1d: nop
  0x0000000002852f1e: nop
  0x0000000002852f1f: callq  0x00000000027861a0  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=612}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {optimized virtual_call}
  0x0000000002852f24: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002852f27: movabs $0x56d85840,%rbx   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002852f31: addq   $0x1,0x138(%rbx)
  0x0000000002852f39: movabs $0x56d85c80,%rbx   ;   {metadata(method data for {method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002852f43: mov    0xdc(%rbx),%edx
  0x0000000002852f49: add    $0x8,%edx
  0x0000000002852f4c: mov    %edx,0xdc(%rbx)
  0x0000000002852f52: movabs $0x56c787f8,%rbx   ;   {metadata({method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002852f5c: and    $0x7ffff8,%edx
  0x0000000002852f62: cmp    $0x0,%edx
  0x0000000002852f65: je     0x0000000002853216
  0x0000000002852f6b: mov    %r8,%rbx
  0x0000000002852f6e: movabs $0x16b60208,%rdx   ;   {metadata({type array char})}
  0x0000000002852f78: movslq %ebx,%rbx
  0x0000000002852f7b: mov    %rbx,%rdi
  0x0000000002852f7e: cmp    $0xffffff,%rbx
  0x0000000002852f85: ja     0x000000000285322d
  0x0000000002852f8b: movabs $0x17,%rsi
  0x0000000002852f95: lea    (%rsi,%rbx,2),%rsi
  0x0000000002852f99: and    $0xfffffffffffffff8,%rsi
  0x0000000002852f9d: mov    0x60(%r15),%rax
  0x0000000002852fa1: lea    (%rax,%rsi,1),%rsi
  0x0000000002852fa5: cmp    0x70(%r15),%rsi
  0x0000000002852fa9: ja     0x000000000285322d
  0x0000000002852faf: mov    %rsi,0x60(%r15)
  0x0000000002852fb3: sub    %rax,%rsi
  0x0000000002852fb6: movq   $0x1,(%rax)
  0x0000000002852fbd: mov    %rdx,%rcx
  0x0000000002852fc0: mov    %ecx,0x8(%rax)
  0x0000000002852fc3: mov    %ebx,0xc(%rax)
  0x0000000002852fc6: sub    $0x10,%rsi
  0x0000000002852fca: je     0x0000000002852fe1
  0x0000000002852fd0: xor    %rbx,%rbx
  0x0000000002852fd3: shr    $0x3,%rsi
  0x0000000002852fd7: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002852fdc: dec    %rsi
  0x0000000002852fdf: jne    0x0000000002852fd7  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002852fe1: movabs $0x56d85c80,%rdx   ;   {metadata(method data for {method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002852feb: addq   $0x1,0x108(%rdx)
  0x0000000002852ff3: movabs $0x56d721b8,%rdx   ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002852ffd: mov    0xdc(%rdx),%r9d
  0x0000000002853004: add    $0x8,%r9d
  0x0000000002853008: mov    %r9d,0xdc(%rdx)
  0x000000000285300f: movabs $0x56c542a0,%rdx   ;   {metadata({method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002853019: and    $0x7ffff8,%r9d
  0x0000000002853020: cmp    $0x0,%r9d
  0x0000000002853024: je     0x0000000002853237
  0x000000000285302a: mov    0xc0(%rsp),%ebx
  0x0000000002853031: cmp    %r8d,%ebx
  0x0000000002853034: movabs $0x56d721b8,%rdx   ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000000285303e: movabs $0x108,%r9
  0x0000000002853048: jg     0x0000000002853058
  0x000000000285304e: movabs $0x118,%r9
  0x0000000002853058: mov    (%rdx,%r9,1),%rdi
  0x000000000285305c: lea    0x1(%rdi),%rdi
  0x0000000002853060: mov    %rdi,(%rdx,%r9,1)
  0x0000000002853064: jg     0x000000000285307f  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000000285306a: movabs $0x56d721b8,%rdx   ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002853074: incl   0x128(%rdx)
  0x000000000285307a: jmpq   0x0000000002853082  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000000285307f: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002853082: mov    0xc8(%rsp),%rdi
  0x000000000285308a: movabs $0x56d85c80,%rdx   ;   {metadata(method data for {method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002853094: addq   $0x1,0x118(%rdx)
  0x000000000285309c: mov    %rdi,%rdx
  0x000000000285309f: mov    $0x0,%r8d
  0x00000000028530a5: mov    %rax,%r9
  0x00000000028530a8: mov    $0x0,%edi
  0x00000000028530ad: mov    %rbx,%rsi
  0x00000000028530b0: mov    %rax,0xd8(%rsp)
  0x00000000028530b8: lea    (%r8,%rsi,1),%rcx
  0x00000000028530bc: cmp    0xc(%rdx),%ecx
  0x00000000028530bf: ja     0x000000000285324e
  0x00000000028530c5: lea    (%rdi,%rsi,1),%rcx
  0x00000000028530c9: cmp    0xc(%r9),%ecx
  0x00000000028530cd: ja     0x000000000285324e
  0x00000000028530d3: test   %esi,%esi
  0x00000000028530d5: jl     0x000000000285324e
  0x00000000028530db: je     0x000000000285311f
  0x00000000028530e1: movslq %r8d,%r8
  0x00000000028530e4: movslq %edi,%rdi
  0x00000000028530e7: lea    0x10(%rdx,%r8,2),%rcx
  0x00000000028530ec: lea    0x10(%r9,%rdi,2),%rdx
  0x00000000028530f1: mov    %rsi,%r8
  0x00000000028530f4: sub    $0x20,%rsp
  0x00000000028530f8: test   $0xf,%esp
  0x00000000028530fe: je     0x0000000002853116
  0x0000000002853104: sub    $0x8,%rsp
  0x0000000002853108: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000000285310d: add    $0x8,%rsp
  0x0000000002853111: jmpq   0x000000000285311b
  0x0000000002853116: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000000285311b: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000000285311f: mov    0xd8(%rsp),%rax
  0x0000000002853127: mov    0xd0(%rsp),%rdx
  0x000000000285312f: mov    %rax,%r10
  0x0000000002853132: mov    %r10d,0x10(%rdx)
  0x0000000002853136: mov    %rdx,%rax
  0x0000000002853139: shr    $0x9,%rax
  0x000000000285313d: movabs $0x116f6000,%rsi
  0x0000000002853147: movb   $0x0,(%rax,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000000285314b: mov    0xc4(%rsp),%r8d
  0x0000000002853153: mov    0x10(%rdx),%eax    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002853156: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002853159: mov    %rsi,%rdi
  0x000000000285315c: inc    %edi
  0x000000000285315e: mov    %edi,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002853161: movslq %esi,%rdi
  0x0000000002853164: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000002853259
  0x0000000002853167: jae    0x0000000002853263
  0x000000000285316d: mov    %r8w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002853173: lea    0xe0(%rsp),%rax
  0x000000000285317b: mov    0x8(%rax),%rdi
  0x000000000285317f: mov    (%rdi),%rsi
  0x0000000002853182: and    $0x7,%rsi
  0x0000000002853186: cmp    $0x5,%rsi
  0x000000000285318a: je     0x00000000028531a7
  0x0000000002853190: mov    (%rax),%rsi
  0x0000000002853193: test   %rsi,%rsi
  0x0000000002853196: je     0x00000000028531a7
  0x000000000285319c: lock cmpxchg %rsi,(%rdi)
  0x00000000028531a1: jne    0x000000000285326c  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x00000000028531a7: mov    %rdx,%rax
  0x00000000028531aa: add    $0x100,%rsp
  0x00000000028531b1: pop    %rbp
  0x00000000028531b2: test   %eax,-0x26330b8(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x00000000028531b8: retq   
  0x00000000028531b9: mov    %rdx,0x8(%rsp)
  0x00000000028531be: mov    %rsi,(%rsp)
  0x00000000028531c2: callq  0x000000000283e3a0  ; OopMap{rdx=Oop [232]=Oop off=1287}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x00000000028531c7: jmpq   0x0000000002852dac
  0x00000000028531cc: mov    %rsi,0x8(%rsp)
  0x00000000028531d1: movq   $0xffffffffffffffff,(%rsp)
  0x00000000028531d9: callq  0x00000000028400a0  ; OopMap{rdx=Oop [232]=Oop off=1310}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x00000000028531de: jmpq   0x0000000002852dde
  0x00000000028531e3: mov    %rsi,0x8(%rsp)
  0x00000000028531e8: movq   $0xffffffffffffffff,(%rsp)
  0x00000000028531f0: callq  0x00000000028400a0  ; OopMap{rdx=Oop [232]=Oop off=1333}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x00000000028531f5: jmpq   0x0000000002852e41
  0x00000000028531fa: mov    %rdi,0x8(%rsp)
  0x00000000028531ff: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002853207: callq  0x00000000028400a0  ; OopMap{rdx=Oop [232]=Oop off=1356}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000000285320c: jmpq   0x0000000002852e8d
  0x0000000002853211: callq  0x000000000283b9c0  ; OopMap{rdx=Oop rdi=Oop [232]=Oop off=1366}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002853216: mov    %rbx,0x8(%rsp)
  0x000000000285321b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002853223: callq  0x00000000028400a0  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=1384}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002853228: jmpq   0x0000000002852f6b
  0x000000000285322d: callq  0x000000000283ca40  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=1394}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002853232: jmpq   0x0000000002852fe1
  0x0000000002853237: mov    %rdx,0x8(%rsp)
  0x000000000285323c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002853244: callq  0x00000000028400a0  ; OopMap{[208]=Oop [200]=Oop rax=Oop [232]=Oop off=1417}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002853249: jmpq   0x000000000285302a
  0x000000000285324e: nop
  0x000000000285324f: callq  0x0000000002786620  ; OopMap{[208]=Oop [216]=Oop [232]=Oop off=1428}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {static_call}
  0x0000000002853254: jmpq   0x000000000285311f
  0x0000000002853259: callq  0x000000000283b9c0  ; OopMap{rdx=Oop rax=Oop [232]=Oop off=1438}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000000285325e: callq  0x000000000283b9c0  ; OopMap{rdx=Oop rax=Oop [232]=Oop off=1443}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002853263: mov    %rsi,(%rsp)
  0x0000000002853267: callq  0x000000000283b300  ; OopMap{rdx=Oop rax=Oop [232]=Oop off=1452}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000000285326c: lea    0xe0(%rsp),%rax
  0x0000000002853274: mov    %rax,(%rsp)
  0x0000000002853278: callq  0x000000000283e7a0  ;   {runtime_call}
  0x000000000285327d: jmpq   0x00000000028531a7
  0x0000000002853282: nop
  0x0000000002853283: nop
  0x0000000002853284: mov    0x2a8(%r15),%rax
  0x000000000285328b: movabs $0x0,%r10
  0x0000000002853295: mov    %r10,0x2a8(%r15)
  0x000000000285329c: movabs $0x0,%r10
  0x00000000028532a6: mov    %r10,0x2b0(%r15)
  0x00000000028532ad: mov    %rax,%rbx
  0x00000000028532b0: lea    0xe0(%rsp),%rax
  0x00000000028532b8: mov    0x8(%rax),%rsi
  0x00000000028532bc: mov    (%rsi),%rdi
  0x00000000028532bf: and    $0x7,%rdi
  0x00000000028532c3: cmp    $0x5,%rdi
  0x00000000028532c7: je     0x00000000028532e4
  0x00000000028532cd: mov    (%rax),%rdi
  0x00000000028532d0: test   %rdi,%rdi
  0x00000000028532d3: je     0x00000000028532e4
  0x00000000028532d9: lock cmpxchg %rdi,(%rsi)
  0x00000000028532de: jne    0x00000000028532f4
  0x00000000028532e4: mov    %rbx,%rax
  0x00000000028532e7: add    $0x100,%rsp
  0x00000000028532ee: pop    %rbp
  0x00000000028532ef: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x00000000028532f4: lea    0xe0(%rsp),%rax
  0x00000000028532fc: mov    %rax,(%rsp)
  0x0000000002853300: callq  0x000000000283e7a0  ;   {runtime_call}
  0x0000000002853305: jmp    0x00000000028532e4
  0x0000000002853307: hlt    
  0x0000000002853308: hlt    
  0x0000000002853309: hlt    
  0x000000000285330a: hlt    
  0x000000000285330b: hlt    
  0x000000000285330c: hlt    
  0x000000000285330d: hlt    
  0x000000000285330e: hlt    
  0x000000000285330f: hlt    
  0x0000000002853310: hlt    
  0x0000000002853311: hlt    
  0x0000000002853312: hlt    
  0x0000000002853313: hlt    
  0x0000000002853314: hlt    
  0x0000000002853315: hlt    
  0x0000000002853316: hlt    
  0x0000000002853317: hlt    
  0x0000000002853318: hlt    
  0x0000000002853319: hlt    
  0x000000000285331a: hlt    
  0x000000000285331b: hlt    
  0x000000000285331c: hlt    
  0x000000000285331d: hlt    
  0x000000000285331e: hlt    
  0x000000000285331f: hlt    
[Stub Code]
  0x0000000002853320: nop                       ;   {no_reloc}
  0x0000000002853321: nop
  0x0000000002853322: nop
  0x0000000002853323: nop
  0x0000000002853324: nop
  0x0000000002853325: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000285332f: jmpq   0x000000000285332f  ;   {runtime_call}
  0x0000000002853334: nop
  0x0000000002853335: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000285333f: jmpq   0x000000000285333f  ;   {runtime_call}
[Exception Handler]
  0x0000000002853344: callq  0x000000000283d860  ;   {runtime_call}
  0x0000000002853349: mov    %rsp,-0x28(%rsp)
  0x000000000285334e: sub    $0x80,%rsp
  0x0000000002853355: mov    %rax,0x78(%rsp)
  0x000000000285335a: mov    %rcx,0x70(%rsp)
  0x000000000285335f: mov    %rdx,0x68(%rsp)
  0x0000000002853364: mov    %rbx,0x60(%rsp)
  0x0000000002853369: mov    %rbp,0x50(%rsp)
  0x000000000285336e: mov    %rsi,0x48(%rsp)
  0x0000000002853373: mov    %rdi,0x40(%rsp)
  0x0000000002853378: mov    %r8,0x38(%rsp)
  0x000000000285337d: mov    %r9,0x30(%rsp)
  0x0000000002853382: mov    %r10,0x28(%rsp)
  0x0000000002853387: mov    %r11,0x20(%rsp)
  0x000000000285338c: mov    %r12,0x18(%rsp)
  0x0000000002853391: mov    %r13,0x10(%rsp)
  0x0000000002853396: mov    %r14,0x8(%rsp)
  0x000000000285339b: mov    %r15,(%rsp)
  0x000000000285339f: movabs $0x61388e30,%rcx   ;   {external_word}
  0x00000000028533a9: movabs $0x2853349,%rdx    ;   {internal_word}
  0x00000000028533b3: mov    %rsp,%r8
  0x00000000028533b6: and    $0xfffffffffffffff0,%rsp
  0x00000000028533ba: callq  0x0000000061043d40  ;   {runtime_call}
  0x00000000028533bf: hlt    
[Deopt Handler Code]
  0x00000000028533c0: movabs $0x28533c0,%r10    ;   {section_word}
  0x00000000028533ca: push   %r10
  0x00000000028533cc: jmpq   0x0000000002787600  ;   {runtime_call}
  0x00000000028533d1: hlt    
  0x00000000028533d2: hlt    
  0x00000000028533d3: hlt    
  0x00000000028533d4: hlt    
  0x00000000028533d5: hlt    
  0x00000000028533d6: hlt    
  0x00000000028533d7: hlt    
<nmethod compile_id='21' compiler='C1' level='3' entry='0x0000000002852cc0' size='3240' address='0x0000000002852b10' relocation_offset='288' insts_offset='432' stub_offset='2064' scopes_data_offset='2288' scopes_pcs_offset='2640' dependencies_offset='3200' nul_chk_table_offset='3208' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='765' iicount='765' stamp='0.157'/>
Decoding compiled method 0x00000000028537d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000056d34550} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002853940: mov    0x8(%rdx),%r10d
  0x0000000002853944: cmp    %rax,%r10
  0x0000000002853947: jne    0x0000000002785f60  ;   {runtime_call}
  0x000000000285394d: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002853958: data16 data16 xchg %ax,%ax
  0x000000000285395c: nopl   0x0(%rax)
[Verified Entry Point]
  0x0000000002853960: mov    %eax,-0x6000(%rsp)
  0x0000000002853967: push   %rbp
  0x0000000002853968: sub    $0x40,%rsp
  0x000000000285396c: movabs $0x56d35500,%rax   ;   {metadata(method data for {method} {0x0000000056d34550} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002853976: mov    0xdc(%rax),%esi
  0x000000000285397c: add    $0x8,%esi
  0x000000000285397f: mov    %esi,0xdc(%rax)
  0x0000000002853985: movabs $0x56d34548,%rax   ;   {metadata({method} {0x0000000056d34550} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000000285398f: and    $0x1ff8,%esi
  0x0000000002853995: cmp    $0x0,%esi
  0x0000000002853998: je     0x0000000002853aa7  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x000000000285399e: movabs $0x56d35500,%rax   ;   {metadata(method data for {method} {0x0000000056d34550} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000028539a8: addq   $0x1,0x118(%rax)
  0x00000000028539b0: movabs $0x56d356c0,%rax   ;   {metadata(method data for {method} {0x0000000056d33d80} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000028539ba: mov    0xdc(%rax),%esi
  0x00000000028539c0: add    $0x8,%esi
  0x00000000028539c3: mov    %esi,0xdc(%rax)
  0x00000000028539c9: movabs $0x56d33d78,%rax   ;   {metadata({method} {0x0000000056d33d80} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000028539d3: and    $0x7ffff8,%esi
  0x00000000028539d9: cmp    $0x0,%esi
  0x00000000028539dc: je     0x0000000002853abe
  0x00000000028539e2: mov    %r8,%rax
  0x00000000028539e5: and    $0xffff,%eax
  0x00000000028539eb: movabs $0xd5c89678,%rsi   ;   {oop([I)}
  0x00000000028539f5: movslq %eax,%rdi
  0x00000000028539f8: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x0000000002853ad5
  0x00000000028539fb: jae    0x0000000002853adf
  0x0000000002853a01: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x0000000002853a05: mov    %rax,%rsi
  0x0000000002853a08: and    $0x20000,%esi
  0x0000000002853a0e: cmp    $0x0,%esi
  0x0000000002853a11: movabs $0x56d35500,%rsi   ;   {metadata(method data for {method} {0x0000000056d34550} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002853a1b: movabs $0x138,%rdi
  0x0000000002853a25: je     0x0000000002853a35
  0x0000000002853a2b: movabs $0x148,%rdi
  0x0000000002853a35: mov    (%rsi,%rdi,1),%rbx
  0x0000000002853a39: lea    0x1(%rbx),%rbx
  0x0000000002853a3d: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002853a41: je     0x0000000002853a98  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x0000000002853a47: mov    %rax,%rsi
  0x0000000002853a4a: and    $0x7fc0000,%esi
  0x0000000002853a50: cmp    $0x7fc0000,%esi
  0x0000000002853a56: movabs $0x56d35500,%rsi   ;   {metadata(method data for {method} {0x0000000056d34550} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002853a60: movabs $0x158,%rdi
  0x0000000002853a6a: je     0x0000000002853a7a
  0x0000000002853a70: movabs $0x168,%rdi
  0x0000000002853a7a: mov    (%rsi,%rdi,1),%rbx
  0x0000000002853a7e: lea    0x1(%rbx),%rbx
  0x0000000002853a82: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002853a86: je     0x0000000002853a98  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x0000000002853a8c: shl    $0x5,%eax
  0x0000000002853a8f: sar    $0x17,%eax
  0x0000000002853a92: add    %r8d,%eax
  0x0000000002853a95: mov    %rax,%r8           ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x0000000002853a98: mov    %r8,%rax
  0x0000000002853a9b: add    $0x40,%rsp
  0x0000000002853a9f: pop    %rbp
  0x0000000002853aa0: test   %eax,-0x26339a6(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x0000000002853aa6: retq   
  0x0000000002853aa7: mov    %rax,0x8(%rsp)
  0x0000000002853aac: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002853ab4: callq  0x00000000028400a0  ; OopMap{rdx=Oop off=377}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x0000000002853ab9: jmpq   0x000000000285399e
  0x0000000002853abe: mov    %rax,0x8(%rsp)
  0x0000000002853ac3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002853acb: callq  0x00000000028400a0  ; OopMap{off=400}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002853ad0: jmpq   0x00000000028539e2
  0x0000000002853ad5: callq  0x000000000283b9c0  ; OopMap{rsi=Oop off=410}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002853ada: callq  0x000000000283b9c0  ; OopMap{rsi=Oop off=415}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002853adf: mov    %rax,(%rsp)
  0x0000000002853ae3: callq  0x000000000283b300  ; OopMap{rsi=Oop off=424}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002853ae8: nop
  0x0000000002853ae9: nop
  0x0000000002853aea: mov    0x2a8(%r15),%rax
  0x0000000002853af1: movabs $0x0,%r10
  0x0000000002853afb: mov    %r10,0x2a8(%r15)
  0x0000000002853b02: movabs $0x0,%r10
  0x0000000002853b0c: mov    %r10,0x2b0(%r15)
  0x0000000002853b13: add    $0x40,%rsp
  0x0000000002853b17: pop    %rbp
  0x0000000002853b18: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x0000000002853b1d: hlt    
  0x0000000002853b1e: hlt    
  0x0000000002853b1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002853b20: callq  0x000000000283d860  ;   {no_reloc}
  0x0000000002853b25: mov    %rsp,-0x28(%rsp)
  0x0000000002853b2a: sub    $0x80,%rsp
  0x0000000002853b31: mov    %rax,0x78(%rsp)
  0x0000000002853b36: mov    %rcx,0x70(%rsp)
  0x0000000002853b3b: mov    %rdx,0x68(%rsp)
  0x0000000002853b40: mov    %rbx,0x60(%rsp)
  0x0000000002853b45: mov    %rbp,0x50(%rsp)
  0x0000000002853b4a: mov    %rsi,0x48(%rsp)
  0x0000000002853b4f: mov    %rdi,0x40(%rsp)
  0x0000000002853b54: mov    %r8,0x38(%rsp)
  0x0000000002853b59: mov    %r9,0x30(%rsp)
  0x0000000002853b5e: mov    %r10,0x28(%rsp)
  0x0000000002853b63: mov    %r11,0x20(%rsp)
  0x0000000002853b68: mov    %r12,0x18(%rsp)
  0x0000000002853b6d: mov    %r13,0x10(%rsp)
  0x0000000002853b72: mov    %r14,0x8(%rsp)
  0x0000000002853b77: mov    %r15,(%rsp)
  0x0000000002853b7b: movabs $0x61388e30,%rcx   ;   {external_word}
  0x0000000002853b85: movabs $0x2853b25,%rdx    ;   {internal_word}
  0x0000000002853b8f: mov    %rsp,%r8
  0x0000000002853b92: and    $0xfffffffffffffff0,%rsp
  0x0000000002853b96: callq  0x0000000061043d40  ;   {runtime_call}
  0x0000000002853b9b: hlt    
[Deopt Handler Code]
  0x0000000002853b9c: movabs $0x2853b9c,%r10    ;   {section_word}
  0x0000000002853ba6: push   %r10
  0x0000000002853ba8: jmpq   0x0000000002787600  ;   {runtime_call}
  0x0000000002853bad: hlt    
  0x0000000002853bae: hlt    
  0x0000000002853baf: hlt    
<nmethod compile_id='16' compiler='C1' level='3' entry='0x0000000002853940' size='1352' address='0x00000000028537d0' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1016' scopes_pcs_offset='1128' dependencies_offset='1320' nul_chk_table_offset='1328' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='1632' iicount='1632' stamp='0.159'/>
<writer thread='7024'/>
<task_queued compile_id='22' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='278' iicount='278' level='3' stamp='0.159' comment='tiered' hot_count='278'/>
<writer thread='7864'/>
Decoding compiled method 0x0000000002853d50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000056bd4558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x0000000002853f20: mov    0x8(%rdx),%r10d
  0x0000000002853f24: cmp    %rax,%r10
  0x0000000002853f27: jne    0x0000000002785f60  ;   {runtime_call}
  0x0000000002853f2d: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002853f38: data16 data16 xchg %ax,%ax
  0x0000000002853f3c: nopl   0x0(%rax)
[Verified Entry Point]
  0x0000000002853f40: mov    %eax,-0x6000(%rsp)
  0x0000000002853f47: push   %rbp
  0x0000000002853f48: sub    $0xe0,%rsp
  0x0000000002853f4f: mov    %rdx,0xb8(%rsp)
  0x0000000002853f57: movabs $0x56d7c4c8,%rsi   ;   {metadata(method data for {method} {0x0000000056bd4558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002853f61: mov    0xdc(%rsi),%edi
  0x0000000002853f67: add    $0x8,%edi
  0x0000000002853f6a: mov    %edi,0xdc(%rsi)
  0x0000000002853f70: movabs $0x56bd4550,%rsi   ;   {metadata({method} {0x0000000056bd4558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002853f7a: and    $0x1ff8,%edi
  0x0000000002853f80: cmp    $0x0,%edi
  0x0000000002853f83: je     0x00000000028544a3  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x0000000002853f89: cmp    $0x0,%r8
  0x0000000002853f8d: movabs $0x56d7c4c8,%rsi   ;   {metadata(method data for {method} {0x0000000056bd4558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002853f97: movabs $0x108,%rdi
  0x0000000002853fa1: jne    0x0000000002853fb1
  0x0000000002853fa7: movabs $0x118,%rdi
  0x0000000002853fb1: mov    (%rsi,%rdi,1),%rbx
  0x0000000002853fb5: lea    0x1(%rbx),%rbx
  0x0000000002853fb9: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002853fbd: je     0x0000000002854473  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x0000000002853fc3: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00000000028544ba
  0x0000000002853fc6: mov    %r8,%rsi
  0x0000000002853fc9: movabs $0x56d7c4c8,%rdi   ;   {metadata(method data for {method} {0x0000000056bd4558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002853fd3: mov    0x8(%rsi),%esi
  0x0000000002853fd6: cmp    0x140(%rdi),%rsi
  0x0000000002853fdd: jne    0x0000000002853fec
  0x0000000002853fdf: addq   $0x1,0x148(%rdi)
  0x0000000002853fe7: jmpq   0x0000000002854052
  0x0000000002853fec: cmp    0x150(%rdi),%rsi
  0x0000000002853ff3: jne    0x0000000002854002
  0x0000000002853ff5: addq   $0x1,0x158(%rdi)
  0x0000000002853ffd: jmpq   0x0000000002854052
  0x0000000002854002: cmpq   $0x0,0x140(%rdi)
  0x000000000285400d: jne    0x0000000002854026
  0x000000000285400f: mov    %rsi,0x140(%rdi)
  0x0000000002854016: movq   $0x1,0x148(%rdi)
  0x0000000002854021: jmpq   0x0000000002854052
  0x0000000002854026: cmpq   $0x0,0x150(%rdi)
  0x0000000002854031: jne    0x000000000285404a
  0x0000000002854033: mov    %rsi,0x150(%rdi)
  0x000000000285403a: movq   $0x1,0x158(%rdi)
  0x0000000002854045: jmpq   0x0000000002854052
  0x000000000285404a: addq   $0x1,0x138(%rdi)
  0x0000000002854052: movabs $0x56c92670,%rsi   ;   {metadata(method data for {method} {0x0000000056b63c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000000285405c: mov    0xdc(%rsi),%edi
  0x0000000002854062: add    $0x8,%edi
  0x0000000002854065: mov    %edi,0xdc(%rsi)
  0x000000000285406b: movabs $0x56b63c18,%rsi   ;   {metadata({method} {0x0000000056b63c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002854075: and    $0x7ffff8,%edi
  0x000000000285407b: cmp    $0x0,%edi
  0x000000000285407e: je     0x00000000028544bf
  0x0000000002854084: mov    0xc(%r8),%esi      ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x0000000002854088: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00000000028544d6
  0x000000000285408b: mov    %esi,0xac(%rsp)
  0x0000000002854092: mov    0xc(%rdx),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x0000000002854095: add    %esi,%edi
  0x0000000002854097: mov    %rdx,%rbx
  0x000000000285409a: movabs $0x56d7c4c8,%rax   ;   {metadata(method data for {method} {0x0000000056bd4558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000028540a4: addq   $0x1,0x168(%rax)
  0x00000000028540ac: movabs $0x56d85840,%rbx   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000028540b6: mov    0xdc(%rbx),%eax
  0x00000000028540bc: add    $0x8,%eax
  0x00000000028540bf: mov    %eax,0xdc(%rbx)
  0x00000000028540c5: movabs $0x56bd3bf8,%rbx   ;   {metadata({method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000028540cf: and    $0x7ffff8,%eax
  0x00000000028540d5: cmp    $0x0,%eax
  0x00000000028540d8: je     0x00000000028544db
  0x00000000028540de: mov    0x10(%rdx),%ebx    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000028540e1: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x00000000028544f2
  0x00000000028540e4: mov    %rdi,%rcx
  0x00000000028540e7: sub    %eax,%ecx
  0x00000000028540e9: cmp    $0x0,%ecx
  0x00000000028540ec: movabs $0x56d85840,%rcx   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000028540f6: movabs $0x108,%r9
  0x0000000002854100: jle    0x0000000002854110
  0x0000000002854106: movabs $0x118,%r9
  0x0000000002854110: mov    (%rcx,%r9,1),%r11
  0x0000000002854114: lea    0x1(%r11),%r11
  0x0000000002854118: mov    %r11,(%rcx,%r9,1)
  0x000000000285411c: jg     0x000000000285412f  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002854122: mov    %r8,0xc0(%rsp)
  0x000000000285412a: jmpq   0x0000000002854395  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000000285412f: mov    %eax,0xa8(%rsp)
  0x0000000002854136: mov    %rbx,0xb0(%rsp)
  0x000000000285413e: mov    %r8,0xc0(%rsp)
  0x0000000002854146: mov    %rdx,%rcx
  0x0000000002854149: movabs $0x56d85840,%r9    ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002854153: addq   $0x1,0x128(%r9)
  0x000000000285415b: mov    %rdi,%r8
  0x000000000285415e: mov    %rdx,%rdi
  0x0000000002854161: mov    %rdi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002854164: nop
  0x0000000002854165: nop
  0x0000000002854166: nop
  0x0000000002854167: callq  0x00000000027861a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=588}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x000000000285416c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000000285416f: movabs $0x56d85840,%rbx   ;   {metadata(method data for {method} {0x0000000056bd3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002854179: addq   $0x1,0x138(%rbx)
  0x0000000002854181: movabs $0x56d85c80,%rbx   ;   {metadata(method data for {method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000000285418b: mov    0xdc(%rbx),%edx
  0x0000000002854191: add    $0x8,%edx
  0x0000000002854194: mov    %edx,0xdc(%rbx)
  0x000000000285419a: movabs $0x56c787f8,%rbx   ;   {metadata({method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000028541a4: and    $0x7ffff8,%edx
  0x00000000028541aa: cmp    $0x0,%edx
  0x00000000028541ad: je     0x00000000028544f7
  0x00000000028541b3: mov    %r8,%rbx
  0x00000000028541b6: movabs $0x16b60208,%rdx   ;   {metadata({type array char})}
  0x00000000028541c0: movslq %ebx,%rbx
  0x00000000028541c3: mov    %rbx,%rdi
  0x00000000028541c6: cmp    $0xffffff,%rbx
  0x00000000028541cd: ja     0x000000000285450e
  0x00000000028541d3: movabs $0x17,%rsi
  0x00000000028541dd: lea    (%rsi,%rbx,2),%rsi
  0x00000000028541e1: and    $0xfffffffffffffff8,%rsi
  0x00000000028541e5: mov    0x60(%r15),%rax
  0x00000000028541e9: lea    (%rax,%rsi,1),%rsi
  0x00000000028541ed: cmp    0x70(%r15),%rsi
  0x00000000028541f1: ja     0x000000000285450e
  0x00000000028541f7: mov    %rsi,0x60(%r15)
  0x00000000028541fb: sub    %rax,%rsi
  0x00000000028541fe: movq   $0x1,(%rax)
  0x0000000002854205: mov    %rdx,%rcx
  0x0000000002854208: mov    %ecx,0x8(%rax)
  0x000000000285420b: mov    %ebx,0xc(%rax)
  0x000000000285420e: sub    $0x10,%rsi
  0x0000000002854212: je     0x0000000002854229
  0x0000000002854218: xor    %rbx,%rbx
  0x000000000285421b: shr    $0x3,%rsi
  0x000000000285421f: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002854224: dec    %rsi
  0x0000000002854227: jne    0x000000000285421f  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002854229: movabs $0x56d85c80,%rdx   ;   {metadata(method data for {method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002854233: addq   $0x1,0x108(%rdx)
  0x000000000285423b: movabs $0x56d721b8,%rdx   ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002854245: mov    0xdc(%rdx),%r9d
  0x000000000285424c: add    $0x8,%r9d
  0x0000000002854250: mov    %r9d,0xdc(%rdx)
  0x0000000002854257: movabs $0x56c542a0,%rdx   ;   {metadata({method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002854261: and    $0x7ffff8,%r9d
  0x0000000002854268: cmp    $0x0,%r9d
  0x000000000285426c: je     0x0000000002854518
  0x0000000002854272: mov    0xa8(%rsp),%edx
  0x0000000002854279: cmp    %r8d,%edx
  0x000000000285427c: movabs $0x56d721b8,%r9    ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002854286: movabs $0x108,%rdi
  0x0000000002854290: jg     0x00000000028542a0
  0x0000000002854296: movabs $0x118,%rdi
  0x00000000028542a0: mov    (%r9,%rdi,1),%rsi
  0x00000000028542a4: lea    0x1(%rsi),%rsi
  0x00000000028542a8: mov    %rsi,(%r9,%rdi,1)
  0x00000000028542ac: jg     0x00000000028542cb  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000028542b2: movabs $0x56d721b8,%r8    ;   {metadata(method data for {method} {0x0000000056c542a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000028542bc: incl   0x128(%r8)
  0x00000000028542c3: mov    %rdx,%rsi
  0x00000000028542c6: jmpq   0x00000000028542ce  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000028542cb: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000028542ce: mov    0xb0(%rsp),%rbx
  0x00000000028542d6: movabs $0x56d85c80,%rdx   ;   {metadata(method data for {method} {0x0000000056c78800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000028542e0: addq   $0x1,0x118(%rdx)
  0x00000000028542e8: mov    %rbx,%rdx
  0x00000000028542eb: mov    $0x0,%r8d
  0x00000000028542f1: mov    %rax,%r9
  0x00000000028542f4: mov    $0x0,%edi
  0x00000000028542f9: mov    %rax,0xc8(%rsp)
  0x0000000002854301: lea    (%r8,%rsi,1),%rcx
  0x0000000002854305: cmp    0xc(%rdx),%ecx
  0x0000000002854308: ja     0x000000000285452f
  0x000000000285430e: lea    (%rdi,%rsi,1),%rcx
  0x0000000002854312: cmp    0xc(%r9),%ecx
  0x0000000002854316: ja     0x000000000285452f
  0x000000000285431c: test   %esi,%esi
  0x000000000285431e: jl     0x000000000285452f
  0x0000000002854324: je     0x0000000002854368
  0x000000000285432a: movslq %r8d,%r8
  0x000000000285432d: movslq %edi,%rdi
  0x0000000002854330: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002854335: lea    0x10(%r9,%rdi,2),%rdx
  0x000000000285433a: mov    %rsi,%r8
  0x000000000285433d: sub    $0x20,%rsp
  0x0000000002854341: test   $0xf,%esp
  0x0000000002854347: je     0x000000000285435f
  0x000000000285434d: sub    $0x8,%rsp
  0x0000000002854351: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002854356: add    $0x8,%rsp
  0x000000000285435a: jmpq   0x0000000002854364
  0x000000000285435f: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002854364: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002854368: mov    0xc8(%rsp),%rax
  0x0000000002854370: mov    0xb8(%rsp),%rdx
  0x0000000002854378: mov    %rax,%r10
  0x000000000285437b: mov    %r10d,0x10(%rdx)
  0x000000000285437f: mov    %rdx,%r8
  0x0000000002854382: shr    $0x9,%r8
  0x0000000002854386: movabs $0x116f6000,%r9
  0x0000000002854390: movb   $0x0,(%r8,%r9,1)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002854395: mov    0xac(%rsp),%esi
  0x000000000285439c: mov    0xc0(%rsp),%rbx
  0x00000000028543a4: mov    0x10(%rdx),%edi    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x00000000028543a7: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x00000000028543aa: mov    %rbx,%r8
  0x00000000028543ad: movabs $0x56d7c4c8,%r9    ;   {metadata(method data for {method} {0x0000000056bd4558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000028543b7: mov    0x8(%r8),%r8d
  0x00000000028543bb: cmp    0x180(%r9),%r8
  0x00000000028543c2: jne    0x00000000028543d1
  0x00000000028543c4: addq   $0x1,0x188(%r9)
  0x00000000028543cc: jmpq   0x0000000002854437
  0x00000000028543d1: cmp    0x190(%r9),%r8
  0x00000000028543d8: jne    0x00000000028543e7
  0x00000000028543da: addq   $0x1,0x198(%r9)
  0x00000000028543e2: jmpq   0x0000000002854437
  0x00000000028543e7: cmpq   $0x0,0x180(%r9)
  0x00000000028543f2: jne    0x000000000285440b
  0x00000000028543f4: mov    %r8,0x180(%r9)
  0x00000000028543fb: movq   $0x1,0x188(%r9)
  0x0000000002854406: jmpq   0x0000000002854437
  0x000000000285440b: cmpq   $0x0,0x190(%r9)
  0x0000000002854416: jne    0x000000000285442f
  0x0000000002854418: mov    %r8,0x190(%r9)
  0x000000000285441f: movq   $0x1,0x198(%r9)
  0x000000000285442a: jmpq   0x0000000002854437
  0x000000000285442f: addq   $0x1,0x178(%r9)
  0x0000000002854437: mov    $0x0,%r8d
  0x000000000285443d: mov    %rsi,%r9
  0x0000000002854440: mov    %rax,%rsi
  0x0000000002854443: mov    %rbx,%rdx          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x0000000002854446: nop
  0x0000000002854447: callq  0x00000000027861a0  ; OopMap{[184]=Oop off=1324}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x000000000285444c: mov    0xb8(%rsp),%rdx
  0x0000000002854454: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x0000000002854457: add    0xac(%rsp),%eax
  0x000000000285445e: mov    %eax,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x0000000002854461: mov    %rdx,%rax
  0x0000000002854464: add    $0xe0,%rsp
  0x000000000285446b: pop    %rbp
  0x000000000285446c: test   %eax,-0x2634372(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x0000000002854472: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x0000000002854473: mov    %rdx,%rsi
  0x0000000002854476: movabs $0x56d7c4c8,%rdi   ;   {metadata(method data for {method} {0x0000000056bd4558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002854480: addq   $0x1,0x128(%rdi)
  0x0000000002854488: nop
  0x0000000002854489: nop
  0x000000000285448a: nop
  0x000000000285448b: nop
  0x000000000285448c: nop
  0x000000000285448d: nop
  0x000000000285448e: nop
  0x000000000285448f: callq  0x00000000027861a0  ; OopMap{off=1396}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x0000000002854494: add    $0xe0,%rsp
  0x000000000285449b: pop    %rbp
  0x000000000285449c: test   %eax,-0x26343a2(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x00000000028544a2: retq   
  0x00000000028544a3: mov    %rsi,0x8(%rsp)
  0x00000000028544a8: movq   $0xffffffffffffffff,(%rsp)
  0x00000000028544b0: callq  0x00000000028400a0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1429}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x00000000028544b5: jmpq   0x0000000002853f89
  0x00000000028544ba: callq  0x000000000283b9c0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1439}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00000000028544bf: mov    %rsi,0x8(%rsp)
  0x00000000028544c4: movq   $0xffffffffffffffff,(%rsp)
  0x00000000028544cc: callq  0x00000000028400a0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1457}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00000000028544d1: jmpq   0x0000000002854084
  0x00000000028544d6: callq  0x000000000283b9c0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1467}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00000000028544db: mov    %rbx,0x8(%rsp)
  0x00000000028544e0: movq   $0xffffffffffffffff,(%rsp)
  0x00000000028544e8: callq  0x00000000028400a0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1485}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000000028544ed: jmpq   0x00000000028540de
  0x00000000028544f2: callq  0x000000000283b9c0  ; OopMap{rdx=Oop [184]=Oop r8=Oop rbx=Oop off=1495}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000000028544f7: mov    %rbx,0x8(%rsp)
  0x00000000028544fc: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002854504: callq  0x00000000028400a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1513}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002854509: jmpq   0x00000000028541b3
  0x000000000285450e: callq  0x000000000283ca40  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1523}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002854513: jmpq   0x0000000002854229
  0x0000000002854518: mov    %rdx,0x8(%rsp)
  0x000000000285451d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002854525: callq  0x00000000028400a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1546}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000000285452a: jmpq   0x0000000002854272
  0x000000000285452f: callq  0x0000000002786620  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1556}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x0000000002854534: jmpq   0x0000000002854368
  0x0000000002854539: nop
  0x000000000285453a: nop
  0x000000000285453b: mov    0x2a8(%r15),%rax
  0x0000000002854542: movabs $0x0,%r10
  0x000000000285454c: mov    %r10,0x2a8(%r15)
  0x0000000002854553: movabs $0x0,%r10
  0x000000000285455d: mov    %r10,0x2b0(%r15)
  0x0000000002854564: add    $0xe0,%rsp
  0x000000000285456b: pop    %rbp
  0x000000000285456c: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x0000000002854571: hlt    
  0x0000000002854572: hlt    
  0x0000000002854573: hlt    
  0x0000000002854574: hlt    
  0x0000000002854575: hlt    
  0x0000000002854576: hlt    
  0x0000000002854577: hlt    
  0x0000000002854578: hlt    
  0x0000000002854579: hlt    
  0x000000000285457a: hlt    
  0x000000000285457b: hlt    
  0x000000000285457c: hlt    
  0x000000000285457d: hlt    
  0x000000000285457e: hlt    
  0x000000000285457f: hlt    
[Stub Code]
  0x0000000002854580: nop                       ;   {no_reloc}
  0x0000000002854581: nop
  0x0000000002854582: nop
  0x0000000002854583: nop
  0x0000000002854584: nop
  0x0000000002854585: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000285458f: jmpq   0x000000000285458f  ;   {runtime_call}
  0x0000000002854594: nop
  0x0000000002854595: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000285459f: jmpq   0x000000000285459f  ;   {runtime_call}
  0x00000000028545a4: nop
  0x00000000028545a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000028545af: jmpq   0x00000000028545af  ;   {runtime_call}
  0x00000000028545b4: nop
  0x00000000028545b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000028545bf: jmpq   0x00000000028545bf  ;   {runtime_call}
[Exception Handler]
  0x00000000028545c4: callq  0x000000000283d860  ;   {runtime_call}
  0x00000000028545c9: mov    %rsp,-0x28(%rsp)
  0x00000000028545ce: sub    $0x80,%rsp
  0x00000000028545d5: mov    %rax,0x78(%rsp)
  0x00000000028545da: mov    %rcx,0x70(%rsp)
  0x00000000028545df: mov    %rdx,0x68(%rsp)
  0x00000000028545e4: mov    %rbx,0x60(%rsp)
  0x00000000028545e9: mov    %rbp,0x50(%rsp)
  0x00000000028545ee: mov    %rsi,0x48(%rsp)
  0x00000000028545f3: mov    %rdi,0x40(%rsp)
  0x00000000028545f8: mov    %r8,0x38(%rsp)
  0x00000000028545fd: mov    %r9,0x30(%rsp)
  0x0000000002854602: mov    %r10,0x28(%rsp)
  0x0000000002854607: mov    %r11,0x20(%rsp)
  0x000000000285460c: mov    %r12,0x18(%rsp)
  0x0000000002854611: mov    %r13,0x10(%rsp)
  0x0000000002854616: mov    %r14,0x8(%rsp)
  0x000000000285461b: mov    %r15,(%rsp)
  0x000000000285461f: movabs $0x61388e30,%rcx   ;   {external_word}
  0x0000000002854629: movabs $0x28545c9,%rdx    ;   {internal_word}
  0x0000000002854633: mov    %rsp,%r8
  0x0000000002854636: and    $0xfffffffffffffff0,%rsp
  0x000000000285463a: callq  0x0000000061043d40  ;   {runtime_call}
  0x000000000285463f: hlt    
[Deopt Handler Code]
  0x0000000002854640: movabs $0x2854640,%r10    ;   {section_word}
  0x000000000285464a: push   %r10
  0x000000000285464c: jmpq   0x0000000002787600  ;   {runtime_call}
  0x0000000002854651: hlt    
  0x0000000002854652: hlt    
  0x0000000002854653: hlt    
  0x0000000002854654: hlt    
  0x0000000002854655: hlt    
  0x0000000002854656: hlt    
  0x0000000002854657: hlt    
<nmethod compile_id='22' compiler='C1' level='3' entry='0x0000000002853f20' size='3424' address='0x0000000002853d50' relocation_offset='288' insts_offset='464' stub_offset='2096' scopes_data_offset='2352' scopes_pcs_offset='2760' dependencies_offset='3384' nul_chk_table_offset='3392' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='280' iicount='280' stamp='0.166'/>
<writer thread='7024'/>
<task_queued compile_id='23' method='java/lang/String indexOf (I)I' bytes='7' count='256' iicount='256' level='3' stamp='0.166' comment='tiered' hot_count='256'/>
<writer thread='7864'/>
Decoding compiled method 0x0000000002854ad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000056b65058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002854c40: mov    0x8(%rdx),%r10d
  0x0000000002854c44: cmp    %rax,%r10
  0x0000000002854c47: jne    0x0000000002785f60  ;   {runtime_call}
  0x0000000002854c4d: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002854c58: data16 data16 xchg %ax,%ax
  0x0000000002854c5c: nopl   0x0(%rax)
[Verified Entry Point]
  0x0000000002854c60: mov    %eax,-0x6000(%rsp)
  0x0000000002854c67: push   %rbp
  0x0000000002854c68: sub    $0x30,%rsp
  0x0000000002854c6c: movabs $0x56daa210,%r9    ;   {metadata(method data for {method} {0x0000000056b65058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002854c76: mov    0xdc(%r9),%esi
  0x0000000002854c7d: add    $0x8,%esi
  0x0000000002854c80: mov    %esi,0xdc(%r9)
  0x0000000002854c87: movabs $0x56b65050,%r9    ;   {metadata({method} {0x0000000056b65058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002854c91: and    $0x1ff8,%esi
  0x0000000002854c97: cmp    $0x0,%esi
  0x0000000002854c9a: je     0x0000000002854d48  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x0000000002854ca0: mov    %rdx,%r9
  0x0000000002854ca3: movabs $0x56daa210,%rsi   ;   {metadata(method data for {method} {0x0000000056b65058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002854cad: mov    0x8(%r9),%r9d
  0x0000000002854cb1: cmp    0x110(%rsi),%r9
  0x0000000002854cb8: jne    0x0000000002854cc7
  0x0000000002854cba: addq   $0x1,0x118(%rsi)
  0x0000000002854cc2: jmpq   0x0000000002854d2d
  0x0000000002854cc7: cmp    0x120(%rsi),%r9
  0x0000000002854cce: jne    0x0000000002854cdd
  0x0000000002854cd0: addq   $0x1,0x128(%rsi)
  0x0000000002854cd8: jmpq   0x0000000002854d2d
  0x0000000002854cdd: cmpq   $0x0,0x110(%rsi)
  0x0000000002854ce8: jne    0x0000000002854d01
  0x0000000002854cea: mov    %r9,0x110(%rsi)
  0x0000000002854cf1: movq   $0x1,0x118(%rsi)
  0x0000000002854cfc: jmpq   0x0000000002854d2d
  0x0000000002854d01: cmpq   $0x0,0x120(%rsi)
  0x0000000002854d0c: jne    0x0000000002854d25
  0x0000000002854d0e: mov    %r9,0x120(%rsi)
  0x0000000002854d15: movq   $0x1,0x128(%rsi)
  0x0000000002854d20: jmpq   0x0000000002854d2d
  0x0000000002854d25: addq   $0x1,0x108(%rsi)
  0x0000000002854d2d: mov    $0x0,%r9d          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x0000000002854d33: nop
  0x0000000002854d34: nop
  0x0000000002854d35: nop
  0x0000000002854d36: nop
  0x0000000002854d37: callq  0x00000000027861a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x0000000002854d3c: add    $0x30,%rsp
  0x0000000002854d40: pop    %rbp
  0x0000000002854d41: test   %eax,-0x2634c47(%rip)        # 0x0000000000220100
                                                ;   {poll_return}
  0x0000000002854d47: retq   
  0x0000000002854d48: mov    %r9,0x8(%rsp)
  0x0000000002854d4d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002854d55: callq  0x00000000028400a0  ; OopMap{rdx=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x0000000002854d5a: jmpq   0x0000000002854ca0
  0x0000000002854d5f: nop
  0x0000000002854d60: nop
  0x0000000002854d61: mov    0x2a8(%r15),%rax
  0x0000000002854d68: movabs $0x0,%r10
  0x0000000002854d72: mov    %r10,0x2a8(%r15)
  0x0000000002854d79: movabs $0x0,%r10
  0x0000000002854d83: mov    %r10,0x2b0(%r15)
  0x0000000002854d8a: add    $0x30,%rsp
  0x0000000002854d8e: pop    %rbp
  0x0000000002854d8f: jmpq   0x000000000283ace0  ;   {runtime_call}
  0x0000000002854d94: hlt    
  0x0000000002854d95: hlt    
  0x0000000002854d96: hlt    
  0x0000000002854d97: hlt    
  0x0000000002854d98: hlt    
  0x0000000002854d99: hlt    
  0x0000000002854d9a: hlt    
  0x0000000002854d9b: hlt    
  0x0000000002854d9c: hlt    
  0x0000000002854d9d: hlt    
  0x0000000002854d9e: hlt    
  0x0000000002854d9f: hlt    
[Stub Code]
  0x0000000002854da0: nop                       ;   {no_reloc}
  0x0000000002854da1: nop
  0x0000000002854da2: nop
  0x0000000002854da3: nop
  0x0000000002854da4: nop
  0x0000000002854da5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002854daf: jmpq   0x0000000002854daf  ;   {runtime_call}
[Exception Handler]
  0x0000000002854db4: callq  0x000000000283d860  ;   {runtime_call}
  0x0000000002854db9: mov    %rsp,-0x28(%rsp)
  0x0000000002854dbe: sub    $0x80,%rsp
  0x0000000002854dc5: mov    %rax,0x78(%rsp)
  0x0000000002854dca: mov    %rcx,0x70(%rsp)
  0x0000000002854dcf: mov    %rdx,0x68(%rsp)
  0x0000000002854dd4: mov    %rbx,0x60(%rsp)
  0x0000000002854dd9: mov    %rbp,0x50(%rsp)
  0x0000000002854dde: mov    %rsi,0x48(%rsp)
  0x0000000002854de3: mov    %rdi,0x40(%rsp)
  0x0000000002854de8: mov    %r8,0x38(%rsp)
  0x0000000002854ded: mov    %r9,0x30(%rsp)
  0x0000000002854df2: mov    %r10,0x28(%rsp)
  0x0000000002854df7: mov    %r11,0x20(%rsp)
  0x0000000002854dfc: mov    %r12,0x18(%rsp)
  0x0000000002854e01: mov    %r13,0x10(%rsp)
  0x0000000002854e06: mov    %r14,0x8(%rsp)
  0x0000000002854e0b: mov    %r15,(%rsp)
  0x0000000002854e0f: movabs $0x61388e30,%rcx   ;   {external_word}
  0x0000000002854e19: movabs $0x2854db9,%rdx    ;   {internal_word}
  0x0000000002854e23: mov    %rsp,%r8
  0x0000000002854e26: and    $0xfffffffffffffff0,%rsp
  0x0000000002854e2a: callq  0x0000000061043d40  ;   {runtime_call}
  0x0000000002854e2f: hlt    
[Deopt Handler Code]
  0x0000000002854e30: movabs $0x2854e30,%r10    ;   {section_word}
  0x0000000002854e3a: push   %r10
  0x0000000002854e3c: jmpq   0x0000000002787600  ;   {runtime_call}
  0x0000000002854e41: hlt    
  0x0000000002854e42: hlt    
  0x0000000002854e43: hlt    
  0x0000000002854e44: hlt    
  0x0000000002854e45: hlt    
  0x0000000002854e46: hlt    
  0x0000000002854e47: hlt    
