https://docs.oracle.com/javase/8/docs/technotes/guides/instrumentation/index.html

jvm agent 
-agentlib:libname[=options] jvm原生支持
比如在线的debug Java Debug Wire Protocol (JDWP)
-agentlib:jdwp=transport=dt_socket,server=y,address=8000
 开发agent 接口文档
 Agent Command Line Options in the JVM Tools Interface guide at http://docs.oracle.com/javase/8/docs/platform/jvmti/jvmti.html#starting
 
 
 java.lang.instrument 是java语言层面的对agent的支持
 The java.lang.instrument package description at http://docs.oracle.com/javase/8/docs/api/java/lang/instrument/package-summary.html
 
 Provides services that allow Java programming language agents to instrument programs running on the JVM. 
 The mechanism for instrumentation is modification of the byte-codes of methods.
 
 命令行
 -javaagent:jarpath[=options]
 jarpath is the path to the agent JAR file. options is the agent options.
 The manifest of the agent JAR file must contain the attribute Premain-Class. 
 The value of this attribute is the name of the agent class
 
 agent的时间节点
 
 1.(jvm初始化完成，main方法调用之前)After the Java Virtual Machine (JVM) has initialized, each premain method will be called in the order the agents were specified, 
 then the real application main method will be called
 
 public static void premain(String agentArgs, Instrumentation inst);
 public static void premain(String agentArgs);
 
 2.(jvm 启动完成，main方法已经被调用)
 after the the VM has started,typically the application has already started and its main method has already been invoked
 The manifest of the agent JAR must contain the attribute Agent-Class
 public static void agentmain(String agentArgs, Instrumentation inst);
 
 public static void agentmain(String agentArgs);
 
 两种时间节点的类加载器都是ClassLoader.getSystemClassLoader
 
 Manifest Attributes
 Premain-Class
When an agent is specified at JVM launch time this attribute specifies the agent class. That is, the class containing the premain method. When an agent is specified at JVM launch time this attribute is required. If the attribute is not present the JVM will abort. Note: this is a class name, not a file name or path.
Agent-Class
If an implementation supports a mechanism to start agents sometime after the VM has started then this attribute specifies the agent class. That is, the class containing the agentmain method. This attribute is required, if it is not present the agent will not be started. Note: this is a class name, not a file name or path.
Boot-Class-Path
A list of paths to be searched by the bootstrap class loader. Paths represent directories or libraries (commonly referred to as JAR or zip libraries on many platforms). These paths are searched by the bootstrap class loader after the platform specific mechanisms of locating a class have failed. Paths are searched in the order listed. Paths in the list are separated by one or more spaces. A path takes the syntax of the path component of a hierarchical URI. The path is absolute if it begins with a slash character ('/'), otherwise it is relative. A relative path is resolved against the absolute path of the agent JAR file. Malformed and non-existent paths are ignored. When an agent is started sometime after the VM has started then paths that do not represent a JAR file are ignored. This attribute is optional.