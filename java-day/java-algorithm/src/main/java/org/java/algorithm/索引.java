package org.java.algorithm;

public class 索引 {
	
	
	//hash
	
	//查找
	/*
	 * 顺序查找 效率低
	 * 
	 * 有序的数据     二分查找     --->二分查找树  (查找时间不稳定)
	 * 
	 * -->平衡树-->(左旋，右旋 操作大)----->红黑树(量大时，效率低)
	 * B树是为了提高磁盘或外部存储设备查找效率而产生的一种多路平衡查找树-->B树(磁盘等)
	 * -->B+树为B树的变形结构，用于大多数数据库或文件系统的存储而设计
	 * 数据库索引采用B+树的主要原因是 B树在提高了磁盘IO性能的同时并没有解决元素遍历的效率低下的问题。正是为了解决这个问题，
	 * B+树应运而生。B+树只要遍历叶子节点就可以实现整棵树的遍历。而且在数据库中基于范围的查询是非常频繁的，而B树不支持这样的操作（或者说效率太低）
	 * 
	 * 
	 * 
	 */
	

}
